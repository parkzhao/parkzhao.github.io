<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HaibinTalk</title>
  <subtitle>Focusing,Thinking,Doing</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.haibin.me/"/>
  <updated>2020-01-02T15:11:07.591Z</updated>
  <id>http://www.haibin.me/</id>
  
  <author>
    <name>haibin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020计划</title>
    <link href="http://www.haibin.me/2020/12/31/2020%E4%B8%AA%E4%BA%BA%E5%B7%A5%E4%BD%9C%E8%AE%A1%E5%88%92/"/>
    <id>http://www.haibin.me/2020/12/31/2020个人工作计划/</id>
    <published>2020-12-31T14:46:24.000Z</published>
    <updated>2020-01-02T15:11:07.591Z</updated>
    
    <content type="html"><![CDATA[<p>工作计划其实比较难写，目标定得太高，搭梯子都够不着，定得太低，很容易达到了又没有什么挑战，我个人以为，定计划是对自己重新认识的一个过程，通过定计划，我可以一点一点的靠近我的临界值。一点一点的认识到自己的边界在哪里。<br>我现在发现，个人计划是一个不断修正的过程，我们在确定总体目标后，要不停的对计划做修正，已达到自己期望的那个结果。<br>目标1: 加强自己的写作能力，固定微信公众号的更新频次，每个月四篇文章。<br>目标2: 把自己的知识分享出来，每个月录制一个教学视频，或者直播一次也可以。<br>目标3: 继续完善博文伴读的功能，优化现在已有的功能点。<br>目标4: 加强自己的阅读量,读20本(小说不算)，专业书籍6本，其余的随便，在博文伴读上面进行打卡。<br>目标5: 扩展自己的交际圈，认识一些新的朋友，至少认识6个新朋友。<br>目标6: 扩展自己的专业知识，增加自己的职业周期，在自己已有的知识的基础上，向移动端游戏开发(unity 3D)方向与移动端轻量级机器学习(TensorFlow Lite)上探索。<br>目标7: 培养一门爱好(画画)，水平能够达到初级水平。<br>目标8: 多陪伴家人，常回家看看。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;工作计划其实比较难写，目标定得太高，搭梯子都够不着，定得太低，很容易达到了又没有什么挑战，我个人以为，定计划是对自己重新认识的一个过程，通过定计划，我可以一点一点的靠近我的临界值。一点一点的认识到自己的边界在哪里。&lt;br&gt;我现在发现，个人计划是一个不断修正的过程，我们在确定
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>2019工作总结</title>
    <link href="http://www.haibin.me/2019/12/31/2019%E5%B7%A5%E4%BD%9C%E6%80%BB%E7%BB%93/"/>
    <id>http://www.haibin.me/2019/12/31/2019工作总结/</id>
    <published>2019-12-31T14:11:24.000Z</published>
    <updated>2020-01-02T14:19:47.003Z</updated>
    
    <content type="html"><![CDATA[<p>虽然2019年已经过去两天，由于拖延症的关系，总结迟迟没写。正好今天有时间，盘点一下我的2019年。<br>先说收获吧</p>
<ol>
<li>家庭迎来了第四位成员，我家闺女，特别的乖巧与可爱，首先特别感谢我的妻子，她为了我们这个家付出了很多，再次要感谢我的家人，以及帮助我的长辈和朋友，谢谢你们的援手与帮助。</li>
<li>我的第一个小程序，博文伴读终于上架了，虽然不完美，不管怎么说，自己用的还是不错的。</li>
<li>在个人成长方面，一直不停的学习，阅读了《游戏剧本怎么写》，《解码区块链全集》，在极客时间上听完的课程有《Flutter核心与实战》，《Android开发高手课》，《趣谈网络协议》，《从零开始学游戏开发》，《深入浅出区块链》当然又把有些课程给重新学习一回。</li>
</ol>
<p>然后谈谈遗憾的地方吧</p>
<ol>
<li>自己的职业发展比较曲折，发展的不是很好，一直在探索自己的方向，对方向现在还没有定性。</li>
<li>自己练手的游戏，《塔罗世界》夭折了，主要是自己的恒心不够，遇到困难就放弃了。搭建了一个大概的框架，基本玩法已经有了，剩下的工作，主要是对整个游戏的美化与丰富。</li>
<li>重要的知识点学习的不是很扎实。这个是比较的致命的，有些东西不会的还是不会。</li>
<li>没有认识什么新的朋友，自己的社交圈还是比较的窄。</li>
</ol>
<p>反正缺点还有很多很多，也不列举了，希望自己在新的2020年能够走得越来越好吧。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;虽然2019年已经过去两天，由于拖延症的关系，总结迟迟没写。正好今天有时间，盘点一下我的2019年。&lt;br&gt;先说收获吧&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;家庭迎来了第四位成员，我家闺女，特别的乖巧与可爱，首先特别感谢我的妻子，她为了我们这个家付出了很多，再次要感谢我的家人，以及帮助
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Flutter通过Mqtt消费ActivieMQ</title>
    <link href="http://www.haibin.me/2019/12/31/Flutter%E9%80%9A%E8%BF%87Mqtt%E6%B6%88%E8%B4%B9ActivieMQ/"/>
    <id>http://www.haibin.me/2019/12/31/Flutter通过Mqtt消费ActivieMQ/</id>
    <published>2019-12-31T03:22:13.000Z</published>
    <updated>2019-12-31T04:29:14.198Z</updated>
    
    <content type="html"><![CDATA[<p>Flutter通过mqtt消费activemq，在android端主要使用插件的方式进行</p>
<h1 id="处理流程"><a href="#处理流程" class="headerlink" title="处理流程"></a>处理流程</h1><p><img src="http://tp.linqmind.com/2019-12-31-042856.jpg" alt=""></p>
<h1 id="Android端连接MQTT"><a href="#Android端连接MQTT" class="headerlink" title="Android端连接MQTT"></a>Android端连接MQTT</h1><h2 id="插件端业务处理"><a href="#插件端业务处理" class="headerlink" title="插件端业务处理"></a>插件端业务处理</h2><h3 id="step1-配置插件依赖包"><a href="#step1-配置插件依赖包" class="headerlink" title="step1:配置插件依赖包"></a>step1:配置插件依赖包</h3><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'com.google.code.gson:gson:2.8.5'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'org.eclipse.paho:org.eclipse.paho.android.service:1.1.1'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'androidx.legacy:legacy-support-v4:1.0.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'androidx.appcompat:appcompat:1.1.0-rc01'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'androidx.constraintlayout:constraintlayout:1.1.3'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'androidx.recyclerview:recyclerview:1.0.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'androidx.multidex:multidex:2.0.1'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'androidx.multidex:multidex-instrumentation:2.0.0'</span></span><br><span class="line"><span class="keyword">implementation</span> <span class="string">'com.google.android.material:material:1.1.0-alpha08'</span></span><br></pre></td></tr></table></figure>
<h3 id="step2-实现连接方法"><a href="#step2-实现连接方法" class="headerlink" title="step2 实现连接方法"></a>step2 实现连接方法</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MqttClientPlugin</span> : <span class="type">MethodCallHandler &#123;</span></span></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onMethodCall</span><span class="params">(call: <span class="type">MethodCall</span>,     result: <span class="type">Result</span>)</span></span> &#123;</span><br><span class="line">        <span class="keyword">when</span> (call.method) &#123;</span><br><span class="line">            <span class="string">"connectMq"</span> -&gt; &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        connectToService()</span><br><span class="line">                        result.success(<span class="literal">true</span>)</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">                        e.printStackTrace()</span><br><span class="line">                        result.success(<span class="literal">false</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">connectToService</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> intent = Intent(context, MqttClientService::<span class="class"><span class="keyword">class</span>.<span class="title">java</span>)</span></span><br><span class="line">        <span class="keyword">this</span>.context?.startService(intent)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="step3-实现mqttclient服务"><a href="#step3-实现mqttclient服务" class="headerlink" title="step3 实现mqttclient服务"></a>step3 实现mqttclient服务</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MqTTClientService</span> : <span class="type">Service &#123;</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">val</span> TAG = <span class="string">"ActiveMQ"</span></span><br><span class="line">    <span class="keyword">val</span> clientId = <span class="string">"any_client_name"</span></span><br><span class="line">    <span class="keyword">val</span> serverURI = <span class="string">"tcp://192.168.0.201:1883"</span> <span class="comment">//replace with your ip</span></span><br><span class="line">    <span class="keyword">val</span> publishTopic = <span class="string">"outbox"</span></span><br><span class="line">    <span class="keyword">val</span> subscribeTopic = <span class="string">"TJ Test"</span></span><br><span class="line">    <span class="keyword">var</span> client: MqttAndroidClient? = <span class="literal">null</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">constructor</span>() : <span class="keyword">super</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> MY_ACTION = <span class="string">"MY_ACTION"</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> _currentV: <span class="built_in">Int</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onBind</span><span class="params">(intent: <span class="type">Intent</span>?)</span></span>: IBinder? &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onStartCommand</span><span class="params">(intent: <span class="type">Intent</span>?, flags: <span class="type">Int</span>, startId: <span class="type">Int</span>)</span></span>: <span class="built_in">Int</span> &#123;</span><br><span class="line">        <span class="keyword">val</span> myThread = MyThrad()</span><br><span class="line">        myThread.start()</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.onStartCommand(intent, flags, startId)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">subscribe</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            client?.subscribe(subscribeTopic, <span class="number">0</span>, IMqttMessageListener &#123; topic, message -&gt;</span><br><span class="line">                Log.i(<span class="string">"接收到监听的消息:"</span>, <span class="string">"<span class="subst">$&#123;message.payload&#125;</span>"</span>)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e: MqttException) &#123;</span><br><span class="line">            e.printStackTrace()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">MyThrad</span> : <span class="type">Thread</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">run</span><span class="params">()</span></span> &#123;</span><br><span class="line">            <span class="keyword">val</span> connectOptions = MqttConnectOptions()</span><br><span class="line">            connectOptions.isAutomaticReconnect = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">            client = MqttAndroidClient(<span class="keyword">this</span><span class="symbol">@MqTTClientService</span>.applicationContext, serverURI, clientId)</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                client?.connect(connectOptions, <span class="keyword">object</span> : IMqttActionListener &#123;</span><br><span class="line">                    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onSuccess</span><span class="params">(asyncActionToken: <span class="type">IMqttToken</span>)</span></span> &#123;</span><br><span class="line">                        subscribe()</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onFailure</span><span class="params">(asyncActionToken: <span class="type">IMqttToken</span>, e: <span class="type">Throwable</span>)</span></span> &#123;</span><br><span class="line">                        Log.i(<span class="string">"连接错误:"</span>, <span class="string">"<span class="subst">$&#123;e.message&#125;</span>"</span>)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: MqttException) &#123;</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">subscribe</span><span class="params">()</span></span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                client?.subscribe(subscribeTopic, <span class="number">0</span>) &#123; topic, message -&gt;</span><br><span class="line">                    <span class="comment">//通过广播发送监听到的消息</span></span><br><span class="line">                    <span class="keyword">val</span> intent = Intent()</span><br><span class="line">                    intent.action = MY_ACTION</span><br><span class="line">                    intent.putExtra(<span class="string">"DATAPASSED"</span>, message.toString())</span><br><span class="line">                    sendBroadcast(intent)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: MqttException) &#123;</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="step4监听广播"><a href="#step4监听广播" class="headerlink" title="step4监听广播"></a>step4监听广播</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DevicemanagerPlugin</span> : <span class="type">MethodCallHandler &#123;</span></span></span><br><span class="line">    <span class="keyword">constructor</span>(context: Context?, channel: MethodChannel) &#123;</span><br><span class="line">            <span class="keyword">this</span>.context = context</span><br><span class="line">            <span class="keyword">this</span>.channel = channel</span><br><span class="line">            initMqtt()</span><br><span class="line">            register()</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">register</span><span class="params">()</span></span> &#123;</span><br><span class="line">            myReceiver = MyReceiver()</span><br><span class="line">            <span class="keyword">val</span> intentFilter = IntentFilter()</span><br><span class="line">            intentFilter.addAction(<span class="string">"MY_ACTION"</span>)</span><br><span class="line">            <span class="keyword">this</span>.context?.registerReceiver(myReceiver, intentFilter)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">inner</span> <span class="class"><span class="keyword">class</span> <span class="title">MyReceiver</span> : <span class="type">BroadcastReceiver</span></span>() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onReceive</span><span class="params">(context: <span class="type">Context</span>?, intent: <span class="type">Intent</span>?)</span></span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">val</span> value = intent?.getStringExtra(<span class="string">"DATAPASSED"</span>)</span><br><span class="line">                <span class="comment">//将监听到的消息，通过methchannel传给flutter</span></span><br><span class="line">                channel?.invokeMethod(<span class="string">"receiveMsg"</span>, value)</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">                e.printStackTrace()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Flutter端业务处理"><a href="#Flutter端业务处理" class="headerlink" title="Flutter端业务处理"></a>Flutter端业务处理</h2><h3 id="实现receiveMsg方法"><a href="#实现receiveMsg方法" class="headerlink" title="实现receiveMsg方法"></a>实现receiveMsg方法</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> channel = <span class="keyword">const</span> MethodChannel(<span class="string">"mqttclient"</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_MyHomePageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">MyHomePage</span>&gt; </span>&#123;</span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">      registerMethod()</span><br><span class="line">      connectActiveMq()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> connectActiveMq() <span class="keyword">async</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Platform.isAndroid) &#123;</span><br><span class="line">      <span class="keyword">var</span> result = <span class="keyword">await</span> Devicemanager.connectMq(API.MQ_URI);</span><br><span class="line">      <span class="keyword">if</span> (result) &#123;</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">"mq链接成功"</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="built_in">print</span>(<span class="string">"mq链接失败"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">void</span> registerMethod() &#123;</span><br><span class="line">    channel.setMethodCallHandler((handler) &#123;</span><br><span class="line">      <span class="keyword">var</span> completer = <span class="keyword">new</span> Completer&lt;<span class="built_in">String</span>&gt;();</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (handler.method) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">"receiveMsg"</span>:</span><br><span class="line">            <span class="comment">//接收到的消息</span></span><br><span class="line">            <span class="keyword">var</span> v = handler.arguments;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        <span class="built_in">print</span>(e);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> completer.future;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Flutter通过mqtt消费activemq，在android端主要使用插件的方式进行&lt;/p&gt;
&lt;h1 id=&quot;处理流程&quot;&gt;&lt;a href=&quot;#处理流程&quot; class=&quot;headerlink&quot; title=&quot;处理流程&quot;&gt;&lt;/a&gt;处理流程&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>『译文』Queues vs. Topics vs. Virtual Topics (in ActiveMQ)</title>
    <link href="http://www.haibin.me/2019/12/16/Queues-vs-Topics-vs-Virtual-Topics-in-ActiveMQ/"/>
    <id>http://www.haibin.me/2019/12/16/Queues-vs-Topics-vs-Virtual-Topics-in-ActiveMQ/</id>
    <published>2019-12-16T14:05:31.000Z</published>
    <updated>2019-12-16T15:14:28.692Z</updated>
    
    <content type="html"><![CDATA[<p><code>ActiveMQ</code>提供了一种不同的消息模式，当队列(<code>queues</code>)和主题(<code>topics</code>)越来越流行的时候。<code>virtual topics</code>将两者很好的统一在了一起:多个消费者拥有自己的专属队列。</p>
<h1 id="Queues"><a href="#Queues" class="headerlink" title="Queues"></a>Queues</h1><p><img src="http://tp.linqmind.com/2019-12-16-141044.jpg" alt="队列"><br>队列(<code>queues</code>)作为一种最常见的消息模式被<code>ActiveMQ</code>实现.在消费者与生产者之间提供了一个直接的通道。生产者创建消息，消费者一个一个的读取，读取此消息后，该消息就消失了。如果多个消费者注册了同一个队列(<code>queues</code>),只有一个会获取到该消息。</p>
<h2 id="Pros"><a href="#Pros" class="headerlink" title="Pros"></a>Pros</h2><ul>
<li>简单的消息模式与一个透明的通信流。</li>
<li>可以通过把消息放回到队列中，恢复过来。</li>
</ul>
<h2 id="Cons"><a href="#Cons" class="headerlink" title="Cons"></a>Cons</h2><ul>
<li>只有一个消费者可以得到消息</li>
<li>意味着生产者和消费者之间的耦合,因为它是一个一对一的关系</li>
</ul>
<h1 id="Topics"><a href="#Topics" class="headerlink" title="Topics"></a>Topics</h1><p><img src="http://tp.linqmind.com/2019-12-16-141851.jpg" alt=""><br>主题(<code>Topics</code>)在一个生产者与多个消费者直接实现了一个一对多的通道。主题和队列不同，每一个消费者将会接收到生产者发送的消息。</p>
<h2 id="Pros-1"><a href="#Pros-1" class="headerlink" title="Pros"></a>Pros</h2><ul>
<li>多个消费者获取同一个消息</li>
<li>生产者与消费者之间解耦(发布订阅模式)</li>
</ul>
<h2 id="Cons-1"><a href="#Cons-1" class="headerlink" title="Cons"></a>Cons</h2><ul>
<li>更加复杂的通信流</li>
<li>相对于单个监听器，消息不能够被恢复</li>
</ul>
<h1 id="Virtual-Topics"><a href="#Virtual-Topics" class="headerlink" title="Virtual Topics"></a>Virtual Topics</h1><p><img src="http://tp.linqmind.com/2019-12-16-145734.jpg" alt=""></p>
<p>虚拟主题(<code>Virtual topics</code>) 将上面的两种进行了合并。当生产者发送了一个消息到一个主题, 消费者将从他们自己的队列中，获取一份消息拷贝。</p>
<h2 id="Pros-2"><a href="#Pros-2" class="headerlink" title="Pros"></a>Pros</h2><ul>
<li>单个消息可以被多个消费者获取。</li>
<li>生产者与消费者解耦,发布订阅模式(publish-and-subscribe pattern)</li>
<li>消息可以通过重新放回到队列中进行恢复。</li>
</ul>
<h2 id="Cons-2"><a href="#Cons-2" class="headerlink" title="Cons"></a>Cons</h2><ul>
<li>可能需要在节点进行额外的配置。</li>
</ul>
<h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>队列和主题,都有自己的缺点。队列耦合生产者和消费者,主题缺乏一个简单的方法来恢复单个消费者的错误。虚拟主题提供一个解决方案的问题。生产者和消费者是解耦的发布-订阅模式,错误恢复可以放在单个队列。</p>
<h1 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h1><p><a href="https://tuhrig.de/queues-vs-topics-vs-virtual-topics-in-activemq/" target="_blank" rel="noopener">https://tuhrig.de/queues-vs-topics-vs-virtual-topics-in-activemq/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;ActiveMQ&lt;/code&gt;提供了一种不同的消息模式，当队列(&lt;code&gt;queues&lt;/code&gt;)和主题(&lt;code&gt;topics&lt;/code&gt;)越来越流行的时候。&lt;code&gt;virtual topics&lt;/code&gt;将两者很好的统一在了一起:多个消费者拥
    
    </summary>
    
    
      <category term="ActiveMQ" scheme="http://www.haibin.me/tags/ActiveMQ/"/>
    
      <category term="Topic" scheme="http://www.haibin.me/tags/Topic/"/>
    
      <category term="Queues" scheme="http://www.haibin.me/tags/Queues/"/>
    
      <category term="Virtual Topics" scheme="http://www.haibin.me/tags/Virtual-Topics/"/>
    
  </entry>
  
  <entry>
    <title>小程序博文伴读</title>
    <link href="http://www.haibin.me/2019/11/29/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%8D%9A%E6%96%87%E4%BC%B4%E8%AF%BB/"/>
    <id>http://www.haibin.me/2019/11/29/小程序博文伴读/</id>
    <published>2019-11-29T09:42:31.000Z</published>
    <updated>2019-11-29T10:28:50.467Z</updated>
    
    <content type="html"><![CDATA[<p>自己抽空为小孩写了一个管理阅读时间的小程序《博文伴读》，自己用了，感觉还不错，共享出来，希望能够帮到各位宝爸，宝妈们，通过该小程序，能够清楚地去记录小孩在阅读的过程中的每一条记录。同时我也整理了一些书籍目录，共大家进行阅读参考。<br>欢迎大家通过微信扫码体验，遇到问题，希望大家通过客服联系我,希望大家用的开心。</p>
<div align="center"><br><img src="http://tp.linqmind.com/2019-11-29-gh_42be8749e7dd_344.jpeg" alt="博文伴读"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己抽空为小孩写了一个管理阅读时间的小程序《博文伴读》，自己用了，感觉还不错，共享出来，希望能够帮到各位宝爸，宝妈们，通过该小程序，能够清楚地去记录小孩在阅读的过程中的每一条记录。同时我也整理了一些书籍目录，共大家进行阅读参考。&lt;br&gt;欢迎大家通过微信扫码体验，遇到问题，希
    
    </summary>
    
    
      <category term="小程序" scheme="http://www.haibin.me/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="博文伴读" scheme="http://www.haibin.me/tags/%E5%8D%9A%E6%96%87%E4%BC%B4%E8%AF%BB/"/>
    
      <category term="时间记录" scheme="http://www.haibin.me/tags/%E6%97%B6%E9%97%B4%E8%AE%B0%E5%BD%95/"/>
    
      <category term="小孩阅读时间管理" scheme="http://www.haibin.me/tags/%E5%B0%8F%E5%AD%A9%E9%98%85%E8%AF%BB%E6%97%B6%E9%97%B4%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>rxjava2.0常用方法使用</title>
    <link href="http://www.haibin.me/2019/09/05/Rxjava2.0%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.haibin.me/2019/09/05/Rxjava2.0常用方法使用/</id>
    <published>2019-09-05T00:59:52.000Z</published>
    <updated>2019-09-05T01:05:30.323Z</updated>
    
    <content type="html"><![CDATA[<h1 id="zip的使用方法"><a href="#zip的使用方法" class="headerlink" title="zip的使用方法"></a>zip的使用方法</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Zip通过一个函数将多个Observable发送的事件结合到一起，然后发送这些组合到一起的事件. 它按照严格的顺序应用这个函数。它只发射与发射数据项最少的那个Observable一样多的数据 </p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p><img src="http://tp.linqmind.com/2018-09-12-071734.jpg" alt="Rxjava2 ZIP"><br>其中一根水管负责发送圆形事件 , 另外一根水管负责发送三角形事件 , 通过Zip操作符, 使得圆形事件 和三角形事件 合并为了一个矩形事件</p>
<h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><p>一个界面需要展示用户的一些信息, 而这些信息分别要从两个服务器接口中获取, 而只有当两个都获取到了之后才能进行展示。</p>
<h2 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">fun</span> <span class="title">getPledgeDetails</span><span class="params">(req: <span class="type">MortageDetailReq</span>)</span></span>: Observable&lt;PledgeDetail&gt;? &#123;</span><br><span class="line">        <span class="keyword">return</span> Observable.zip(httpHelper.getSupplementMortageDetail(req)</span><br><span class="line">                .compose(RxUtil.rxSchedulerHelper())</span><br><span class="line">                .compose(RxUtil.handleMyResult()),</span><br><span class="line">                httpHelper.doQueryMortageDetail(req)</span><br><span class="line">                        .compose(RxUtil.rxSchedulerHelper())</span><br><span class="line">                        .compose(RxUtil.handleMyResult()), BiFunction&lt;SupplementMortageDetailResp, MortageDetailResponse, PledgeDetail&gt; &#123; t1, t2 -&gt;</span><br><span class="line">            <span class="keyword">val</span> pledgeDetail = PledgeDetail()</span><br><span class="line">            pledgeDetail.mortageDetailResp = t2</span><br><span class="line">            pledgeDetail.supplementMortageDetailResp = t1</span><br><span class="line">            pledgeDetail</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h1 id="filter的使用方法"><a href="#filter的使用方法" class="headerlink" title="filter的使用方法"></a>filter的使用方法</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><p>使用filter对消息进行过滤</p>
<h2 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h2><p><img src="http://tp.linqmind.com/2018-09-12-075120.jpg" alt=""><br>该操作符用于过滤掉一些不需要的数据</p>
<h2 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h2><p>要对一个列表进行过滤操作，并将结果用户接下来的后续操作。</p>
<h2 id="实例代码-1"><a href="#实例代码-1" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> PublishSubject&lt;Long&gt; mCityPublish;</span><br><span class="line"></span><br><span class="line"><span class="comment">//监听网络变化</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">registerBroadcast</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    mReceiver = <span class="keyword">new</span> BroadcastReceiver () &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (mNetStatusPublish != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mNetStatusPublish.onNext(isNetworkConnected());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    IntentFilter filter = <span class="keyword">new</span> IntentFilter(ConnectivityManager.CONNECTIVITY_ACTION);</span><br><span class="line">    registerReceiver(mReceiver, filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//通过filter过滤掉网络未连接和未获取到缓存城市的列表</span></span><br><span class="line">mNetStatusPublish.filter(<span class="keyword">new</span> Predicate&lt;Boolean&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">test</span><span class="params">(Boolean aBoolean)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> aBoolean &amp;&amp; getCacheCity() &gt; <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;)</span><br></pre></td></tr></table></figure>
<h1 id="map的使用方法"><a href="#map的使用方法" class="headerlink" title="map的使用方法"></a>map的使用方法</h1><h2 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h2><p>对Observable发射的每一项数据应用一个函数，执行变换操作</p>
<ul>
<li>map返回的是结果集</li>
<li>map被订阅时每传递一个事件执行一次onNext方法</li>
<li>map只能单一转换，单一只的是只能一对一进行转换，指一个对象可以转化为另一个对象但是不能转换成对象数组（map返回结果集不能直接使用from/just再次进行事件分发，一旦转换成对象数组的话，再处理集合/数组的结果时需要利用for一一遍历取出，而使用RxJava就是为了剔除这样的嵌套结构，使得整体的逻辑性更强。）<h2 id="原理-2"><a href="#原理-2" class="headerlink" title="原理"></a>原理</h2><img src="http://tp.linqmind.com/2018-09-12-083105.jpg" alt=""><br>Map操作符对原始Observable发射的每一项数据应用一个你选择的函数，然后返回一个发射这些结果的Observable。<h2 id="使用场景-2"><a href="#使用场景-2" class="headerlink" title="使用场景"></a>使用场景</h2>map适用于一对一转换<h2 id="实例代码-2"><a href="#实例代码-2" class="headerlink" title="实例代码"></a>实例代码</h2></li>
<li><p>实例代码一</p>
<figure class="highlight zephir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Observable&lt;<span class="keyword">Long</span>&gt; getNetStatusPublish() &#123;</span><br><span class="line">        <span class="keyword">return</span> mNetStatusPublish.filter(<span class="keyword">new</span> Predicate&lt;<span class="keyword">Boolean</span>&gt;() &#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">boolean</span> test(<span class="keyword">Boolean</span> aBoolean) throws <span class="keyword">Exception</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> aBoolean &amp;&amp; getCacheCity() &gt; <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;).map(<span class="keyword">new</span> <span class="function"><span class="keyword">Function</span>&lt;<span class="title">Boolean</span>, <span class="title">Long</span>&gt;<span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">Long</span> apply(<span class="keyword">Boolean</span> aBoolean) throws <span class="keyword">Exception</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> getCacheCity();</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;).subscribeOn(Schedulers.io());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>实例代码二  </p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Action1&lt;<span class="built_in">List</span>&lt;Course&gt;&gt; action1 = <span class="keyword">new</span> Action1&lt;<span class="built_in">List</span>&lt;Course&gt;&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        public <span class="keyword">void</span> call(<span class="built_in">List</span>&lt;Course&gt; courses) &#123;</span><br><span class="line">            <span class="comment">//遍历courses，输出cuouses的name</span></span><br><span class="line">             <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; courses.size(); i++)&#123;</span><br><span class="line">                Log.i(TAG, courses.<span class="keyword">get</span>(i).getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Observable.from(students)</span><br><span class="line">            .map(<span class="keyword">new</span> Func1&lt;Student, <span class="built_in">List</span>&lt;Course&gt;&gt;() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                public <span class="built_in">List</span>&lt;Course&gt; call(Student student) &#123;</span><br><span class="line">                    <span class="comment">//返回coursesList</span></span><br><span class="line">                    <span class="keyword">return</span> student.getCoursesList();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .subscribe(action1);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="flatmap的使用方法"><a href="#flatmap的使用方法" class="headerlink" title="flatmap的使用方法"></a>flatmap的使用方法</h1><h2 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h2><p>FlatMap将一个发射数据的Observable变换为多个Observables，然后将它们发射的数据合并后放进一个单独的Observable</p>
<ul>
<li>flatmap返回的是包含结果集的Observable</li>
<li>flatmap多用于多对多，一对多，再被转化为多个时，一般利用from/just进行一一分发，被订阅时将所有数据传递完毕汇总到一个Observable然后一一执行onNext方法（执行顺序不同）&gt;&gt;&gt;&gt;(如单纯用于一对一转换则和map相同)</li>
<li>flatmap既可以单一转换也可以一对多/多对多转换，flatmap要求返回Observable，因此可以再内部进行from/just的再次事件分发，一一取出单一对象（转换对象的能力不同）<h2 id="原理-3"><a href="#原理-3" class="headerlink" title="原理"></a>原理</h2><img src="http://tp.linqmind.com/2018-09-12-084745.jpg" alt=""><br>FlatMap操作符使用一个指定的函数对原始Observable发射的每一项数据执行变换操作，这个函数返回一个本身也发射数据的Observable，然后FlatMap合并这些Observables发射的数据，最后将合并后的结果当做它自己的数据序列发射。<h2 id="使用场景-3"><a href="#使用场景-3" class="headerlink" title="使用场景"></a>使用场景</h2>flatmap适用于一对多，多对多的场景<h2 id="实例代码-3"><a href="#实例代码-3" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Observable.<span class="keyword">from</span>(students)</span><br><span class="line">            .flatMap(<span class="keyword">new</span> Func1&lt;Student, Observable&lt;Course&gt;&gt;() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="function"><span class="keyword">public</span> Observable&lt;Course&gt; <span class="title">call</span>(<span class="params">Student student</span>)</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> Observable.<span class="keyword">from</span>(student.getCoursesList());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .subscribe(<span class="keyword">new</span> Action1&lt;Course&gt;() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">call</span>(<span class="params">Course course</span>)</span> &#123;</span><br><span class="line">                    Log.i(TAG, course.getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="create的使用方法"><a href="#create的使用方法" class="headerlink" title="create的使用方法"></a>create的使用方法</h1><h2 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h2><p>使用一个函数从头开始创建一个Observable</p>
<h2 id="原理-4"><a href="#原理-4" class="headerlink" title="原理"></a>原理</h2><p><img src="http://tp.linqmind.com/2018-09-12-090209.jpg" alt=""><br>Create操作符从头开始创建一个Observable，给这个操作符传递一个接受观察者作为参数的函数，编写这个函数让它的行为表现为一个Observable–恰当的调用观察者的onNext，onError和onCompleted方法。<br>一个形式正确的有限Observable必须尝试调用观察者的onCompleted正好一次或者它的onError正好一次，而且此后不能再调用观察者的任何其它方法。</p>
<h2 id="使用场景-4"><a href="#使用场景-4" class="headerlink" title="使用场景"></a>使用场景</h2><p>图片压缩，视频压缩，封装成单独的方法，这样可以使用create方法，结果返回一个Observable</p>
<h2 id="实例代码-4"><a href="#实例代码-4" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Observable.create(<span class="keyword">new</span> Observable.OnSubscribe&lt;Integer&gt;() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">(Subscriber&lt;? <span class="keyword">super</span> Integer&gt; observer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!observer.isUnsubscribed()) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">                    observer.onNext(i);</span><br><span class="line">                &#125;</span><br><span class="line">                observer.onCompleted();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            observer.onError(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> &#125; ).subscribe(<span class="keyword">new</span> Subscriber&lt;Integer&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onNext</span><span class="params">(Integer item)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Next: "</span> + item);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable <span class="keyword">error</span>)</span> </span>&#123;</span><br><span class="line">            System.err.println(<span class="string">"Error: "</span> + <span class="keyword">error</span>.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Sequence complete."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>
<h1 id="from的使用方法"><a href="#from的使用方法" class="headerlink" title="from的使用方法"></a>from的使用方法</h1><h2 id="概述-5"><a href="#概述-5" class="headerlink" title="概述"></a>概述</h2><p>将其它种类的对象和数据类型转换为Observable</p>
<h2 id="原理-5"><a href="#原理-5" class="headerlink" title="原理"></a>原理</h2><p><img src="http://tp.linqmind.com/2018-09-12-090954.jpg" alt=""></p>
<p>Iterable可以看成是同步的Observable；Future，可以看成是总是只发射单个数据的Observable。通过显式地将那些数据转换为Observables，你可以像使用Observable一样与它们交互。<br>因此，大部分ReactiveX实现都提供了将语言特定的对象和数据结构转换为Observables的方法</p>
<h2 id="使用场景-5"><a href="#使用场景-5" class="headerlink" title="使用场景"></a>使用场景</h2><p>当你使用Observable时，如果你要处理的数据都可以转换成展现为Observables，而不是需要混合使用Observables和其它类型的数据，会非常方便。这让你在数据流的整个生命周期中，可以使用一组统一的操作符来管理它们。</p>
<h2 id="实例代码-5"><a href="#实例代码-5" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Integer[] items = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">Observable myObservable = Observable.from(items);</span><br><span class="line"></span><br><span class="line">myObservable.subscribe(</span><br><span class="line">    <span class="keyword">new</span> Action1&lt;Integer&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">(Integer item)</span> </span>&#123;</span><br><span class="line">            System.out.println(item);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">new</span> Action1&lt;Throwable&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">(Throwable <span class="keyword">error</span>)</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Error encountered: "</span> + <span class="keyword">error</span>.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">new</span> Action0() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">call</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            System.out.println(<span class="string">"Sequence complete"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ul>
<li><a href="https://mcxiaoke.gitbooks.io/rxdocs/content/" target="_blank" rel="noopener">ReactiveX/RxJava文档中文版</a></li>
<li><a href="https://www.jianshu.com/p/f00d9c51b65e" target="_blank" rel="noopener">RxJava2 实战系列文章</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;zip的使用方法&quot;&gt;&lt;a href=&quot;#zip的使用方法&quot; class=&quot;headerlink&quot; title=&quot;zip的使用方法&quot;&gt;&lt;/a&gt;zip的使用方法&lt;/h1&gt;&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
    
      <category term="java" scheme="http://www.haibin.me/tags/java/"/>
    
      <category term="android" scheme="http://www.haibin.me/tags/android/"/>
    
      <category term="rxjava2.0" scheme="http://www.haibin.me/tags/rxjava2-0/"/>
    
      <category term="rxjava" scheme="http://www.haibin.me/tags/rxjava/"/>
    
  </entry>
  
  <entry>
    <title>android保存图片到相册</title>
    <link href="http://www.haibin.me/2019/08/23/android%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87%E5%88%B0%E7%9B%B8%E5%86%8C/"/>
    <id>http://www.haibin.me/2019/08/23/android保存图片到相册/</id>
    <published>2019-08-23T06:53:26.000Z</published>
    <updated>2019-08-23T07:01:31.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>我们在开发应用的时候，会有保存图片到相册的功能。</p>
<h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.READ_EXTERNAL_STORAGE"</span>/&gt;</span><br><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure>
<h2 id="关键代码"><a href="#关键代码" class="headerlink" title="关键代码"></a>关键代码</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">fun getGalleryPath(context: Context)  = buildString &#123;</span><br><span class="line">        <span class="keyword">append</span>(Environment.getExternalStorageDirectory())</span><br><span class="line">        <span class="keyword">append</span>(<span class="keyword">File</span>.separator)</span><br><span class="line">        <span class="keyword">append</span>(Environment.DIRECTORY_DCIM)</span><br><span class="line">        <span class="keyword">append</span>(<span class="keyword">File</span>.separator)</span><br><span class="line">        <span class="keyword">append</span>(<span class="string">"Camera"</span>)</span><br><span class="line">        <span class="keyword">append</span>(<span class="keyword">File</span>.separator)</span><br><span class="line">    &#125;</span><br><span class="line">AsyncTask.execute &#123;</span><br><span class="line">                    Runnable &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            val <span class="keyword">file</span> = <span class="keyword">File</span>(buildString &#123;</span><br><span class="line">                                <span class="keyword">append</span>(DirectoryUtils.getGalleryPath(<span class="keyword">this</span>@ChargeActivity))</span><br><span class="line">                                <span class="keyword">append</span>(imageName)</span><br><span class="line">                            &#125;)</span><br><span class="line">                            <span class="keyword">if</span> (<span class="keyword">file</span>.exists())</span><br><span class="line">                                <span class="keyword">file</span>.<span class="keyword">delete</span>()</span><br><span class="line">                            <span class="keyword">file</span>.createNewFile()</span><br><span class="line">                            val fos = FileOutputStream(<span class="keyword">file</span>)</span><br><span class="line">                            qrBitmap?.compress(Bitmap.CompressFormat.PNG, <span class="number">100</span>, fos)</span><br><span class="line">                            fos.flush()</span><br><span class="line">                            fos.close()</span><br><span class="line">                            runOnUiThread &#123;</span><br><span class="line">                                ToastUtil.shortShow(<span class="string">"图片$&#123;file&#125;已经保存"</span>)</span><br><span class="line">                            &#125;</span><br><span class="line">                            val intent = Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE)</span><br><span class="line">                            val uri = Uri.fromFile(<span class="keyword">file</span>)</span><br><span class="line">                            intent.data = uri</span><br><span class="line">                            sendBroadcast(intent)</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (e: Exception) &#123;</span><br><span class="line">                            e.printStackTrace()</span><br><span class="line">                            runOnUiThread &#123;</span><br><span class="line">                                ToastUtil.shortShow(<span class="string">"保存图片失败"</span>)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;.run()</span><br><span class="line">                &#125;</span><br></pre></td></tr></table></figure>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>有时候我们调用了保存图片到相册的方法，我们选择图片的时候，找不到相关图片，添加下面代码即可。这样在图片文件件中就可以看见了。<br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">val <span class="keyword">intent</span> = <span class="keyword">Intent</span>(<span class="keyword">Intent</span>.ACTION_MEDIA_SCANNER_SCAN_FILE)</span><br><span class="line">val uri = Uri.fromFile(<span class="keyword">file</span>)</span><br><span class="line"><span class="keyword">intent</span>.<span class="keyword">data</span> = uri</span><br><span class="line">sendBroadcast(<span class="keyword">intent</span>)</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;我们在开发应用的时候，会有保存图片到相册的功能。&lt;/p&gt;
&lt;h1 id=&quot;实现&quot;&gt;&lt;a href=&quot;#实现&quot; class=&quot;headerli
    
    </summary>
    
    
      <category term="kotlin" scheme="http://www.haibin.me/tags/kotlin/"/>
    
      <category term="java" scheme="http://www.haibin.me/tags/java/"/>
    
      <category term="android" scheme="http://www.haibin.me/tags/android/"/>
    
      <category term="相册" scheme="http://www.haibin.me/tags/%E7%9B%B8%E5%86%8C/"/>
    
      <category term="保存图片" scheme="http://www.haibin.me/tags/%E4%BF%9D%E5%AD%98%E5%9B%BE%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>android构建速度优化</title>
    <link href="http://www.haibin.me/2019/08/22/android%E6%9E%84%E5%BB%BA%E9%80%9F%E5%BA%A6%E4%BC%98%E5%8C%96/"/>
    <id>http://www.haibin.me/2019/08/22/android构建速度优化/</id>
    <published>2019-08-22T09:23:17.000Z</published>
    <updated>2019-08-22T09:36:22.741Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><code>Android Studio</code> 开发，到了构建阶段，是一个漫长的过程，当然优化的方式有很多中，我们就从gradle配置方面来进行初步的优化  </p>
<h1 id="gradle-配置"><a href="#gradle-配置" class="headerlink" title="gradle 配置"></a>gradle 配置</h1><p>由于默认的新建的工程，在构建的话，比较耗时步骤</p>
<ul>
<li>下载<code>gradle</code></li>
<li>同步相关包<br>对于上面的情况，首先可以手动下载gralde安装包，然后解压，在<code>android studio</code>中设置<code>gralde</code>路径 <h2 id="设置本地的gradle"><a href="#设置本地的gradle" class="headerlink" title="设置本地的gradle"></a>设置本地的<code>gradle</code></h2><img src="http://tp.linqmind.com/2019-08-22-092817.jpg" alt=""><h2 id="启用内部的maven仓库"><a href="#启用内部的maven仓库" class="headerlink" title="启用内部的maven仓库"></a>启用内部的maven仓库</h2><img src="http://tp.linqmind.com/2019-08-22-092944.jpg" alt=""><h2 id="设置maven仓库为国内的aliyun"><a href="#设置maven仓库为国内的aliyun" class="headerlink" title="设置maven仓库为国内的aliyun"></a>设置maven仓库为国内的<code>aliyun</code></h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">allprojects </span>&#123;</span><br><span class="line">    <span class="class">repositories </span>&#123;</span><br><span class="line">        mavenLocal()</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://maven.aliyun.com/repository/apache-snapshots"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://maven.aliyun.com/repository/google"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://maven.aliyun.com/repository/central"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://maven.aliyun.com/repository/gradle-plugin"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://maven.aliyun.com/repository/jcenter"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://maven.aliyun.com/repository/spring"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"http://maven.aliyun.com/nexus/content/repositories/releases/"</span> &#125;</span><br><span class="line">        <span class="class">maven </span>&#123; url <span class="string">"https://jitpack.io"</span> &#125;</span><br><span class="line">        google()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>希望<code>google</code>能够把<code>android studio</code>的调试和构建的时间，优化的好点~~~~。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;code&gt;Android Studio&lt;/code&gt; 开发，到了构建阶段，是一个漫长的过程，当然优化的方式有很多中，我们就从gradle配
    
    </summary>
    
    
      <category term="android" scheme="http://www.haibin.me/tags/android/"/>
    
      <category term="gradle" scheme="http://www.haibin.me/tags/gradle/"/>
    
      <category term="构建速度" scheme="http://www.haibin.me/tags/%E6%9E%84%E5%BB%BA%E9%80%9F%E5%BA%A6/"/>
    
      <category term="android studio" scheme="http://www.haibin.me/tags/android-studio/"/>
    
  </entry>
  
  <entry>
    <title>android手机通讯录读取</title>
    <link href="http://www.haibin.me/2019/08/22/android%E6%89%8B%E6%9C%BA%E9%80%9A%E8%AE%AF%E5%BD%95%E8%8E%B7%E5%8F%96/"/>
    <id>http://www.haibin.me/2019/08/22/android手机通讯录获取/</id>
    <published>2019-08-22T07:46:27.000Z</published>
    <updated>2019-08-22T07:56:05.661Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>在App开发过程中，如果要实现电话号码的选择，但是默认的通讯录选择又不满足我们需求的时候，我们就需要对用户的通讯录进行读取。</p>
<h1 id="相关知识点"><a href="#相关知识点" class="headerlink" title="相关知识点"></a>相关知识点</h1><p><code>Java</code> <code>kotlin</code> <code>Rxjava</code></p>
<h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><h2 id="权限配置-AndroidManifest-xml"><a href="#权限配置-AndroidManifest-xml" class="headerlink" title="权限配置 AndroidManifest.xml"></a>权限配置 <code>AndroidManifest.xml</code></h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.READ_CONTACTS"</span>/&gt;</span><br><span class="line">&lt;uses-permission android:<span class="attribute">name</span>=<span class="string">"android.permission.WRITE_CONTACTS"</span>/&gt;</span><br></pre></td></tr></table></figure>
<h2 id="代码实现片段"><a href="#代码实现片段" class="headerlink" title="代码实现片段"></a>代码实现片段</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 获取通讯录</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">fun</span> <span class="title">getContacts</span><span class="params">(context: <span class="type">Context</span>)</span></span>: Observable&lt;List&lt;ContactBean&gt;&gt; &#123;</span><br><span class="line">       <span class="keyword">return</span> Observable.create(<span class="keyword">object</span> : ObservableOnSubscribe&lt;List&lt;ContactBean&gt;&gt; &#123;</span><br><span class="line">           <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">subscribe</span><span class="params">(emitter: <span class="type">ObservableEmitter</span>&lt;<span class="type">List</span>&lt;<span class="type">ContactBean</span>&gt;&gt;)</span></span> &#123;</span><br><span class="line">               <span class="keyword">val</span> contactBeen = ArrayList&lt;ContactBean&gt;()</span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="comment">//得到ContentResolver对象</span></span><br><span class="line">                   <span class="keyword">val</span> cr = context.contentResolver</span><br><span class="line">                   <span class="comment">//取得电话本中开始一项的光标</span></span><br><span class="line">                   <span class="keyword">val</span> cursor = cr.query(ContactsContract.Contacts.CONTENT_URI, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">                   <span class="keyword">if</span> (cursor == <span class="literal">null</span>) &#123;</span><br><span class="line">                       emitter.onError(AppException(<span class="string">"无法获取通讯录"</span>))</span><br><span class="line">                       <span class="keyword">return</span></span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="comment">//向下移动光标</span></span><br><span class="line">                   <span class="keyword">while</span> (cursor.moveToNext()) &#123;</span><br><span class="line">                       <span class="comment">//取得联系人名字</span></span><br><span class="line">                       <span class="keyword">val</span> nameFieldColumnIndex = cursor.getColumnIndex(ContactsContract.PhoneLookup.DISPLAY_NAME)</span><br><span class="line">                       <span class="keyword">val</span> contact = cursor.getString(nameFieldColumnIndex)</span><br><span class="line">                       <span class="comment">// 获得联系人的ID号</span></span><br><span class="line">                       <span class="keyword">val</span> contactId = cursor.getString(cursor.getColumnIndex(ContactsContract.Contacts._ID))</span><br><span class="line">                       <span class="comment">//取得电话号码</span></span><br><span class="line">                       <span class="keyword">val</span> phone = cr.query(</span><br><span class="line">                           ContactsContract.CommonDataKinds.Phone.CONTENT_URI,</span><br><span class="line">                           <span class="literal">null</span>,</span><br><span class="line">                           ContactsContract.CommonDataKinds.Phone.CONTACT_ID + <span class="string">"="</span> + contactId,</span><br><span class="line">                           <span class="literal">null</span>,</span><br><span class="line">                           <span class="literal">null</span></span><br><span class="line">                       )</span><br><span class="line">                       <span class="keyword">val</span> phones = ArrayList&lt;String&gt;()</span><br><span class="line">                       <span class="keyword">while</span> (phone!!.moveToNext()) &#123;</span><br><span class="line">                           <span class="keyword">var</span> phoneNumber =</span><br><span class="line">                               phone.getString(phone.getColumnIndex(ContactsContract.CommonDataKinds.Phone.NUMBER))</span><br><span class="line">                           <span class="comment">//格式化手机号</span></span><br><span class="line">                           phoneNumber = phoneNumber.replace(<span class="string">"-"</span>, <span class="string">""</span>)</span><br><span class="line">                           phoneNumber = phoneNumber.replace(<span class="string">" "</span>, <span class="string">""</span>)</span><br><span class="line">                           phones.add(phoneNumber)</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="comment">// 获取备注信息</span></span><br><span class="line">                       <span class="keyword">val</span> notes = context.contentResolver.query(</span><br><span class="line">                           ContactsContract.Data.CONTENT_URI,</span><br><span class="line">                           arrayOf(ContactsContract.Data._ID, ContactsContract.CommonDataKinds.Note.NOTE),</span><br><span class="line">                           ContactsContract.Data.CONTACT_ID + <span class="string">"=?"</span> + <span class="string">" AND "</span> + ContactsContract.Data.MIMETYPE + <span class="string">"='"</span></span><br><span class="line">                                   + ContactsContract.CommonDataKinds.Note.CONTENT_ITEM_TYPE + <span class="string">"'"</span>,</span><br><span class="line">                           arrayOf(contactId),</span><br><span class="line">                           <span class="literal">null</span></span><br><span class="line">                       )</span><br><span class="line">                       <span class="keyword">var</span> noteInfo: String? = <span class="literal">null</span></span><br><span class="line">                       <span class="keyword">if</span> (notes!!.moveToFirst()) &#123;</span><br><span class="line">                           <span class="keyword">do</span> &#123;</span><br><span class="line">                               noteInfo =</span><br><span class="line">                                   notes.getString(notes.getColumnIndex(ContactsContract.CommonDataKinds.Note.NOTE))</span><br><span class="line">                           &#125; <span class="keyword">while</span> (notes.moveToNext())</span><br><span class="line">                       &#125;</span><br><span class="line">                       notes.close()</span><br><span class="line">                       contactBeen.add(ContactBean(contact, phones, noteInfo))</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (e: java.lang.Exception) &#123;</span><br><span class="line">                   e.printStackTrace()</span><br><span class="line">               &#125;</span><br><span class="line">               emitter.onNext(contactBeen)</span><br><span class="line">               emitter.onComplete()</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>对于读取用户的私密信息，如非必要，千万不能滥用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;在App开发过程中，如果要实现电话号码的选择，但是默认的通讯录选择又不满足我们需求的时候，我们就需要对用户的通讯录进行读取。&lt;/p&gt;
&lt;h1
    
    </summary>
    
    
      <category term="Android" scheme="http://www.haibin.me/tags/Android/"/>
    
      <category term="kotlin" scheme="http://www.haibin.me/tags/kotlin/"/>
    
      <category term="rxjava" scheme="http://www.haibin.me/tags/rxjava/"/>
    
      <category term="Java" scheme="http://www.haibin.me/tags/Java/"/>
    
      <category term="通讯录" scheme="http://www.haibin.me/tags/%E9%80%9A%E8%AE%AF%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>android手机消息监听</title>
    <link href="http://www.haibin.me/2019/08/16/android%E6%89%8B%E6%9C%BA%E6%B6%88%E6%81%AF%E7%9B%91%E5%90%AC/"/>
    <id>http://www.haibin.me/2019/08/16/android手机消息监听/</id>
    <published>2019-08-16T08:36:29.000Z</published>
    <updated>2019-08-16T08:54:21.048Z</updated>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>以前做了个项目，客户要求对手机的消息进行监听，并通过监听的消息，推送到智能手环，要如何实现，经过查找发现，我们可以监听通知栏的消息，然后再根据通知栏的消息按照相关类型进行推送。</p>
<h1 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h1><p>java,kotlin,android,</p>
<h1 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h1><h2 id="建立监听通知消息的Service"><a href="#建立监听通知消息的Service" class="headerlink" title="建立监听通知消息的Service"></a>建立监听通知消息的<code>Service</code></h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotificationCollectorService</span> <span class="keyword"><span class="keyword">extends</span> <span class="type">NotificationListenerService</span></span> </span>&#123;</span><br><span class="line">    <span class="comment">//来通知时的调用</span></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> void onNotificationPosted(StatusBarNotification sbn) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onNotificationPosted(sbn);</span><br><span class="line">        Notification notification = sbn.getNotification();</span><br><span class="line">        <span class="keyword">if</span> (notification == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Bundle extras = notification.extras;</span><br><span class="line">        <span class="keyword">String</span> content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (extras != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取通知标题</span></span><br><span class="line">            <span class="keyword">String</span> title = extras.getString(Notification.EXTRA_TITLE, <span class="string">""</span>);</span><br><span class="line">            <span class="comment">// 获取通知内容</span></span><br><span class="line">            content = extras.getString(Notification.EXTRA_TEXT, <span class="string">""</span>);</span><br><span class="line">            Log.i(<span class="string">"包名："</span>, sbn.getPackageName() + <span class="string">"标题:"</span> + title + <span class="string">"内容:"</span> + content);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (sbn.getPackageName()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.tencent.mm"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"微信"</span>, content);</span><br><span class="line">                EventBus.getDefault().post(<span class="keyword">new</span> <span class="type">BusEventExtBean</span>&lt;<span class="keyword">String</span>&gt;(BusEventType.WECHAT, content));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.android.mms"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"短信信"</span>, content);</span><br><span class="line">                EventBus.getDefault().post(<span class="keyword">new</span> <span class="type">BusEventExtBean</span>&lt;<span class="keyword">String</span>&gt;(BusEventType.SMS, content));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.tencent.mobileqq"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"qq"</span>, content);</span><br><span class="line">                EventBus.getDefault().post(<span class="keyword">new</span> <span class="type">BusEventExtBean</span>&lt;<span class="keyword">String</span>&gt;(BusEventType.QQ, content));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.tencent.tim"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"tim"</span>, content);</span><br><span class="line">                EventBus.getDefault().post(<span class="keyword">new</span> <span class="type">BusEventExtBean</span>&lt;<span class="keyword">String</span>&gt;(BusEventType.TIM, content));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.android.incallui"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"电话"</span>, content);</span><br><span class="line">                EventBus.getDefault().post(<span class="keyword">new</span> <span class="type">BusEventExtBean</span>&lt;<span class="keyword">String</span>&gt;(BusEventType.CALL, content));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除通知时的调用</span></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> void onNotificationRemoved(StatusBarNotification sbn) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onNotificationRemoved(sbn);</span><br><span class="line">        Notification notification = sbn.getNotification();</span><br><span class="line">        <span class="keyword">if</span> (notification == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Bundle extras = notification.extras;</span><br><span class="line">        <span class="keyword">String</span> content = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (extras != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 获取通知标题</span></span><br><span class="line">            <span class="keyword">String</span> title = extras.getString(Notification.EXTRA_TITLE, <span class="string">""</span>);</span><br><span class="line">            <span class="comment">// 获取通知内容</span></span><br><span class="line">            content = extras.getString(Notification.EXTRA_TEXT, <span class="string">""</span>);</span><br><span class="line">            Log.i(<span class="string">"删包名："</span>, sbn.getPackageName() + <span class="string">"标题:"</span> + title + <span class="string">"内容:"</span> + content);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (sbn.getPackageName()) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.tencent.mm"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"删微信"</span>, content);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.android.mms"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"删短信"</span>, content);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.tencent.mqq"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"删qq"</span>, content);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.tencent.tim"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"删tim"</span>, content);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"com.android.incallui"</span>:<span class="type"></span></span><br><span class="line"><span class="type">                Log</span>.i(<span class="string">"删电话"</span>, content);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在AndroidManifest-xml中设置service"><a href="#在AndroidManifest-xml中设置service" class="headerlink" title="在AndroidManifest.xml中设置service"></a>在<code>AndroidManifest.xml</code>中设置service</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:name</span>=<span class="string">".service.NotificationCollectorService"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:permission</span>=<span class="string">"android.permission.BIND_NOTIFICATION_LISTENER_SERVICE"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.service.notification.NotificationListenerService"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="在相关页面设置监听"><a href="#在相关页面设置监听" class="headerlink" title="在相关页面设置监听"></a>在相关页面设置监听</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!isNotificationListenerEnabled(<span class="built_in">this</span>)) &#123;</span><br><span class="line">    openNotificationListenSettings();</span><br><span class="line">&#125;</span><br><span class="line">toggleNotificationListenerService();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> boolean isNotificationListenerEnabled(Context context) &#123;</span><br><span class="line">    Set&lt;<span class="keyword">String</span>&gt; packageNames = NotificationManagerCompat.getEnabledListenerPackages(<span class="built_in">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (packageNames.contains(context.getPackageName())) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//把应用的NotificationListenerService实现类disable再enable，即可触发系统rebind操作</span></span><br><span class="line">    <span class="keyword">private</span> void toggleNotificationListenerService() &#123;</span><br><span class="line">        PackageManager pm = getPackageManager();</span><br><span class="line">        pm.setComponentEnabledSetting(</span><br><span class="line">                <span class="keyword">new</span> <span class="type">ComponentName</span>(<span class="built_in">this</span>, NotificationCollectorService.class),</span><br><span class="line">                PackageManager.COMPONENT_ENABLED_STATE_DISABLED, PackageManager.DONT_KILL_APP);</span><br><span class="line"></span><br><span class="line">        pm.setComponentEnabledSetting(</span><br><span class="line">                <span class="keyword">new</span> <span class="type">ComponentName</span>(<span class="built_in">this</span>, NotificationCollectorService.class),</span><br><span class="line">                PackageManager.COMPONENT_ENABLED_STATE_ENABLED, PackageManager.DONT_KILL_APP);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> void openNotificationListenSettings() &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Intent intent;</span><br><span class="line">            <span class="keyword">if</span> (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.LOLLIPOP_MR1) &#123;</span><br><span class="line">                intent = <span class="keyword">new</span> <span class="type">Intent</span>(Settings.ACTION_NOTIFICATION_LISTENER_SETTINGS);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                intent = <span class="keyword">new</span> <span class="type">Intent</span>(<span class="string">"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">            startActivity(intent);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ActivityNotFoundException e) &#123;<span class="comment">//普通情况下找不到的时候需要再特殊处理找一次</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Intent intent = <span class="keyword">new</span> <span class="type">Intent</span>();</span><br><span class="line">                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);</span><br><span class="line">                ComponentName cn = <span class="keyword">new</span> <span class="type">ComponentName</span>(<span class="string">"com.android.settings"</span>, <span class="string">"com.android.settings.Settings$NotificationAccessSettingsActivity"</span>);</span><br><span class="line">                intent.setComponent(cn);</span><br><span class="line">                intent.putExtra(<span class="string">":settings:show_fragment"</span>, <span class="string">"NotificationAccessSettings"</span>);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (Exception e1) &#123;</span><br><span class="line">                e1.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            Toast.makeText(<span class="built_in">this</span>, <span class="string">"对不起，您的手机暂不支持"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>这里要注意的是，这些设置添加了后，需要用户重新安装<code>App</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;以前做了个项目，客户要求对手机的消息进行监听，并通过监听的消息，推送到智能手环，要如何实现，经过查找发现，我们可以监听通知栏的消息，然后再根
    
    </summary>
    
    
      <category term="Android" scheme="http://www.haibin.me/tags/Android/"/>
    
      <category term="消息监听" scheme="http://www.haibin.me/tags/%E6%B6%88%E6%81%AF%E7%9B%91%E5%90%AC/"/>
    
      <category term="通知栏消息" scheme="http://www.haibin.me/tags/%E9%80%9A%E7%9F%A5%E6%A0%8F%E6%B6%88%E6%81%AF/"/>
    
      <category term="Java" scheme="http://www.haibin.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>android开发小技巧_图片</title>
    <link href="http://www.haibin.me/2019/08/07/android%E5%BC%80%E5%8F%91%E5%B0%8F%E6%8A%80%E5%B7%A7-%E5%9B%BE%E7%89%87/"/>
    <id>http://www.haibin.me/2019/08/07/android开发小技巧-图片/</id>
    <published>2019-08-07T02:53:55.000Z</published>
    <updated>2019-08-07T03:31:35.993Z</updated>
    
    <content type="html"><![CDATA[<p>在我们进行开发的时候，图片是常用布局控件之一。<br>在新的databinding中，<code>ImageView</code>使用上面还是有差异的。接下来的实例，我们将展示如何使用glide进行图片设置。</p>
<h1 id="开发语言"><a href="#开发语言" class="headerlink" title="开发语言"></a>开发语言</h1><p><code>kotlin</code>,<code>Android</code></p>
<h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="引入glide包"><a href="#引入glide包" class="headerlink" title="引入glide包"></a>引入glide包</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">//glide图片加载控件</span></span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">"com.github.bumptech.glide:glide:$glideVersion"</span></span><br><span class="line">    <span class="keyword">implementation</span> <span class="string">"jp.wasabeef:glide-transformations:$glideTransformationVersion"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置databingding"><a href="#配置databingding" class="headerlink" title="配置databingding"></a>配置databingding</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">android </span>&#123;</span><br><span class="line">    <span class="comment">//dataBinding</span></span><br><span class="line">    <span class="class">dataBinding </span>&#123;</span><br><span class="line">        enabled true</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="在bindadapter中配置图片控件属性"><a href="#在bindadapter中配置图片控件属性" class="headerlink" title="在bindadapter中配置图片控件属性"></a>在bindadapter中配置图片控件属性</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@BindingAdapter</span>(value = [<span class="string">"app:imageUrl"</span>, <span class="string">"app:imageError"</span>, <span class="string">"app:placeHolderImg"</span>, <span class="string">"app:isCircle"</span>, <span class="string">"app:isLocal"</span>], requireAll = false)</span><br><span class="line">fun loadImage(</span><br><span class="line">    <span class="attribute">imageView</span>: ImageView,</span><br><span class="line">    <span class="attribute">url</span>: String?,</span><br><span class="line">    <span class="attribute">errorDw</span>: Int?,</span><br><span class="line">    <span class="attribute">placeHolder</span>: Int?,</span><br><span class="line">    <span class="attribute">isCircle</span>: Boolean? = false,</span><br><span class="line">    <span class="attribute">isLocal</span>: Boolean? = false</span><br><span class="line">) &#123;</span><br><span class="line">        <span class="selector-tag">if</span> (isCircle != null &amp;&amp; isCircle) &#123;</span><br><span class="line">            <span class="selector-tag">if</span> (isLocal == true) &#123;</span><br><span class="line">                <span class="selector-tag">Glide</span><span class="selector-class">.with</span>(imageView.context)</span><br><span class="line">                    <span class="selector-class">.load</span>(url?.toInt())</span><br><span class="line">                    <span class="selector-class">.error</span>(errorDw?:R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.placeholder</span>(placeHolder ?: R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.transform</span>(GlidCircleTransform(imageView.context))</span><br><span class="line">                    <span class="selector-class">.into</span>(imageView)</span><br><span class="line">            &#125; <span class="selector-tag">else</span> &#123;</span><br><span class="line">                <span class="selector-tag">Glide</span><span class="selector-class">.with</span>(imageView.context)</span><br><span class="line">                    <span class="selector-class">.load</span>(url)</span><br><span class="line">                    <span class="selector-class">.error</span>(errorDw?:R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.placeholder</span>(placeHolder ?: R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.transform</span>(GlidCircleTransform(imageView.context))</span><br><span class="line">                    <span class="selector-class">.into</span>(imageView)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="selector-tag">else</span> &#123;</span><br><span class="line">            <span class="selector-tag">if</span> (isLocal == true) &#123;</span><br><span class="line">                <span class="selector-tag">Glide</span><span class="selector-class">.with</span>(imageView.context)</span><br><span class="line">                    <span class="selector-class">.load</span>(url?.toInt())</span><br><span class="line">                    <span class="selector-class">.error</span>(errorDw?:R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.placeholder</span>(placeHolder ?: R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.into</span>(imageView)</span><br><span class="line">            &#125; <span class="selector-tag">else</span> &#123;</span><br><span class="line"></span><br><span class="line">                <span class="selector-tag">Glide</span><span class="selector-class">.with</span>(imageView.context)</span><br><span class="line">                    <span class="selector-class">.load</span>(url)</span><br><span class="line">                    <span class="selector-class">.error</span>(errorDw?:R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.placeholder</span>(placeHolder ?: R.drawable.img_touxiang)</span><br><span class="line">                    <span class="selector-class">.into</span>(imageView)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="布局文件中使用bingadapter中定义的属性"><a href="#布局文件中使用bingadapter中定义的属性" class="headerlink" title="布局文件中使用bingadapter中定义的属性"></a>布局文件中使用bingadapter中定义的属性</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;ImageView</span><br><span class="line">    android:<span class="attribute">layout_marginLeft</span>=<span class="string">"@dimen/margin_left_some"</span></span><br><span class="line">    android:<span class="attribute">layout_marginRight</span>=<span class="string">"@dmargin_right_some"</span></span><br><span class="line">    tools:<span class="attribute">background</span>=<span class="string">"@drawable/img_background"</span></span><br><span class="line">    app:<span class="attribute">imageUrl</span>=<span class="string">"@&#123;vm.backgroundUrl&#125;"</span></span><br><span class="line">    app:<span class="attribute">imageError</span>=<span class="string">"@&#123;vm.errorImg&#125;"</span></span><br><span class="line">    app:<span class="attribute">isLocal</span>=<span class="string">"@&#123;true&#125;"</span></span><br><span class="line">    app:<span class="attribute">placeHolderImg</span>=<span class="string">"@&#123;vm.placeHolderImg&#125;"</span></span><br><span class="line">    android:<span class="attribute">layout_width</span>=<span class="string">"wrap_content"</span></span><br><span class="line">    android:<span class="attribute">layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</span><br></pre></td></tr></table></figure>
<h2 id="在viewmodel中定义变量"><a href="#在viewmodel中定义变量" class="headerlink" title="在viewmodel中定义变量"></a>在viewmodel中定义变量</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">val placeHolderImg = ObservableField&lt;Int&gt;(R<span class="selector-class">.drawable</span><span class="selector-class">.img_place_holder</span>)</span><br><span class="line">val errorImg = ObservableField&lt;Int&gt;(R<span class="selector-class">.drawable</span><span class="selector-class">.img_error</span>)</span><br><span class="line">val imageUrl = ObservableField&lt;Int&gt;(R<span class="selector-class">.drawable</span><span class="selector-class">.img_background</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在我们进行开发的时候，图片是常用布局控件之一。&lt;br&gt;在新的databinding中，&lt;code&gt;ImageView&lt;/code&gt;使用上面还是有差异的。接下来的实例，我们将展示如何使用glide进行图片设置。&lt;/p&gt;
&lt;h1 id=&quot;开发语言&quot;&gt;&lt;a href=&quot;#开发语言
    
    </summary>
    
    
      <category term="Android" scheme="http://www.haibin.me/tags/Android/"/>
    
      <category term="图片" scheme="http://www.haibin.me/tags/%E5%9B%BE%E7%89%87/"/>
    
      <category term="databinding" scheme="http://www.haibin.me/tags/databinding/"/>
    
      <category term="imageview" scheme="http://www.haibin.me/tags/imageview/"/>
    
  </entry>
  
  <entry>
    <title>Cocos Creator 原生调试-Android篇[macOS]</title>
    <link href="http://www.haibin.me/2018/12/12/Cocos-Creator-%E5%8E%9F%E7%94%9F%E8%B0%83%E8%AF%95-Android%E7%AF%87-macOS/"/>
    <id>http://www.haibin.me/2018/12/12/Cocos-Creator-原生调试-Android篇-macOS/</id>
    <published>2018-12-12T03:08:26.000Z</published>
    <updated>2019-07-17T06:22:11.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cocos-Creator-原生调试-Android篇-macOS"><a href="#Cocos-Creator-原生调试-Android篇-macOS" class="headerlink" title="Cocos Creator 原生调试-Android篇[macOS]"></a>Cocos Creator 原生调试-Android篇[macOS]</h1><p>在进行<code>Cocos creator</code> 进行开发的时候，一般我们用模拟器就可进行原生调试，但是有些问题只是在原生平台才会出现，我们需要对原生进行调试。</p>
<h1 id="软件准备"><a href="#软件准备" class="headerlink" title="软件准备"></a>软件准备</h1><h2 id="step1-安装Android-studio-可选"><a href="#step1-安装Android-studio-可选" class="headerlink" title="step1 安装Android studio[可选]"></a>step1 安装<code>Android studio</code>[可选]</h2><p>软件准备  </p>
<h2 id="下载安装Android-studio"><a href="#下载安装Android-studio" class="headerlink" title="下载安装Android studio"></a>下载安装<code>Android studio</code></h2><p>下载地址<br><code>https://dl.google.com/dl/android/studio/install/3.2.0.26/android-studio-ide-181.5014246-mac.dmg</code><br>安装过程略</p>
<h2 id="step2-安装SDK-必选"><a href="#step2-安装SDK-必选" class="headerlink" title="step2 安装SDK[必选]"></a>step2 安装SDK[必选]</h2><p>安装SDK,SDK可以在官网上进行下载，也可以在第三方镜像进行下载，下载地址<br><code>https://dl.google.com/android/repository/sdk-tools-darwin-4333796.zip</code><br>下载后解压到磁盘 <code>$HOME</code>/tools</p>
<h2 id="step3-安装NDK-必选"><a href="#step3-安装NDK-必选" class="headerlink" title="step3 安装NDK[必选]"></a>step3 安装NDK[必选]</h2><p>安装NDK,NDK可以在官网上进行下载，也可以在第三方镜像进行下载，下载地址<br><code>https://dl.google.com/android/repository/android-ndk-r16b-darwin-x86_64.zip</code></p>
<h2 id="step4-安装gradle-4-4-必选"><a href="#step4-安装gradle-4-4-必选" class="headerlink" title="step4 安装gradle 4.4[必选]"></a>step4 安装<code>gradle 4.4</code>[必选]</h2><p>安装<code>gradle</code>,<code>gradle</code>可以在官网上进行下载，也可以在第三方镜像进行下载，下载地址<br><code>https://services.gradle.org/distributions/gradle-4.4-bin.zip</code></p>
<h2 id="step5-安装Chrome-71-必选"><a href="#step5-安装Chrome-71-必选" class="headerlink" title="step5 安装Chrome 71[必选]"></a>step5 安装<code>Chrome 71</code>[必选]</h2><p>由于<code>Chrome 70</code>有无法命中断点额问题，所以需要安装<code>chrome 71</code>的版本</p>
<h1 id="参数配置"><a href="#参数配置" class="headerlink" title="参数配置"></a>参数配置</h1><p><code>Cocos Creator</code>配置</p>
<p><img src="http://tp.linqmind.com/2018-12-07-095155.png" alt=""></p>
<p><img src="http://tp.linqmind.com/2018-12-07-095244.png" alt=""></p>
<h1 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h1><p>获取调试参数<br><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> ✘&gt; adb logcat|grep  "chrome-devtools"</span><br><span class="line"><span class="number">12-07 16:59</span>:<span class="number">00</span>.<span class="number">491 22893</span> <span class="number">23091</span> D jswrapper: Debugger listening..., visit [ chrome-devtools://devtools/bundled/inspector.html?v8only=true&amp;ws=<span class="number">0.0.0.0</span>:<span class="number">6086</span>/<span class="number">00010002</span>-<span class="number">0003-4004</span>-<span class="number">8005</span>-<span class="number">000600070008</span> ] in chrome browser to debug!</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>需要注意的是，这个的端口号，是根据上面的命令获取下来的，我这里获取的端口号是 <code>6086</code>. <code>Cocos Creator 2.0.5</code>的端口号是 <code>5086</code></p>
</blockquote>
<p>由于里面的调试端口是 6068，所以要进行端口转发，在<code>terminal</code>中执行<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">✘&gt; <span class="selector-tag">adb</span> <span class="selector-tag">forward</span> <span class="selector-tag">tcp</span><span class="selector-pseudo">:6086</span> <span class="selector-tag">tcp</span><span class="selector-pseudo">:6086</span></span><br></pre></td></tr></table></figure></p>
<p>打开浏览器，在地址栏中输入上面的内容<br><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chrome-devtools://devtools/bundled/inspector.html?v8only=true&amp;ws=0.0.0.0:6086/00010002<span class="string">-0003</span><span class="string">-4004</span><span class="string">-8005</span><span class="string">-000600070008</span></span><br></pre></td></tr></table></figure></p>
<p>输入的内容在调试参数里面查看。<br>链接成功后，在page页面，可以查看 <code>src/project.dev.js</code>里面是你的开发代码。可以在需要的方法上打断点即可。<br><img src="http://tp.linqmind.com/2018-12-07-094152.png" alt=""><br>这样你就可以进行原生环境的代码调试，祝大家玩的愉快。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Cocos-Creator-原生调试-Android篇-macOS&quot;&gt;&lt;a href=&quot;#Cocos-Creator-原生调试-Android篇-macOS&quot; class=&quot;headerlink&quot; title=&quot;Cocos Creator 原生调试-Android
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>移动端数据安全解决方案之加密传输https</title>
    <link href="http://www.haibin.me/2016/12/12/android%E5%8A%A0%E5%AF%86%E4%BC%A0%E8%BE%93%E4%B9%8Bhttps/"/>
    <id>http://www.haibin.me/2016/12/12/android加密传输之https/</id>
    <published>2016-12-12T09:53:04.000Z</published>
    <updated>2019-07-03T23:28:43.811Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>现在，各个厂家对数据安全越来越重视，而https是保证数据在网络传输中，不被窃取的有效方式之一。而https也是每个App的标配,通过下面你可以了解到，App如何通过自签名证书，实现数据的https加密传输</p>
<h1 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h1><p>对于有第三方机构签发的https的证书来说，android链接是比较方便的。直接通过https即可具体的链接代码  </p>
<h1 id="自签发证书"><a href="#自签发证书" class="headerlink" title="自签发证书"></a>自签发证书</h1><p>通过脚本生成自签发证书<br>在Linux系统下，可以自动生成签发证书<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">dir=`<span class="built_in">pwd</span>`/tmp/ssl</span><br><span class="line">workspace=`<span class="built_in">pwd</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -d <span class="variable">$dir</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">printf</span> <span class="string">"<span class="variable">$&#123;dir&#125;</span> already exists, remove it?  yes/no: "</span></span><br><span class="line">    <span class="built_in">read</span> del</span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$del</span> = <span class="string">"yes"</span> ]; <span class="keyword">then</span></span><br><span class="line">        rm -rf <span class="variable">$dir</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"user cancel"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> <span class="variable">$&#123;dir&#125;</span> <span class="string">"<span class="variable">$&#123;dir&#125;</span>/root"</span> <span class="string">"<span class="variable">$&#123;dir&#125;</span>/server"</span> <span class="string">"<span class="variable">$&#123;dir&#125;</span>/client"</span> <span class="string">"<span class="variable">$&#123;dir&#125;</span>/certs"</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ ! -d <span class="variable">$d</span> ]; <span class="keyword">then</span></span><br><span class="line">        mkdir -p <span class="variable">$d</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'hello world!'</span> &gt;&gt; <span class="string">"<span class="variable">$&#123;dir&#125;</span>/index.php"</span></span><br><span class="line"><span class="built_in">echo</span> 01 &gt; <span class="string">"<span class="variable">$&#123;dir&#125;</span>/serial"</span></span><br><span class="line"></span><br><span class="line">index_file=<span class="string">"<span class="variable">$&#123;dir&#125;</span>/index.txt"</span></span><br><span class="line">rm -f <span class="variable">$index_file</span></span><br><span class="line">touch <span class="variable">$index_file</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"generate openssl.cnf: "</span></span><br><span class="line">openssl_cnf=<span class="string">"<span class="variable">$&#123;dir&#125;</span>/openssl.cnf"</span></span><br><span class="line">touch <span class="variable">$openssl_cnf</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"[ ca ]</span></span><br><span class="line"><span class="string">default_ca = yaoguais_ca</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ yaoguais_ca ]</span></span><br><span class="line"><span class="string">certificate = ./ca.crt</span></span><br><span class="line"><span class="string">private_key = ./ca.key</span></span><br><span class="line"><span class="string">database = ./index.txt</span></span><br><span class="line"><span class="string">serial = ./serial</span></span><br><span class="line"><span class="string">new_certs_dir = ./certs</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">default_days = 3650</span></span><br><span class="line"><span class="string">default_md = sha1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">policy = yaoguais_ca_policy</span></span><br><span class="line"><span class="string">x509_extensions = yaoguais_ca_extensions</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ yaoguais_ca_policy ]</span></span><br><span class="line"><span class="string">commonName = supplied</span></span><br><span class="line"><span class="string">stateOrProvinceName = optional</span></span><br><span class="line"><span class="string">countryName = optional</span></span><br><span class="line"><span class="string">emailAddress = optional</span></span><br><span class="line"><span class="string">organizationName = optional</span></span><br><span class="line"><span class="string">organizationalUnitName = optional</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ yaoguais_ca_extensions ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:false</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ req ]</span></span><br><span class="line"><span class="string">default_bits = 2048</span></span><br><span class="line"><span class="string">default_keyfile = ./ca.key</span></span><br><span class="line"><span class="string">default_md = sha1</span></span><br><span class="line"><span class="string">prompt = yes</span></span><br><span class="line"><span class="string">distinguished_name = root_ca_distinguished_name</span></span><br><span class="line"><span class="string">x509_extensions = root_ca_extensions</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ root_ca_distinguished_name ]</span></span><br><span class="line"><span class="string">countryName_default = CN</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ root_ca_extensions ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:true</span></span><br><span class="line"><span class="string">keyUsage = cRLSign, keyCertSign</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ server_ca_extensions ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:false</span></span><br><span class="line"><span class="string">keyUsage = keyEncipherment</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[ client_ca_extensions ]</span></span><br><span class="line"><span class="string">basicConstraints = CA:false</span></span><br><span class="line"><span class="string">keyUsage = digitalSignature"</span> &gt; <span class="variable">$openssl_cnf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># exit 0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$dir</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"generate root ca: "</span></span><br><span class="line"><span class="comment"># in this step, I always input a password of "111111"</span></span><br><span class="line">openssl genrsa -des3 -out root/ca.key 2048</span><br><span class="line"><span class="comment"># in this step, I always input these and a password of "111111"</span></span><br><span class="line"><span class="comment">#Country Name (2 letter code) [XX]:CN</span></span><br><span class="line"><span class="comment">#State or Province Name (full name) []:Si Chuan</span></span><br><span class="line"><span class="comment">#Locality Name (eg, city) [Default City]:Cheng Du</span></span><br><span class="line"><span class="comment">#Organization Name (eg, company) [Default Company Ltd]:Yao Guai Ltd</span></span><br><span class="line"><span class="comment">#Organizational Unit Name (eg, section) []:Yao Guai</span></span><br><span class="line"><span class="comment">#Common Name (eg, your name or your server's hostname) []:yaoguai.com</span></span><br><span class="line"><span class="comment">#Email Address []:newtopstdio@163.com</span></span><br><span class="line"><span class="comment">#A challenge password []:111111</span></span><br><span class="line"><span class="comment">#An optional company name []:Yao Guai Ltd</span></span><br><span class="line">openssl req -new -newkey rsa:2048 -key root/ca.key -out root/ca.csr</span><br><span class="line">openssl x509 -req -days 3650 -<span class="keyword">in</span> root/ca.csr -signkey root/ca.key -out root/ca.crt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"generate server keys: "</span></span><br><span class="line"><span class="comment"># in this step, I always input a password of "111111"</span></span><br><span class="line">openssl genrsa -des3 -out server/server.key 2048</span><br><span class="line"><span class="comment"># in this step, I always input these and a password of none</span></span><br><span class="line"><span class="comment">#Country Name (2 letter code) [XX]:CN</span></span><br><span class="line"><span class="comment">#State or Province Name (full name) []:Si Chuan</span></span><br><span class="line"><span class="comment">#Locality Name (eg, city) [Default City]:Cheng Du</span></span><br><span class="line"><span class="comment">#Organization Name (eg, company) [Default Company Ltd]:Yao Guai Ltd</span></span><br><span class="line"><span class="comment">#Organizational Unit Name (eg, section) []:Yao Guai</span></span><br><span class="line"><span class="comment">#Common Name (eg, your name or your server's hostname) []:yaoguai.com</span></span><br><span class="line"><span class="comment">#Email Address []:newtopstdio@163.com</span></span><br><span class="line"><span class="comment">#A challenge password []:none</span></span><br><span class="line"><span class="comment">#An optional company name []:none</span></span><br><span class="line">openssl req -new -newkey rsa:2048 -key server/server.key -out server/server.csr</span><br><span class="line">openssl ca -config openssl.cnf -<span class="keyword">in</span> server/server.csr -cert root/ca.crt -keyfile root/ca.key -out server/server.crt -days 3650</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"generate client keys: "</span></span><br><span class="line"><span class="comment"># in this step, I always input a password of "111111"</span></span><br><span class="line">openssl genrsa -des3 -out client/client.key 2048</span><br><span class="line"><span class="comment"># in this step, I always input these and a password of none</span></span><br><span class="line"><span class="comment">#Country Name (2 letter code) [XX]:CN</span></span><br><span class="line"><span class="comment">#State or Province Name (full name) []:Si Chuan</span></span><br><span class="line"><span class="comment">#Locality Name (eg, city) [Default City]:Cheng Du</span></span><br><span class="line"><span class="comment">#Organization Name (eg, company) [Default Company Ltd]:Yao Guai Ltd</span></span><br><span class="line"><span class="comment">#Organizational Unit Name (eg, section) []:Yao Guai</span></span><br><span class="line"><span class="comment">#Common Name (eg, your name or your server's hostname) []:yaoguai.com</span></span><br><span class="line"><span class="comment">#Email Address []:newtopstdio@163.com</span></span><br><span class="line"><span class="comment">#A challenge password []:none</span></span><br><span class="line"><span class="comment">#An optional company name []:none</span></span><br><span class="line">openssl req -new -newkey rsa:2048 -key client/client.key -out client/client.csr</span><br><span class="line"><span class="comment"># to prevent error "openssl TXT_DB error number 2 failed to update database"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"unique_subject = no"</span> &gt; <span class="string">"index.txt.attr"</span></span><br><span class="line">openssl ca -config openssl.cnf -<span class="keyword">in</span> client/client.csr -cert root/ca.crt -keyfile root/ca.key -out client/client.crt -days 3650</span><br><span class="line"></span><br><span class="line"><span class="comment"># use these to config nginx</span></span><br><span class="line">: &lt;&lt;EOF</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_verify_client on;</span><br><span class="line">    ssl_certificate /tmp/ssl/server/server.crt;</span><br><span class="line">    ssl_certificate_key /tmp/ssl/server/server.key;</span><br><span class="line">    ssl_client_certificate /tmp/ssl/root/ca.crt;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_ciphers <span class="string">"HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES"</span>;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"helps:"</span></span><br><span class="line"><span class="comment"># view key's file information</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"openssl rsa -in xxx.key -text -noout"</span></span><br><span class="line"><span class="comment"># view csr's file information</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"openssl req -noout -text -in xxx.csr"</span></span><br><span class="line"><span class="comment"># pem convert to der</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"openssl x509 -in server/server.crt -outform DER -out server/server.cer"</span></span><br><span class="line"><span class="comment"># validate key</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'curl -k --cert client/client.crt --key client/client.key --pass 111111 https://devel/index.php'</span></span><br><span class="line"><span class="comment"># generate p12 file</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"openssl pkcs12 -export -in client/client.crt -inkey client/client.key -out client/client.p12 -certfile root/ca.crt"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$workspace</span></span><br></pre></td></tr></table></figure></p>
<h3 id="导出证书"><a href="#导出证书" class="headerlink" title="导出证书"></a>导出证书</h3><p>前面生成了服务端使用的密钥对，现在可以通过它生成证书给客户端使用<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -export -<span class="keyword">in</span> client/client<span class="selector-class">.crt</span> -inkey client/client<span class="selector-class">.key</span> -out client/client<span class="selector-class">.p12</span> -certfile root/ca.crt</span><br></pre></td></tr></table></figure></p>
<h2 id="服务端准备"><a href="#服务端准备" class="headerlink" title="服务端准备"></a>服务端准备</h2><p>一般现在的网络结构都是通过nginx作方向代理，所以直接设置在nginx即可。  </p>
<h3 id="转换证书"><a href="#转换证书" class="headerlink" title="转换证书"></a>转换证书</h3><h4 id="将-KeyStore-变更为-PKCS-12-格式"><a href="#将-KeyStore-变更为-PKCS-12-格式" class="headerlink" title="将 KeyStore 变更为 PKCS#12 格式"></a>将 KeyStore 变更为 PKCS#12 格式</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -importkeystore -srcstoretype JKS -srckeystore server.jks -srcstorepass 111111 -srcalias<span class="built_in"> server </span>-srckeypass 111111 -deststoretype PKCS12 -destkeystore server.p12 -deststorepass 111111 -destalias<span class="built_in"> server </span>-destkeypass 111111 -noprompt</span><br></pre></td></tr></table></figure>
<h4 id="使用-OpenSSL-解析-PKCS-12-格式的-KeyStore，并转化为-PEM-格式-包含证书和私钥"><a href="#使用-OpenSSL-解析-PKCS-12-格式的-KeyStore，并转化为-PEM-格式-包含证书和私钥" class="headerlink" title="使用 OpenSSL 解析 PKCS#12 格式的 KeyStore，并转化为 PEM 格式(包含证书和私钥)"></a>使用 OpenSSL 解析 PKCS#12 格式的 KeyStore，并转化为 PEM 格式(包含证书和私钥)</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl pkcs12 -<span class="keyword">in</span> server<span class="selector-class">.p12</span> -out server<span class="selector-class">.pem</span><span class="selector-class">.p12</span> -passin pass:<span class="number">111111</span> -passout pass:<span class="number">111111</span></span><br></pre></td></tr></table></figure>
<h4 id="单独输出私钥和公钥"><a href="#单独输出私钥和公钥" class="headerlink" title="单独输出私钥和公钥"></a>单独输出私钥和公钥</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl rsa -<span class="keyword">in</span> server<span class="selector-class">.pem</span><span class="selector-class">.p12</span> -passin pass:<span class="number">111111</span> -out server<span class="selector-class">.pem</span><span class="selector-class">.key</span> -passout pass:<span class="number">111111</span></span><br><span class="line">openssl rsa -<span class="keyword">in</span> server<span class="selector-class">.pem</span><span class="selector-class">.p12</span> -passin pass:<span class="number">111111</span> -out server<span class="selector-class">.pem</span><span class="selector-class">.pub</span> -pubout</span><br></pre></td></tr></table></figure>
<h4 id="单独输出证书"><a href="#单独输出证书" class="headerlink" title="单独输出证书"></a>单独输出证书</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -<span class="keyword">in</span> server<span class="selector-class">.pem</span><span class="selector-class">.p12</span> -out server<span class="selector-class">.pem</span><span class="selector-class">.cer</span></span><br></pre></td></tr></table></figure>
<h4 id="通过私钥生成CSR证书签名"><a href="#通过私钥生成CSR证书签名" class="headerlink" title="通过私钥生成CSR证书签名"></a>通过私钥生成CSR证书签名</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl req -new -key server<span class="selector-class">.pem</span><span class="selector-class">.key</span> -out server<span class="selector-class">.certrequest</span><span class="selector-class">.csr</span></span><br></pre></td></tr></table></figure>
<h4 id="通过私钥和证书签名生成证书文件"><a href="#通过私钥和证书签名生成证书文件" class="headerlink" title="通过私钥和证书签名生成证书文件"></a>通过私钥和证书签名生成证书文件</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -<span class="keyword">in</span> server<span class="selector-class">.certrequest</span><span class="selector-class">.csr</span> -signkey server<span class="selector-class">.pem</span><span class="selector-class">.key</span> -out server<span class="selector-class">.certificate</span><span class="selector-class">.pem</span></span><br></pre></td></tr></table></figure>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://blog.chinaunix.net/uid-631975-id-3313151.html" target="_blank" rel="noopener">http://blog.chinaunix.net/uid-631975-id-3313151.html</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;现在，各个厂家对数据安全越来越重视，而https是保证数据在网络传输中，不被窃取的有效方式之一。而https也是每个App的标配,通过下面你
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Tinker实践</title>
    <link href="http://www.haibin.me/2016/11/21/Tinker%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.haibin.me/2016/11/21/Tinker实践/</id>
    <published>2016-11-21T09:46:50.000Z</published>
    <updated>2019-07-03T23:28:43.810Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Tinker"><a href="#什么是Tinker" class="headerlink" title="什么是Tinker"></a>什么是Tinker</h1><p>Tinker是腾讯开源的热更新方案，通过热更新，可以使android应用的bug得到及时修复，并让用户得到无感升级，tinker的热更新方案，并不能够替代版本发布。但他非常适合紧急且重要的BUG修复。  </p>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="准备Android工程"><a href="#准备Android工程" class="headerlink" title="准备Android工程"></a>准备Android工程</h2><p>准备一个项目<code>TinkerPractice</code><br><img src="http://tp.linqmind.com/2016-11-21-tinker_create_project.png" alt="创建项目"><br><img src="http://tp.linqmind.com/2016-11-21-tinker_create_project2.png" alt=""></p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>配置包含两个方面  </p>
<ul>
<li><code>Tinker</code> 集成配置</li>
<li><code>TinkerPatch SDK</code> 集成配置  <h2 id="Tinker-集成配置"><a href="#Tinker-集成配置" class="headerlink" title="Tinker 集成配置"></a><code>Tinker</code> 集成配置</h2>现在<code>Tinker</code>接入有两种方式，<code>gradle</code>接入与命令行接入，再这里我们只实践<code>gradle</code>接入，因为在<code>gradle</code>接入方式中，<code>gradle</code>插件<code>tinker-patch-gradle-plugin</code>中我们帮你完成<code>proguard、multiDex</code>以及<code>Manifest</code>处理等工作。  <h3 id="添加-Gradle-依赖"><a href="#添加-Gradle-依赖" class="headerlink" title="添加 Gradle 依赖"></a>添加 <code>Gradle</code> 依赖</h3>在项目的<code>build.gradle</code>中，添加<code>tinker-patch-gradle-plugin</code>的依赖  <figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">      <span class="params">...</span><span class="params">...</span></span><br><span class="line">        classpath (<span class="string">'com.tencent.tinker:tinker-patch-gradle-plugin:1.7.5'</span>)</span><br><span class="line">      <span class="params">...</span><span class="params">...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>然后在app的gradle文件app/build.gradle，我们需要添加tinker的库依赖以及apply tinker的gradle插件.<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="comment">//可选，用于生成application类</span></span><br><span class="line">    provided(<span class="string">'com.tencent.tinker:tinker-android-anno:1.7.5'</span>)</span><br><span class="line">    <span class="comment">//tinker的核心库</span></span><br><span class="line">    <span class="keyword">compile</span>(<span class="string">'com.tencent.tinker:tinker-android-lib:1.7.5'</span>)</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="comment">//apply tinker插件</span></span><br><span class="line">apply plugin: <span class="string">'com.tencent.tinker.patch'</span></span><br></pre></td></tr></table></figure></p>
<h3 id="app-build-gradle-参数说明"><a href="#app-build-gradle-参数说明" class="headerlink" title="app/build.gradle 参数说明"></a><code>app/build.gradle</code> 参数说明</h3><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'com.android.application'</span></span><br><span class="line">apply plugin: <span class="string">'com.tencent.tinker.patch'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(dir: <span class="string">'libs'</span>, include: [<span class="string">'*.jar'</span>])</span><br><span class="line">    androidTestCompile(<span class="string">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span><br><span class="line">        exclude group: <span class="string">'com.android.support'</span>, module: <span class="string">'support-annotations'</span></span><br><span class="line">    &#125;)</span><br><span class="line">    compile <span class="string">'com.android.support:appcompat-v7:25.0.1'</span></span><br><span class="line">    testCompile <span class="string">'junit:junit:4.12'</span></span><br><span class="line">    <span class="comment">//optional, help to generate the final application</span></span><br><span class="line">    provided(<span class="string">'com.tencent.tinker:tinker-android-anno:1.7.5'</span>)</span><br><span class="line">    <span class="comment">//tinker's main Android lib</span></span><br><span class="line">    compile(<span class="string">'com.tencent.tinker:tinker-android-lib:1.7.5'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//该参数解决Dex方法数的超出限制问题。</span></span><br><span class="line">    compile <span class="string">"com.android.support:multidex:1.0.1"</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获得git版本头部信息，后面赋值给thinkerId</span></span><br><span class="line">def gitSha() &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="built_in">String</span> gitRev = <span class="string">'git rev-parse --short HEAD'</span>.execute(<span class="keyword">null</span>, project.rootDir).text.trim()</span><br><span class="line">        <span class="keyword">if</span> (gitRev == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">"can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> gitRev</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> GradleException(<span class="string">"can't get git rev, you should add git to system path or just input test value, such as 'testTinkerId'"</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def javaVersion = JavaVersion.VERSION_1_7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    compileSdkVersion <span class="number">25</span></span><br><span class="line">    buildToolsVersion <span class="string">"25.0.0"</span></span><br><span class="line"></span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility javaVersion</span><br><span class="line">        targetCompatibility javaVersion</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//recommend</span></span><br><span class="line">    dexOptions &#123;</span><br><span class="line">      <span class="comment">//忽略方法数限制的检查</span></span><br><span class="line">        jumboMode = <span class="keyword">true</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//签名设置</span></span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                storeFile file(<span class="string">"./keystore/release.jks"</span>)</span><br><span class="line">                storePassword <span class="string">"11111111"</span></span><br><span class="line">                keyAlias <span class="string">"LLM-TINKER"</span></span><br><span class="line">                keyPassword <span class="string">"11111111"</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InvalidUserDataException(ex.toString())</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        debug &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                storeFile file(<span class="string">"./keystore/debug.jks"</span>)</span><br><span class="line">                storePassword <span class="string">"11111111"</span></span><br><span class="line">                keyAlias <span class="string">"LLM-TINKER"</span></span><br><span class="line">                keyPassword <span class="string">"11111111"</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (ex) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> InvalidUserDataException(ex.toString())</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId <span class="string">"com.wkllme.llmwithtinker"</span></span><br><span class="line">        minSdkVersion <span class="number">10</span></span><br><span class="line">        targetSdkVersion <span class="number">25</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0"</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span></span>you<span class="markdown"> can use multiDex and install it in </span>your<span class="markdown"> ApplicationLifeCycle implement</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>分包</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        multiDexEnabled <span class="keyword">true</span></span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>not </span>like<span class="markdown"> proguard, multiDexKeepProguard is not </span>a<span class="markdown"> list, </span>so<span class="markdown"> we can't </span>just<span class="markdown"></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>add for </span>you<span class="markdown"> in our task. </span>you<span class="markdown"> can copy tinker keep rules at</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>build/intermediates/tinker<span class="emphasis">_intermediates/tinker_</span>multidexkeep.pro</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        multiDexKeepProguard file(<span class="string">"keep_in_main_dex.txt"</span>)</span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>buildConfig can change during patch!</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>we can use </span>the<span class="markdown"> newly value when patch</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        buildConfigField <span class="string">"String"</span>, <span class="string">"MESSAGE"</span>, <span class="string">"\"I am the base apk\""</span></span><br><span class="line"><span class="comment">//        buildConfigField "String", "MESSAGE", "\"I am the patch apk\""</span></span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>client version would update with patch</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span></span>so<span class="markdown"> we can get </span>the<span class="markdown"> newly git version easily!</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>设置编译参数TINKER_ID，PLATEFORM</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        buildConfigField <span class="string">"String"</span>, <span class="string">"TINKER_ID"</span>, <span class="string">"\"<span class="subst">$&#123;getTinkerIdValue()&#125;</span>\""</span></span><br><span class="line">        buildConfigField <span class="string">"String"</span>, <span class="string">"PLATFORM"</span>,  <span class="string">"\"all\""</span></span><br><span class="line">        testInstrumentationRunner <span class="string">"android.support.test.runner.AndroidJUnitRunner"</span></span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled <span class="keyword">true</span></span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">        &#125;</span><br><span class="line">        debug &#123;</span><br><span class="line">            debuggable <span class="keyword">true</span></span><br><span class="line">            minifyEnabled <span class="keyword">false</span></span><br><span class="line">            signingConfig signingConfigs.debug</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        main &#123;</span><br><span class="line">            jniLibs.srcDirs = [<span class="string">'libs'</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义构建路径，这里其实可以放在最外面 `rootDir`</span></span><br><span class="line">def bakPath = file(<span class="string">"<span class="subst">$&#123;buildDir&#125;</span>/bakApk/"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span></span>you<span class="markdown"> can use assembleRelease to build </span>you<span class="markdown"> base apk</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>use tinkerPatchRelease -POLD<span class="emphasis">_APK=  -PAPPLY_</span>MAPPING=  -PAPPLY_RESOURCE= to build patch</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet"> * </span>add apk from </span>the<span class="markdown"> build/bakApk</span></span></span><br><span class="line"><span class="comment"><span class="markdown"> */</span></span></span><br><span class="line">ext &#123;</span><br><span class="line">    <span class="comment">//for some reason, you may want to ignore tinkerBuild, such as instant run debug build?</span></span><br><span class="line">    <span class="comment">//true 启用tinker,false 禁用tinker,一般在调试的时候，可以将tinkerEnable 设置为false.</span></span><br><span class="line">    tinkerEnabled = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//for normal build</span></span><br><span class="line">    <span class="comment">//old apk file to build patch apk</span></span><br><span class="line">    tinkerOldApkPath = <span class="string">"<span class="subst">$&#123;bakPath&#125;</span>/app-debug-1128-18-12-15.apk"</span></span><br><span class="line">    <span class="comment">//proguard mapping file to build patch apk</span></span><br><span class="line"><span class="comment">//    tinkerApplyMappingPath = "$&#123;bakPath&#125;/app-debug-1018-17-32-47-mapping.txt"</span></span><br><span class="line">    <span class="comment">//resource R.txt to build patch apk, must input if there is resource changed</span></span><br><span class="line">    tinkerApplyResourcePath = <span class="string">"<span class="subst">$&#123;bakPath&#125;</span>/app-debug-1128-18-12-15-R.txt"</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//only use for build all flavor, if not, just ignore this field</span></span><br><span class="line">    <span class="comment">//tinkerBuildFlavorDirectory = "$&#123;bakPath&#125;/app-1018-17-32-47"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getOldApkPath() &#123;</span><br><span class="line">    <span class="keyword">return</span> hasProperty(<span class="string">"OLD_APK"</span>) ? OLD_APK : ext.tinkerOldApkPath</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def getApplyMappingPath() &#123;</span><br><span class="line">    <span class="keyword">return</span> hasProperty(<span class="string">"APPLY_MAPPING"</span>) ? APPLY_MAPPING : ext.tinkerApplyMappingPath</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def getApplyResourceMappingPath() &#123;</span><br><span class="line">    <span class="keyword">return</span> hasProperty(<span class="string">"APPLY_RESOURCE"</span>) ? APPLY_RESOURCE : ext.tinkerApplyResourcePath</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def getTinkerIdValue() &#123;</span><br><span class="line">    <span class="keyword">return</span> hasProperty(<span class="string">"TINKER_ID"</span>) ? TINKER_ID : gitSha()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def buildWithTinker() &#123;</span><br><span class="line">    <span class="keyword">return</span> hasProperty(<span class="string">"TINKER_ENABLE"</span>) ? TINKER_ENABLE : ext.tinkerEnabled</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">def getTinkerBuildFlavorDirectory() &#123;</span><br><span class="line">    <span class="keyword">return</span> ext.tinkerBuildFlavorDirectory</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (buildWithTinker()) &#123;</span><br><span class="line">    apply plugin: <span class="string">'com.tencent.tinker.patch'</span></span><br><span class="line"></span><br><span class="line">    tinkerPatch &#123;</span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>necessary，default 'null'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span></span>the<span class="markdown"> old apk path, use to diff with </span>the<span class="markdown"> new apk to build</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>add apk from </span>the<span class="markdown"> build/bakApk</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        oldApk = getOldApkPath()</span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>optional，default 'false'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>there </span>are<span class="markdown"> some cases we may get some warnings</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>if ignoreWarning is true, we would </span>just<span class="markdown"> assert </span>the<span class="markdown"> patch process</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>case 1: minSdkVersion is below 14, </span>but<span class="markdown"> </span>you<span class="markdown"> </span>are<span class="markdown"> using dexMode with raw.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         *         </span>it must be crash when load.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>case 2: newly added Android Component in AndroidManifest.xml,</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         *         </span>it must be crash when load.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>case 3: loader classes in dex.loader&#123;&#125; </span>are<span class="markdown"> not keep in </span>the<span class="markdown"> main dex,</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         *         </span>it must be let tinker not work.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>case 4: loader classes in dex.loader&#123;&#125; changes,</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         *         </span>loader classes is ues to load patch dex. it is useless to change them.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         *         </span>it </span>won't<span class="markdown"> crash, </span>but<span class="markdown"> these changes can't effect. </span>you<span class="markdown"> may ignore it</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>case 5: resources.arsc has changed, </span>but<span class="markdown"> we </span>don't<span class="markdown"> use applyResourceMapping to build</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        ignoreWarning = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>optional，default 'true'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>whether sign </span>the<span class="markdown"> patch file</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>if not, </span>you<span class="markdown"> must do yourself. otherwise it can't check success during </span>the<span class="markdown"> patch loading</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>we </span>will<span class="markdown"> use </span>the<span class="markdown"> sign config with </span>your<span class="markdown"> build type</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        useSign = <span class="keyword">true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>Warning, applyMapping </span>will<span class="markdown"> affect </span>the<span class="markdown"> normal android build!</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        buildConfig &#123;</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default 'null'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>if we use tinkerPatch to build </span>the<span class="markdown"> patch apk, </span>you<span class="markdown">'d better to apply </span>the<span class="markdown"> old</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>apk mapping file if minifyEnabled is enable!</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Warning:</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> must be careful that it </span>will<span class="markdown"> affect </span>the<span class="markdown"> normal assemble build!</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line"><span class="comment">//            applyMapping = getApplyMappingPath()</span></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default 'null'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>It is nice to keep </span>the<span class="markdown"> resource id from R.txt file to reduce java changes</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            applyResourceMapping = getApplyResourceMappingPath()</span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>necessary，default 'null'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>because we </span>don't<span class="markdown"> want to check </span>the<span class="markdown"> base apk with md5 in </span>the<span class="markdown"> runtime(it is slow)</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>tinkerId is use to identify </span>the<span class="markdown"> unique base apk when </span>the<span class="markdown"> patch is tried to apply.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>we can use git rev, svn rev or </span>simply<span class="markdown"> versionCode.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>we </span>will<span class="markdown"> gen </span>the<span class="markdown"> tinkerId in </span>your<span class="markdown"> manifest automatic</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            tinkerId = getTinkerIdValue()</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        dex &#123;</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default 'jar'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>only can be 'raw' or 'jar'. for raw, we would keep its original format</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>for jar, we would repack dexes with zip format.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>if </span>you<span class="markdown"> want to support below 14, </span>you<span class="markdown"> must use jar</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>or </span>you<span class="markdown"> want to save rom or check quicker, </span>you<span class="markdown"> can use raw mode also</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            dexMode = <span class="string">"jar"</span></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default 'false'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>if usePreGeneratedPatchDex is true, tinker framework </span>will<span class="markdown"> generate auxiliary class</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>and insert auxiliary instruction when compiling base package using</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>assemble&#123;Debug/Release&#125; task to prevent class pre-verified issue in dvm.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Besides, </span>a<span class="markdown"> real dex file contains necessary class </span>will<span class="markdown"> be generated and packed into</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>patch package instead of any patch info files.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Use this mode if </span>you<span class="markdown"> have to use any dex encryption solutions.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Notice: If </span>you<span class="markdown"> change this value, please trigger clean task</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>and regenerate base package.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            usePreGeneratedPatchDex = <span class="keyword">false</span></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>necessary，default '[]'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>what dexes in apk </span>are<span class="markdown"> expected to deal with tinkerPatch</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>it support * or ? pattern.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            pattern = [<span class="string">"classes*.dex"</span>,</span><br><span class="line">                       <span class="string">"assets/secondary-dex-?.jar"</span>]</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>necessary，default '[]'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Warning, it is very very important, loader classes can't change with patch.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>thus, </span>they<span class="markdown"> </span>will<span class="markdown"> be removed from patch dexes.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> must put </span>the<span class="markdown"> following class into main dex.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Simply, </span>you<span class="markdown"> </span>should<span class="markdown"> add </span>your<span class="markdown"> own application &#123;@code tinker.sample.android.SampleApplication&#125;</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>own tinkerLoader, and </span>the<span class="markdown"> classes </span>you<span class="markdown"> use in them</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             *</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            loader = [<span class="string">"com.tencent.tinker.loader.*"</span>,</span><br><span class="line">                      <span class="comment">//warning, you must change it with your application</span></span><br><span class="line">                      <span class="string">"com.wkllme.llmwithtinker.app.LLMApplication"</span>,</span><br><span class="line">                      <span class="comment">//use sample, let BaseBuildInfo unchangeable with tinker</span></span><br><span class="line">                      <span class="string">"com.wkllme.llmwithtinker.app.BaseBuildInfo"</span></span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        lib &#123;</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default '[]'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>what library in apk </span>are<span class="markdown"> expected to deal with tinkerPatch</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>it support * or ? pattern.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>for library in assets, we would </span>just<span class="markdown"> recover them in </span>the<span class="markdown"> patch directory</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> can get them in TinkerLoadResult with Tinker</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            pattern = [<span class="string">"lib/armeabi/*.so"</span>]</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        res &#123;</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default '[]'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>what resource in apk </span>are<span class="markdown"> expected to deal with tinkerPatch</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>it support * or ? pattern.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> must include all </span>your<span class="markdown"> resources in apk here,</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>otherwise, </span>they<span class="markdown"> </span>won't<span class="markdown"> repack in </span>the<span class="markdown"> new apk resources.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            pattern = [<span class="string">"res/*"</span>, <span class="string">"assets/*"</span>, <span class="string">"resources.arsc"</span>, <span class="string">"AndroidManifest.xml"</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default '[]'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>the<span class="markdown"> resource file exclude patterns, ignore add, delete or modify resource change</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>it support * or ? pattern.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Warning, we can only use for files no relative with resources.arsc</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            ignoreChange = [<span class="string">"assets/sample_meta.txt"</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>default 100kb</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>for modify resource, if it is larger than 'largeModSize'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>we would </span>like<span class="markdown"> to use bsdiff algorithm to reduce patch file size</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            largeModSize = <span class="number">100</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        packageConfig &#123;</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default 'TINKER<span class="emphasis">_ID, TINKER_</span>ID<span class="emphasis">_VALUE' 'NEW_</span>TINKER<span class="emphasis">_ID, NEW_</span>TINKER<span class="emphasis">_ID_</span>VALUE'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>package meta file gen. path is assets/package_meta.txt in patch file</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> can use securityCheck.getPackageProperties() in </span>your<span class="markdown"> ownPackageCheck method</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>or TinkerLoadResult.getPackageConfigByName</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>we </span>will<span class="markdown"> get </span>the<span class="markdown"> TINKER_ID from </span>the<span class="markdown"> old apk manifest for </span>you<span class="markdown"> automatic,</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>other config files (</span>such<span class="markdown"> as patchMessage below)is not necessary</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            configField(<span class="string">"patchMessage"</span>, <span class="string">"tinker is sample to use"</span>)</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>just<span class="markdown"> </span>a<span class="markdown"> sample case, </span>you<span class="markdown"> can use </span>such<span class="markdown"> as sdkVersion, brand, channel...</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> can parse it in </span>the<span class="markdown"> SamplePatchListener.</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>Then </span>you<span class="markdown"> can use patch conditional!</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            configField(<span class="string">"platform"</span>, <span class="string">"all"</span>)</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>patch version via packageConfig</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            configField(<span class="string">"patchVersion"</span>, <span class="string">"1.0"</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//or you can add config filed outside, or get meta value from old apk</span></span><br><span class="line">        <span class="comment">//project.tinkerPatch.packageConfig.configField("test1", project.tinkerPatch.packageConfig.getMetaDataFromOldApk("Test"))</span></span><br><span class="line">        <span class="comment">//project.tinkerPatch.packageConfig.configField("test2", "sample")</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>if </span>you<span class="markdown"> </span>don't<span class="markdown"> use zipArtifact or path, we </span>just<span class="markdown"> use 7za to try</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        sevenZip &#123;</span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default '7za'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>the<span class="markdown"> 7zip artifact path, it </span>will<span class="markdown"> use </span>the<span class="markdown"> right 7za with </span>your<span class="markdown"> platform</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line">            zipArtifact = <span class="string">"com.tencent.mm:SevenZip:1.1.10"</span></span><br><span class="line">            <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span>optional，default '7za'</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">             * </span></span>you<span class="markdown"> can specify </span>the<span class="markdown"> 7za path yourself, it </span>will<span class="markdown"> overwrite </span>the<span class="markdown"> zipArtifact value</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">             */</span></span></span></span><br><span class="line"><span class="comment">//        path = "/usr/local/bin/7za"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; flavors = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    project.android.productFlavors.each &#123;flavor -&gt;</span><br><span class="line">        flavors.add(flavor.name)</span><br><span class="line">    &#125;</span><br><span class="line">    boolean hasFlavors = flavors.size() &gt; <span class="number">0</span></span><br><span class="line">    <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">     * </span>bak apk and mapping</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">     */</span></span></span></span><br><span class="line">    android.applicationVariants.all &#123; variant -&gt;</span><br><span class="line">        <span class="comment"><span class="markdown">/**</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="bullet">         * </span>task type, </span>you<span class="markdown"> want to bak</span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">         */</span></span></span></span><br><span class="line">        def taskName = variant.name</span><br><span class="line">        def date = <span class="keyword">new</span> Date().format(<span class="string">"MMdd-HH-mm-ss"</span>)</span><br><span class="line"></span><br><span class="line">        tasks.all &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"assemble<span class="subst">$&#123;taskName.capitalize()&#125;</span>"</span>.equalsIgnoreCase(it.name)) &#123;</span><br><span class="line"></span><br><span class="line">                it.doLast &#123;</span><br><span class="line">                    copy &#123;</span><br><span class="line">                        def fileNamePrefix = <span class="string">"<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;variant.baseName&#125;</span>"</span></span><br><span class="line">                        def newFileNamePrefix = hasFlavors ? <span class="string">"<span class="subst">$&#123;fileNamePrefix&#125;</span>"</span> : <span class="string">"<span class="subst">$&#123;fileNamePrefix&#125;</span>-<span class="subst">$&#123;date&#125;</span>"</span></span><br><span class="line"></span><br><span class="line">                        def destPath = hasFlavors ? file(<span class="string">"<span class="subst">$&#123;bakPath&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;date&#125;</span>/<span class="subst">$&#123;variant.flavorName&#125;</span>"</span>) : bakPath</span><br><span class="line">                        from variant.outputs.outputFile</span><br><span class="line">                        into destPath</span><br><span class="line">                        rename &#123; <span class="built_in">String</span> fileName -&gt;</span><br><span class="line">                            fileName.replace(<span class="string">"<span class="subst">$&#123;fileNamePrefix&#125;</span>.apk"</span>, <span class="string">"<span class="subst">$&#123;newFileNamePrefix&#125;</span>.apk"</span>)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        from <span class="string">"<span class="subst">$&#123;buildDir&#125;</span>/outputs/mapping/<span class="subst">$&#123;variant.dirName&#125;</span>/mapping.txt"</span></span><br><span class="line">                        into destPath</span><br><span class="line">                        rename &#123; <span class="built_in">String</span> fileName -&gt;</span><br><span class="line">                            fileName.replace(<span class="string">"mapping.txt"</span>, <span class="string">"<span class="subst">$&#123;newFileNamePrefix&#125;</span>-mapping.txt"</span>)</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        from <span class="string">"<span class="subst">$&#123;buildDir&#125;</span>/intermediates/symbols/<span class="subst">$&#123;variant.dirName&#125;</span>/R.txt"</span></span><br><span class="line">                        into destPath</span><br><span class="line">                        rename &#123; <span class="built_in">String</span> fileName -&gt;</span><br><span class="line">                            fileName.replace(<span class="string">"R.txt"</span>, <span class="string">"<span class="subst">$&#123;newFileNamePrefix&#125;</span>-R.txt"</span>)</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    project.afterEvaluate &#123;</span><br><span class="line">        <span class="comment">//sample use for build all flavor for one time</span></span><br><span class="line">        <span class="keyword">if</span> (hasFlavors) &#123;</span><br><span class="line">            task(tinkerPatchAllFlavorRelease) &#123;</span><br><span class="line">                group = <span class="string">'tinker'</span></span><br><span class="line">                def originOldPath = getTinkerBuildFlavorDirectory()</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">String</span> flavor : flavors) &#123;</span><br><span class="line">                    def tinkerTask = tasks.getByName(<span class="string">"tinkerPatch<span class="subst">$&#123;flavor.capitalize()&#125;</span>Release"</span>)</span><br><span class="line">                    dependsOn tinkerTask</span><br><span class="line">                    def preAssembleTask = tasks.getByName(<span class="string">"process<span class="subst">$&#123;flavor.capitalize()&#125;</span>ReleaseManifest"</span>)</span><br><span class="line">                    preAssembleTask.doFirst &#123;</span><br><span class="line">                        <span class="built_in">String</span> flavorName = preAssembleTask.name.substring(<span class="number">7</span>, <span class="number">8</span>).toLowerCase() + preAssembleTask.name.substring(<span class="number">8</span>, preAssembleTask.name.length() - <span class="number">15</span>)</span><br><span class="line">                        project.tinkerPatch.oldApk = <span class="string">"<span class="subst">$&#123;originOldPath&#125;</span>/<span class="subst">$&#123;flavorName&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;flavorName&#125;</span>-release.apk"</span></span><br><span class="line">                        project.tinkerPatch.buildConfig.applyMapping = <span class="string">"<span class="subst">$&#123;originOldPath&#125;</span>/<span class="subst">$&#123;flavorName&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;flavorName&#125;</span>-release-mapping.txt"</span></span><br><span class="line">                        project.tinkerPatch.buildConfig.applyResourceMapping = <span class="string">"<span class="subst">$&#123;originOldPath&#125;</span>/<span class="subst">$&#123;flavorName&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;flavorName&#125;</span>-release-R.txt"</span></span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            task(tinkerPatchAllFlavorDebug) &#123;</span><br><span class="line">                group = <span class="string">'tinker'</span></span><br><span class="line">                def originOldPath = getTinkerBuildFlavorDirectory()</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">String</span> flavor : flavors) &#123;</span><br><span class="line">                    def tinkerTask = tasks.getByName(<span class="string">"tinkerPatch<span class="subst">$&#123;flavor.capitalize()&#125;</span>Debug"</span>)</span><br><span class="line">                    dependsOn tinkerTask</span><br><span class="line">                    def preAssembleTask = tasks.getByName(<span class="string">"process<span class="subst">$&#123;flavor.capitalize()&#125;</span>DebugManifest"</span>)</span><br><span class="line">                    preAssembleTask.doFirst &#123;</span><br><span class="line">                        <span class="built_in">String</span> flavorName = preAssembleTask.name.substring(<span class="number">7</span>, <span class="number">8</span>).toLowerCase() + preAssembleTask.name.substring(<span class="number">8</span>, preAssembleTask.name.length() - <span class="number">13</span>)</span><br><span class="line">                        project.tinkerPatch.oldApk = <span class="string">"<span class="subst">$&#123;originOldPath&#125;</span>/<span class="subst">$&#123;flavorName&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;flavorName&#125;</span>-debug.apk"</span></span><br><span class="line">                        project.tinkerPatch.buildConfig.applyMapping = <span class="string">"<span class="subst">$&#123;originOldPath&#125;</span>/<span class="subst">$&#123;flavorName&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;flavorName&#125;</span>-debug-mapping.txt"</span></span><br><span class="line">                        project.tinkerPatch.buildConfig.applyResourceMapping = <span class="string">"<span class="subst">$&#123;originOldPath&#125;</span>/<span class="subst">$&#123;flavorName&#125;</span>/<span class="subst">$&#123;project.name&#125;</span>-<span class="subst">$&#123;flavorName&#125;</span>-debug-R.txt"</span></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="核心代码"><a href="#核心代码" class="headerlink" title="核心代码"></a>核心代码</h3><p><code>application = &quot;com.wkllme.llmwithtinker.app.LLMApplication&quot;</code><br>需要定义应用名称，这里需要与AndroidManifest.xml的文件保持一致<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br><span class="line">&lt;application</span><br><span class="line">    android:<span class="attribute">name</span>=<span class="string">".app.LLMApplication"</span></span><br><span class="line">    <span class="built_in">..</span><span class="built_in">..</span><span class="built_in">..</span></span><br></pre></td></tr></table></figure></p>
<p>ApplicationLike.java<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"unused"</span>)</span><br><span class="line"><span class="meta">@DefaultLifeCycle</span>(</span><br><span class="line">        application = <span class="string">"com.wkllme.llmwithtinker.app.LLMApplication"</span>,</span><br><span class="line">        flags = ShareConstants.TINKER_ENABLE_ALL,</span><br><span class="line">        loadVerifyFlag = <span class="keyword">false</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LLMApplicationLike</span> <span class="keyword">extends</span> <span class="title">DefaultApplicationLike</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LLMApplicationLike</span><span class="params">(Application application, <span class="keyword">int</span> tinkerFlags, <span class="keyword">boolean</span> tinkerLoadVerifyFlag, <span class="keyword">long</span> applicationStartElapsedTime, <span class="keyword">long</span> applicationStartMillisTime, Intent tinkerResultIntent, Resources[] resources, ClassLoader[] classLoader, AssetManager[] assetManager)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(application, tinkerFlags, tinkerLoadVerifyFlag, applicationStartElapsedTime, applicationStartMillisTime, tinkerResultIntent, resources, classLoader, assetManager);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBaseContextAttached</span><span class="params">(Context base)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onBaseContextAttached(base);</span><br><span class="line">        MultiDex.install(base);</span><br><span class="line">        LLMApplicationContext.application = getApplication();</span><br><span class="line">        LLMApplicationContext.context = getApplication();</span><br><span class="line"></span><br><span class="line">        TinkerManager.setTinkerApplicationLike(<span class="keyword">this</span>);</span><br><span class="line">        TinkerManager.initFastCrashProtect();</span><br><span class="line">        <span class="comment">//should set before tinker is installed</span></span><br><span class="line">        TinkerManager.setUpgradeRetryEnable(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//optional set logIml, or you can use default debug log</span></span><br><span class="line">        TinkerInstaller.setLogIml(<span class="keyword">new</span> MyLogImp());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//installTinker after load multiDex</span></span><br><span class="line">        <span class="comment">//or you can put com.tencent.tinker.** to main dex</span></span><br><span class="line">        TinkerManager.installTinker(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//一些初始化的操作可以放在这里面</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>加载更新补丁<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">TinkerInstaller</span><span class="selector-class">.onReceiveUpgradePatch</span>(getApplicationContext(),</span><br><span class="line">                            Environment.getExternalStorageDirectory().getAbsolutePath() + <span class="string">"/patch_signed_7zip.apk"</span>);</span><br><span class="line"><span class="selector-tag">Toast</span></span><br><span class="line">        <span class="selector-class">.makeText</span>(MainActivity.this, <span class="string">"更新补丁成功"</span>, Toast.LENGTH_LONG)</span><br><span class="line">        <span class="selector-class">.show</span>();</span><br></pre></td></tr></table></figure></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>再项目目录下执行<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./gradlew</span> assembleDebug</span><br></pre></td></tr></table></figure></p>
<p>会生成以下目录<br><img src="http://tp.linqmind.com/5d3fdfae7e351c76e70a5acfc4942185.png" alt="生成的apk目录"><br>现在生成的目录在build目录下，清理了后就没有了，如果需要保存构建的版本，则可以把目录移出去<br>，具体设置位置，在<code>app/build.gralde</code> 的<br><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bakPath</span> = <span class="title">file</span><span class="params">(<span class="string">"$&#123;buildDir&#125;/bakApk/"</span>)</span></span></span><br></pre></td></tr></table></figure></p>
<p>通过命令行安装版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">adb -s LJJVBQ5HUG59T89D push /Users/Shared/code/LLMWithTinker/app/build/bakApk/app-debug-1212-14-55-66.apk /data/<span class="built_in">local</span>/tmp/com.wkllme.llmwithtinker</span><br><span class="line">adb -s LJJVBQ5HUG59T89D shell pm install -r <span class="string">"/data/local/tmp/com.wkllme.llmwithtinker"</span></span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>LJJVBQ5HUG59T89D 连接的设备名称，根据具体的情况进行设置。</p>
</blockquote>
<p>安装了后，对这个安装包进行补丁操作，这里需要注意的是发的安装包与发补丁的包的tinkerid必须保持一致，即git的版本保持一致。<br>设置需要打补丁的app<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * you can use assembleRelease <span class="keyword">to</span> build you base apk</span><br><span class="line"> * use tinkerPatchRelease -POLD_APK=  -PAPPLY_MAPPING=  -PAPPLY_RESOURCE= <span class="keyword">to</span> build patch</span><br><span class="line"> * <span class="built_in">add</span> apk from the build/bakApk</span><br><span class="line"> */</span><br><span class="line">ext &#123;</span><br><span class="line">    //<span class="keyword">for</span> some reason, you may want <span class="keyword">to</span> ignore tinkerBuild, such <span class="keyword">as</span> instant run <span class="keyword">debug</span> build?</span><br><span class="line">    tinkerEnabled = true</span><br><span class="line"></span><br><span class="line">    //<span class="keyword">for</span> <span class="keyword">normal</span> build</span><br><span class="line">    //old apk <span class="keyword">file</span> <span class="keyword">to</span> build patch apk</span><br><span class="line">    tinkerOldApkPath = <span class="string">"$&#123;bakPath&#125;/app-debug-1212-14-55-56.apk"</span></span><br><span class="line">    //proguard mapping <span class="keyword">file</span> <span class="keyword">to</span> build patch apk</span><br><span class="line">//    tinkerApplyMappingPath = <span class="string">"$&#123;bakPath&#125;/app-debug-1212-14-55-56-mapping.txt"</span></span><br><span class="line">    //resource R.txt <span class="keyword">to</span> build patch apk, must <span class="built_in">input</span> <span class="keyword">if</span> there <span class="keyword">is</span> resource changed</span><br><span class="line">    tinkerApplyResourcePath = <span class="string">"$&#123;bakPath&#125;/app-debug-1212-14-55-56-R.txt"</span></span><br><span class="line"></span><br><span class="line">    //<span class="keyword">only</span> use <span class="keyword">for</span> build <span class="keyword">all</span> flavor, <span class="keyword">if</span> not, just ignore this field</span><br><span class="line">    //tinkerBuildFlavorDirectory = <span class="string">"$&#123;bakPath&#125;/app-1018-17-32-47"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>设置完毕后，执行补丁命令<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./gradlew</span> tinkerPatchDebug</span><br></pre></td></tr></table></figure></p>
<p>会生成补丁信息<br><img src="http://tp.linqmind.com/13168fd43b8e63cb49ed52a40349a18d.png" alt="补丁信息"><br>上传补丁至设备<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">adb -s LJJVBQ5HUG59T89D  push /Users/Shared/code/LLMWithTinker/app/build/outputs/tinkerPatch/debug/patch_signed_7zip.apk /storage/emulated/0/</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>LJJVBQ5HUG59T89D 连接的设备名称，根据具体的情况进行设置。</p>
</blockquote>
<p>设置好后，启动应用，加载补丁，退出应用<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">android</span><span class="selector-class">.os</span><span class="selector-class">.Process</span><span class="selector-class">.killProcess</span>(<span class="selector-tag">android</span><span class="selector-class">.os</span><span class="selector-class">.Process</span><span class="selector-class">.myPid</span>());</span><br></pre></td></tr></table></figure></p>
<p>重新打开应用，则补丁已经修复。</p>
<h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><p>示例地址: <a href="https://github.com/haibinpark/tinkerdemo" target="_blank" rel="noopener">https://github.com/haibinpark/tinkerdemo</a><br>wiki地址: <a href="https://github.com/Tencent/tinker/wiki" target="_blank" rel="noopener">https://github.com/Tencent/tinker/wiki</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是Tinker&quot;&gt;&lt;a href=&quot;#什么是Tinker&quot; class=&quot;headerlink&quot; title=&quot;什么是Tinker&quot;&gt;&lt;/a&gt;什么是Tinker&lt;/h1&gt;&lt;p&gt;Tinker是腾讯开源的热更新方案，通过热更新，可以使android应用的bug得到
    
    </summary>
    
      <category term="android" scheme="http://www.haibin.me/categories/android/"/>
    
    
      <category term="android" scheme="http://www.haibin.me/tags/android/"/>
    
      <category term="tinker" scheme="http://www.haibin.me/tags/tinker/"/>
    
      <category term="hotfix" scheme="http://www.haibin.me/tags/hotfix/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio升级后导入项目出现[Error:No service of type Factory available in ProjectScopeServices.]</title>
    <link href="http://www.haibin.me/2016/09/22/Android-Studio%E5%8D%87%E7%BA%A7%E5%90%8E%E5%AF%BC%E5%85%A5%E9%A1%B9%E7%9B%AE%E5%87%BA%E7%8E%B0-Error-No-service-of-type-Factory-available-in-ProjectScopeServices/"/>
    <id>http://www.haibin.me/2016/09/22/Android-Studio升级后导入项目出现-Error-No-service-of-type-Factory-available-in-ProjectScopeServices/</id>
    <published>2016-09-22T03:15:41.000Z</published>
    <updated>2019-07-03T23:28:43.808Z</updated>
    
    <content type="html"><![CDATA[<p>将 Android studio由原来的2.1.3 升级到2.2,再导入项目的时候，出现了错误：<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error:No<span class="built_in"> service </span>of<span class="built_in"> type </span>Factory available <span class="keyword">in</span> ProjectScopeServices.</span><br></pre></td></tr></table></figure></p>
<p>通过排查，把问题定位到根目录的build.gradle<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.1.3'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.github.dcendents:android-maven-gradle-plugin:1.3'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>直接将<br><code>&#39; classpath com.github.dcendents:android-maven-gradle-plugin:1.3&#39;</code><br>更新到1.4.1就可以解决问题了。</p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://code.google.com/p/android/issues/detail?id=219692" target="_blank" rel="noopener">https://code.google.com/p/android/issues/detail?id=219692</a><br><a href="http://www.jianshu.com/p/c4f4894ad215" target="_blank" rel="noopener">http://www.jianshu.com/p/c4f4894ad215</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;将 Android studio由原来的2.1.3 升级到2.2,再导入项目的时候，出现了错误：&lt;br&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li
    
    </summary>
    
      <category term="tools" scheme="http://www.haibin.me/categories/tools/"/>
    
      <category term="question" scheme="http://www.haibin.me/categories/tools/question/"/>
    
    
      <category term="Android" scheme="http://www.haibin.me/tags/Android/"/>
    
      <category term="Android Studio" scheme="http://www.haibin.me/tags/Android-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Android开发系列-帕克胖水煮Dagger2</title>
    <link href="http://www.haibin.me/2016/08/15/Android%E5%BC%80%E5%8F%91%E7%B3%BB%E5%88%97-%E5%B8%95%E5%85%8B%E8%83%96%E6%B0%B4%E7%85%AEDagger2/"/>
    <id>http://www.haibin.me/2016/08/15/Android开发系列-帕克胖水煮Dagger2/</id>
    <published>2016-08-15T01:28:28.000Z</published>
    <updated>2019-07-03T23:28:43.808Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><ul>
<li>dagger2中的Inject,Component,Module,Provides的含义，他们有什么作用?</li>
<li>dagger2到底能带来哪些好处？</li>
<li>怎样把dagger2应用到具体项目中？</li>
</ul>
<h1 id="视频讲解"><a href="#视频讲解" class="headerlink" title="视频讲解"></a>视频讲解</h1><blockquote>
<p>Dagger2讲解视频</p>
</blockquote>
<iframe height="498" width="800" src="http://player.youku.com/embed/XMTY5MTgyOTEwMA==" frameborder="0" allowfullscreen></iframe>

<p><a href="http://player.youku.com/player.php/sid/XMTY5MTgyOTEwMA==/v.swf" target="_blank" rel="noopener">http://player.youku.com/player.php/sid/XMTY5MTgyOTEwMA==/v.swf</a></p>
<h2 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h2><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ul>
<li>依赖注入(Dependency Injection简称DI)</li>
<li>java注解(Annotation)</li>
</ul>
<p>依赖注入：就是目标类（目标类需要进行依赖初始化的类，下面都会用目标类一词来指代）中所依赖的其他的类的初始化过程，不是通过手动编码的方式创建，而是通过技术手段可以把其他的类的已经初始化好的实例自动注入到目标类中。<br>一般来说，依赖注入又叫控制反转。控制反转一般分为两种类型(依赖注入与依赖查找)，依赖注入比较常用。</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseFragment</span> <span class="keyword">extends</span> <span class="title">Fragment</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onCreate(<span class="meta">@Nullable</span> <span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setupFragmentComponent(<span class="type">AppController</span>.get(getActivity()).getAppServiceComponent());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">abstract</span> void setupFragmentComponent(<span class="type">AppServiceComponent</span> appServiceComponent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注解（Annotation），也叫元数据。一种代码级别的说明。它是JDK1.5及以后版本引入的一个特性，与类、接口、枚举是在同一个层次。它可以声明在包、类、字段、方法、局部变量、方法参数等的前面，用来对这些元素进行说明，注释。</p>
<h2 id="Inject"><a href="#Inject" class="headerlink" title="Inject"></a>Inject</h2><ul>
<li><p>普通写法</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Class</span> A &#123;</span><br><span class="line">  <span class="keyword">B </span><span class="keyword">b </span>= new <span class="keyword">B();</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Inject写法</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Class</span> A&#123;</span><br><span class="line">  <span class="comment">@Inject</span></span><br><span class="line">  <span class="keyword">B </span><span class="keyword">b;</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>用注解(Annotation)来标注目标类中所依赖的其他类，同样用注解来标注所依赖的其他类的构造函数，那注解的名字就叫Inject</p>
<h2 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h2><p>Component也是一个注解类，一个类要想是Component，必须用Component注解来标注该类，并且该类是接口或抽象类。我们不讨论具体类的代码，我想从抽象概念的角度来讨论Component。上文中提到Component在目标类中所依赖的其他类与其他类的构造函数之间可以起到一个桥梁的作用。</p>
<p><code>Component</code>的工作原理<br>Component需要引用到目标类的实例，Component会查找目标类中用Inject注解标注的属性，查找到相应的属性后会接着查找该属性对应的用Inject标注的构造函数（这时候就发生联系了），剩下的工作就是初始化该属性的实例并把实例进行赋值。因此我们也可以给Component叫另外一个名字注入器（Injector）</p>
<h2 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h2><p>问题：项目中使用到了第三方的类库，第三方类库又不能修改，所以根本不可能把Inject注解加入这些类中，这时我们的Inject就失效了。</p>
<p>那我们可以封装第三方的类库，封装的代码怎么管理呢，总不能让这些封装的代码散落在项目中的任何地方，总得有个好的管理机制，那Module就可以担当此任。<br>可以把封装第三方类库的代码放入Module中，像下面的例子：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Module</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ModuleClass</span></span>&#123;</span><br><span class="line">      <span class="comment">//A是第三方类库中的一个类</span></span><br><span class="line">      <span class="function">A <span class="title">provideA</span><span class="params">()</span></span>&#123;</span><br><span class="line">           <span class="keyword">return</span> A();</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Module其实是一个简单工厂模式，Module里面的方法基本都是创建类实例的方法。接下来问题来了，因为Component是注入器（Injector），我们怎么能让Component与Module有联系呢？</p>
<p>Component是注入器，它一端连接目标类，另一端连接目标类依赖实例，它把目标类依赖实例注入到目标类中。上文中的Module是一个提供类实例的类，所以Module应该是属于Component的实例端的（连接各种目标类依赖实例的端），Component的新职责就是管理好Module，Component中的modules属性可以把Module加入Component，modules可以加入多个Module。</p>
<h2 id="Qualifier"><a href="#Qualifier" class="headerlink" title="Qualifier"></a>Qualifier</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> String param1;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Inject</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Inject</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">A</span><span class="params">(String param1)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.param1 = param1</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line">  <span class="meta">@Inject</span></span><br><span class="line">  A a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">使用限定符</span><br></pre></td></tr></table></figure>
<p>class A{<br>  private String param1;</p>
<p>  @Inject<br>  @NoParmas //Qualifier<br>  public A(){</p>
<p>  }</p>
<p>  @Inject<br>  @HasParams //Qualifier<br>  public A(String param1){<br>    this.param1 = param1<br>  }<br>}</p>
<p>class B{<br>  @Inject<br>  @Noparams<br>  A a;<br>}</p>
<p>```</p>
<p>限定符是解决依赖注入迷失的问题。</p>
<h2 id="Scope"><a href="#Scope" class="headerlink" title="Scope"></a>Scope</h2><p>Scope的真正用处就在于Component的组织。</p>
<p>更好的管理Component之间的组织方式，不管是依赖方式还是包含方式，都有必要用自定义的Scope注解标注这些Component，这些注解最好不要一样了，不一样是为了能更好的体现出Component之间的组织方式。还有编译器检查有依赖关系或包含关系的Component，若发现有Component没有用自定义Scope注解标注，则会报错。</p>
<p>更好的管理Component与Module之间的匹配关系，编译器会检查 Component管理的Modules，若发现标注Component的自定义Scope注解与Modules中的标注创建类实例方法的注解不一样，就会报错。</p>
<p>可读性提高，如用Singleton标注全局类，这样让程序猿立马就能明白这类是全局单例类。</p>
<p>Inject，Component，Module，Provides是dagger2中的最基础最核心的知识点。奠定了dagger2的整个依赖注入框架。</p>
<p>Inject主要是用来标注目标类的依赖和依赖的构造函数<br>Component它是一个桥梁，一端是目标类，另一端是目标类所依赖类的实例，它也是注入器（Injector）负责把目标类所依赖类的实例注入到目标类中，同时它也管理Module。<br>Module和Provides是为解决第三方类库而生的，Module是一个简单工厂模式，Module可以包含创建类实例的方法，这些方法用Provides来标注</p>
<h1 id="dagger2的好处"><a href="#dagger2的好处" class="headerlink" title="dagger2的好处"></a>dagger2的好处</h1><ul>
<li>增加开发效率、省去重复的简单体力劳动，最明显的变化是不用一个一个的去new实例了。  </li>
<li>更好的管理类实例，Component，Module，整个app的类实例结构变的很清晰。让我们更好的管理管理项目  </li>
<li><p>解耦<br>应为有了dagger2,一个类的new代码就不会出现在一个项目的任何一个地方，构造函数发生变化，只需要修改module中的代码即可。</p>
</li>
<li><p>方便测试</p>
</li>
</ul>
<h1 id="注意点"><a href="#注意点" class="headerlink" title="注意点"></a>注意点</h1><ul>
<li>写法<br>先考虑component,然后再建module,最好在考虑其他类。</li>
<li>调试<br>这里的错误不是很友好，如果你仔细看的话，还是会发现的。</li>
<li>用法<br>一个app必须要有一个Component（名字可以是ApplicationComponent）用来管理app的整个全局类实例<br>多个页面可以共享一个Component<br>不是说Component就一定要对应一个或多个Module，Component也可以不包含Module<br>自定义Scope注解最好使用上，虽然不使用也是可以让项目运行起来的，但是加上好处多多。</li>
<li>Dagger2的注入流程<br>步骤1：查找Module中是否存在创建该类的方法。<br>步骤2：若存在创建类方法，查看该方法是否存在参数<br>  步骤2.1：若存在参数，则按从<strong>步骤1</strong>开始依次初始化每个参数<br>  步骤2.2：若不存在参数，则直接初始化该类实例，一次依赖注入到此结束<br>步骤3：若不存在创建类方法，则查找Inject注解的构造函数，<pre><code>看构造函数是否存在参数
</code></pre>  步骤3.1：若存在参数，则从<strong>步骤1</strong>开始依次初始化每个参数<br>  步骤3.2：若不存在参数，则直接初始化该类实例，一次依赖注入到此结束  </li>
</ul>
<h1 id="使用dagger2"><a href="#使用dagger2" class="headerlink" title="使用dagger2"></a>使用dagger2</h1><p><a href="#视频讲解">视频讲解</a>  </p>
<h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p>Android：dagger2让你爱不释手-基础依赖注入框架篇<br><a href="http://www.jianshu.com/p/cd2c1c9f68d4" target="_blank" rel="noopener">http://www.jianshu.com/p/cd2c1c9f68d4</a></p>
<p>Android：dagger2让你爱不释手-重点概念讲解、融合篇<br><a href="http://www.jianshu.com/p/1d42d2e6f4a5" target="_blank" rel="noopener">http://www.jianshu.com/p/1d42d2e6f4a5</a></p>
<p>Android：dagger2让你爱不释手-终结篇<br><a href="http://www.jianshu.com/p/65737ac39c44" target="_blank" rel="noopener">http://www.jianshu.com/p/65737ac39c44</a></p>
<p><a href="http://baike.baidu.com/view/1486379.htm" target="_blank" rel="noopener">http://baike.baidu.com/view/1486379.htm</a></p>
<p><a href="http://baike.baidu.com/link?url=aTMlLy_LOV3j6d9aszLbSOwUajGSL_CI1LagJ8bh--PxtOmrCI5vSwewTPCxLcVe07Q4BNoxqFX3TpsJ5B9yPq" target="_blank" rel="noopener">http://baike.baidu.com/link?url=aTMlLy_LOV3j6d9aszLbSOwUajGSL_CI1LagJ8bh--PxtOmrCI5vSwewTPCxLcVe07Q4BNoxqFX3TpsJ5B9yPq</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目标&quot;&gt;&lt;a href=&quot;#目标&quot; class=&quot;headerlink&quot; title=&quot;目标&quot;&gt;&lt;/a&gt;目标&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;dagger2中的Inject,Component,Module,Provides的含义，他们有什么作用?&lt;/li&gt;
&lt;li&gt;d
    
    </summary>
    
      <category term="Android" scheme="http://www.haibin.me/categories/Android/"/>
    
      <category term="Dagger2" scheme="http://www.haibin.me/categories/Android/Dagger2/"/>
    
    
      <category term="Android" scheme="http://www.haibin.me/tags/Android/"/>
    
      <category term="Dagger2" scheme="http://www.haibin.me/tags/Dagger2/"/>
    
      <category term="Linux" scheme="http://www.haibin.me/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>基于云端的持续集成实践</title>
    <link href="http://www.haibin.me/2016/08/01/%E5%9F%BA%E4%BA%8E%E4%BA%91%E7%AB%AF%E7%9A%84%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.haibin.me/2016/08/01/基于云端的持续集成实践/</id>
    <published>2016-08-01T01:03:23.000Z</published>
    <updated>2019-07-03T23:28:43.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为了达到产品快速交互，缩短产品开发周期，我们引入了持续集成，现持续集成有两种方案  </p>
<ul>
<li>方案一.<br>aliyun代码管理，阿里云做镜像管理，并且使用阿里云做自动部署<br>1.使用aliyun的代码管理<br>2.使用阿里云的镜像管理<br>3.阿里云自动部署  </li>
<li>方案二.<br>使用gitlab做代码管理，jenkins做测试与镜像构建，aliyun做镜像管理，并采用阿里云自动部署<br>1.使用aliyun的代码管理<br>2.jenkins做自动哈测试，与镜像构建<br>3.aliyun做镜像管理<br>4.采用aliyun自动部署<br>我们根据情况，选择了第二种方案。  </li>
</ul>
<h1 id="拓扑图"><a href="#拓扑图" class="headerlink" title="拓扑图"></a>拓扑图</h1><p><img src="http://qiniu1.kopbit.com/a6539a30d4dbea467cbc1621994580b6.png" alt="网络图谱图"></p>
<h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><p><img src="http://qiniu1.kopbit.com/432e64a12bcd4c61fdc5c226b30d66a6.png" alt="流程图"></p>
<h1 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h1><h2 id="代码管理"><a href="#代码管理" class="headerlink" title="代码管理"></a>代码管理</h2><p>由于现在国内的好多的代码管理平台，是基于gitlab进行修改的，并且对gitlab的功能进行了阉割，对jenkins的支持也不是很好，所以我选择gitlab作为代码管理工具<br>使用方法与本地的gitlab相近<br>这里需要注意的是通过github联合登录后，需要重新设置访问的密码，linux的用户可以不重新设定，这里主要是通过开发工具clone项目的时候，windows操作系统需要输入用户名与密码  </p>
<h2 id="jenkins"><a href="#jenkins" class="headerlink" title="jenkins"></a>jenkins</h2><p>jenkins现在没有网络版本的，所以我们现在需要自己搭建jenkins，jenkins功能，进行持续集成  </p>
<h2 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a>镜像管理</h2><p>由于我们整个是采用docker进行构建与部署，所以我们采用aliyun自带的私有镜像管理，对于私有镜像，阿里云有个数限制，限制数量为3个。  </p>
<h2 id="自动部署"><a href="#自动部署" class="headerlink" title="自动部署"></a>自动部署</h2><p>自动部署，采用的是aliyun的容器服务，采用集群与docker.</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="gitlab配置"><a href="#gitlab配置" class="headerlink" title="gitlab配置"></a>gitlab配置</h2><p>新建项目(略)  </p>
<ul>
<li>jenkins-ci 设置<br>这里的用户名与密码是有构建与读权限的用户<br><img src="http://qiniu1.kopbit.com/e5370d7f5860fa35736433323668e922.png" alt=""></li>
<li>设置发布key<br><img src="http://qiniu1.kopbit.com/13f54e52ea2746c51ae3b63691324605.png" alt=""></li>
</ul>
<h2 id="jenkins配置"><a href="#jenkins配置" class="headerlink" title="jenkins配置"></a>jenkins配置</h2><ul>
<li><p>jenkins 安装  </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - http<span class="variable">s:</span>//jenkins-ci.org/debian/jenkins-ci.org.key | sudo apt-key <span class="built_in">add</span> -</span><br><span class="line">sudo <span class="keyword">sh</span> -<span class="keyword">c</span> <span class="string">'echo deb http://pkg.jenkins-ci.org/debian-stable binary/ &gt; /etc/apt/sources.list.d/jenkins.list'</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">sudo apt-<span class="built_in">get</span> install jenkins</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装nginx<br><code>sudo aptitude -y install nginx</code>  </p>
</li>
<li><p>配置nginx</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">upstream</span> app_server &#123;</span><br><span class="line">    <span class="attribute">server</span> <span class="number">127.0.0.1:8080</span> fail_timeout=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="attribute">listen</span> [::]:<span class="number">80</span> default ipv6only=<span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">server_name</span> ci.kopbit.com;</span><br><span class="line">    <span class="attribute">ignore_invalid_headers</span> <span class="literal">off</span>;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">location</span> / &#123;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>        Host <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>        X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>        X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        <span class="attribute">proxy_set_header</span>        X-Forwarded-Proto <span class="variable">$scheme</span>;</span><br><span class="line">        <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">        <span class="attribute">proxy_pass</span> http://app_server;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>jenkins 配置<br><strong>jenkins 基础设置</strong><br>这里的配置，涉及到权限与初始化，在初始化，需要<br>安装必要插件git,git-client,gitlab-client<br>gitlab-client插件设置<br>这里需要注意的是，要在gitlab中获取api token<br><img src="http://qiniu1.kopbit.com/1b477c3c32bcbe12288f071cb3994d34.png" alt="gitlab配置"><br>Gitlab Notifier Configuration<br><img src="http://qiniu1.kopbit.com/8e1bc14859a0b8991f12718d503f49dc.png" alt="gitlab notifier configuration"><br>在访问控制中，消炎药进行项目矩阵授权<br><img src="http://qiniu1.kopbit.com/4519ae327b4ce8d49ce0ca57c011f402.png" alt="项目举证授权"><br><strong>jenkins 项目设置</strong><br>常规设置<br><img src="http://qiniu1.kopbit.com/68338530a326e2b1f614a4f950445d6f.png" alt=""><br>源代码管理配置<br>在源代码管理中，生成的key必须在jenkins目录下的.ssh目录  </p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root<span class="variable">@iZu1bcv8djtZ</span><span class="symbol">:~</span><span class="comment"># ^C</span></span><br><span class="line">root<span class="variable">@iZu1bcv8djtZ</span><span class="symbol">:~</span><span class="comment"># su jenkins</span></span><br><span class="line">jenkins<span class="variable">@iZu1bcv8djtZ</span><span class="symbol">:/root</span><span class="variable">$ </span>cd ~</span><br><span class="line">jenkins<span class="variable">@iZu1bcv8djtZ</span><span class="symbol">:~</span><span class="variable">$ </span>ls .ssh/</span><br><span class="line">id_rsa  id_rsa.pub  known_hosts</span><br><span class="line">jenkins<span class="variable">@iZu1bcv8djtZ</span><span class="symbol">:~</span>$</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>生成key的命令<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh-keygen</span> <span class="selector-tag">-C</span> "<span class="selector-tag">park</span>@<span class="keyword">kopbit</span>.<span class="keyword">com</span>"</span><br></pre></td></tr></table></figure></p>
<p>然后将此key设置到gitlab中。<br><img src="http://qiniu1.kopbit.com/e30d1c627d3af4fdf366a78bf7e56d75.png" alt=""><br>触发器设置<br><img src="http://qiniu1.kopbit.com/3ecd7c9532ce938fae46311924032a6e.png" alt=""></p>
<ul>
<li>设置域名<br>在阿里云的域名管理中，添加域名 <code>ci.abc.com</code>  </li>
</ul>
<h2 id="docker-配置"><a href="#docker-配置" class="headerlink" title="docker 配置"></a>docker 配置</h2><ul>
<li>docker安装<br>略  </li>
<li>docker配置<br>安装docker,并且加入docker的启动参数，修改路径<code>/etc/default/docker</code><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DOCKER_OPTS=' <span class="params">--host=unix</span>:<span class="string">///var/run/docker.sock</span> <span class="params">--restart=false</span> -g <span class="string">/opt/app/jenkins/docker</span> -G jenkins'</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>重新启动docker<br><code>service docker restart</code>  </p>
<h2 id="aliyun镜像服务配置"><a href="#aliyun镜像服务配置" class="headerlink" title="aliyun镜像服务配置"></a>aliyun镜像服务配置</h2><ul>
<li>新建镜像<br>镜像服务访问地址:<br><code>https://cr.console.aliyun.com/?spm=5176.1971733.0.2.cnJySP#/docker/image/list</code><br>初次进来的时候，需要修改仓库的密码<br>点击创建按钮<br><img src="http://qiniu1.kopbit.com/82d6c01b134c2a8b510b3ad290f5d862.png" alt="创建镜像"><br>必填项<br>1&gt; 镜像名称<br>2&gt; 摘要<br>3&gt; 仓库类型为私有  </li>
</ul>
<h2 id="aliyun集群服务配置"><a href="#aliyun集群服务配置" class="headerlink" title="aliyun集群服务配置"></a>aliyun集群服务配置</h2><ul>
<li>新建集群<br>在管理控制台，点击产品与服务，在弹性计算中，点击容器服务，点击左侧的集群<br><img src="http://qiniu1.kopbit.com/42941711da3a5b1cef595a92d29709e6.png" alt="创建集群"><br>这里需要注意有两个方面<br>(1) 需要选择自动穿件负载均衡<br>(2) 集群所在地与添加的实例必须在同一个地域</li>
<li>添加实例<br>在集群列表中，对应的集群行，选择更多操作，执行<code>添加已有实例</code><br>选中实例，点击下一步，这里需要执行相关的脚本，并且安装docker  <figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -Ls http:<span class="regexp">//</span>aliyuncontainerservice.oss-cn-hangzhou.aliyuncs.com<span class="regexp">/1.11/</span>attachNodeScript | sudo -H bash -s <span class="number">1367</span>f76c5fb2028ee56a1f64454f1f46f5974368 --instance-id i-<span class="number">94</span>o82v9bt</span><br></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>没添加一个实例的脚本都不一样，请仔细辨认。</p>
</blockquote>
<p>选择服务，就可以看见相关的服务列表<br>这些都是系统的服务<br><img src="http://qiniu1.kopbit.com/e5550dcbc46339ca54764b1534b3fa30.png" alt="系统服务"></p>
<ul>
<li>创建应用<br>创建应用前，需要准备编排模板<br>编排模板脚本  <figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">web:</span></span><br><span class="line">    <span class="symbol">image:</span> <span class="string">'registry.aliyuncs.com/stephen/kop-onteditor-ui'</span></span><br><span class="line">    <span class="symbol">ports:</span></span><br><span class="line">        - <span class="string">"58200:80"</span></span><br><span class="line">        - <span class="string">"58222:22"</span></span><br><span class="line">    <span class="symbol">volumes:</span></span><br><span class="line">        - <span class="regexp">/etc/localtime</span><span class="symbol">:/etc/localtime</span><span class="symbol">:ro</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>使用编排模板创建应用<br><img src="http://qiniu1.kopbit.com/2360f40325840395b503da2bcd79c86e.png" alt="创建应用"><br>选择上面准备的模板<br><img src="http://qiniu1.kopbit.com/d0c8bfb880c020ffe2b48116a52757b2.png" alt="模板"><br>点击创建并且部署，我们在应用列表可参看相关应用<br><img src="http://qiniu1.kopbit.com/e850002de87e874acea202315fe922af.png" alt="">  </p>
<ul>
<li>设置域名<br>选择服务，并变更配置,在web路由规则中添加端口与域名<br><img src="http://qiniu1.kopbit.com/aee5c48314a64d717ad28e47ba6001c9.png" alt=""></li>
</ul>
<h1 id="脚本准备"><a href="#脚本准备" class="headerlink" title="脚本准备"></a>脚本准备</h1><p><code>autologin.sh</code> 自动登录脚本<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">#!/usr/bin/expect</span></span><br><span class="line">spawn docker login --username=demo@kopbit.com registry.aliyuncs.com</span><br><span class="line">expect <span class="string">"Password:"</span></span><br><span class="line">send <span class="string">"1231321\r"</span></span><br><span class="line">expect <span class="string">"Email:"</span></span><br><span class="line">send <span class="string">"demo@kopbit.com\r"</span></span><br><span class="line">expect eof</span><br><span class="line"><span class="keyword">exit</span></span><br></pre></td></tr></table></figure></p>
<p><code>autlogout.sh</code> 自动登出脚本<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> #!/usr/bin/env bash</span><br><span class="line">docker logout registry<span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure></p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>访问<code>http://web1.abc.com</code></p>
<h1 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h1><p>可以满足自动构建，自动发布的需求<br>缺点:</p>
<ol>
<li>就是太慢了，jenkins的效率要提高。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;为了达到产品快速交互，缩短产品开发周期，我们引入了持续集成，现持续集成有两种方案  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;方案一.&lt;br&gt;aliyun
    
    </summary>
    
      <category term="Docker" scheme="http://www.haibin.me/categories/Docker/"/>
    
      <category term="Linux" scheme="http://www.haibin.me/categories/Docker/Linux/"/>
    
      <category term="CI" scheme="http://www.haibin.me/categories/Docker/Linux/CI/"/>
    
      <category term="Cloud" scheme="http://www.haibin.me/categories/Docker/Linux/CI/Cloud/"/>
    
    
      <category term="Docker" scheme="http://www.haibin.me/tags/Docker/"/>
    
      <category term="linux" scheme="http://www.haibin.me/tags/linux/"/>
    
      <category term="CI" scheme="http://www.haibin.me/tags/CI/"/>
    
  </entry>
  
  <entry>
    <title>帕克胖夜话Docker-安装Docker Engine</title>
    <link href="http://www.haibin.me/2016/07/28/%E5%B8%95%E5%85%8B%E8%83%96%E5%A4%9C%E8%AF%9DDocker-%E5%AE%89%E8%A3%85-Docker-Engine/"/>
    <id>http://www.haibin.me/2016/07/28/帕克胖夜话Docker-安装-Docker-Engine/</id>
    <published>2016-07-28T02:44:14.000Z</published>
    <updated>2019-07-03T23:28:43.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><h2 id="安装系统必要软件"><a href="#安装系统必要软件" class="headerlink" title="安装系统必要软件"></a>安装系统必要软件</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></span><br><span class="line">$ sudo apt-<span class="built_in">get</span> install apt-transport-https <span class="keyword">ca</span>-certificates</span><br><span class="line"></span><br><span class="line">sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.ne<span class="variable">t:80</span> --recv-<span class="built_in">keys</span> <span class="number">58118</span>E89F3A912897C070ADBF76221572C52609D</span><br><span class="line">$ lsb_release -<span class="keyword">a</span></span><br></pre></td></tr></table></figure>
<h2 id="添加安装docker-engine的镜像源"><a href="#添加安装docker-engine的镜像源" class="headerlink" title="添加安装docker engine的镜像源"></a>添加安装docker engine的镜像源</h2><h3 id="查看操作系统版本"><a href="#查看操作系统版本" class="headerlink" title="查看操作系统版本"></a>查看操作系统版本</h3><p>执行命令 <code>lsb_release -a</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">No</span> <span class="string">LSB</span> <span class="string">modules</span> <span class="string">are</span> <span class="string">available.</span></span><br><span class="line"><span class="string">Distributor</span> <span class="attr">ID:</span> <span class="string">Ubuntu</span></span><br><span class="line"><span class="attr">Description:</span>    <span class="string">Ubuntu</span> <span class="number">14.04</span><span class="number">.3</span> <span class="string">LTS</span></span><br><span class="line"><span class="attr">Release:</span>        <span class="number">14.04</span></span><br><span class="line"><span class="attr">Codename:</span>       <span class="string">trusty</span></span><br></pre></td></tr></table></figure></p>
<h3 id="创建镜像源文件"><a href="#创建镜像源文件" class="headerlink" title="创建镜像源文件"></a>创建镜像源文件</h3><p>创建docker.list文件，文件路径 <code>/etc/apt/sources.list.d/docker.list</code>,根据操作系统的版本，来选择相关的镜像源头<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">On Ubuntu Precise <span class="number">12.04</span> (LTS)</span><br><span class="line">deb <span class="string">https:</span><span class="comment">//apt.dockerproject.org/repo ubuntu-precise main</span></span><br><span class="line">On Ubuntu Trusty <span class="number">14.04</span> (LTS)</span><br><span class="line">deb <span class="string">https:</span><span class="comment">//apt.dockerproject.org/repo ubuntu-trusty main</span></span><br><span class="line">Ubuntu Wily <span class="number">15.10</span></span><br><span class="line">deb <span class="string">https:</span><span class="comment">//apt.dockerproject.org/repo ubuntu-wily main</span></span><br><span class="line">Ubuntu Xenial <span class="number">16.04</span> (LTS)</span><br><span class="line">deb <span class="string">https:</span><span class="comment">//apt.dockerproject.org/repo ubuntu-xenial main</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h2><ul>
<li>更新 <code>apt</code> 包索引<br><code>sudo apt-get update</code>  </li>
<li>安装 <code>docker</code><br><code>sudo apt-get install docker-engine</code></li>
<li>安装docker指定版本  <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">cache</span> showpkg docker-<span class="keyword">engine</span></span><br><span class="line">apt-<span class="keyword">get</span> <span class="keyword">install</span> -y -q docker-<span class="keyword">engine</span>=<span class="number">1.8</span><span class="number">.1</span><span class="number">-0</span>~trusty</span><br></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;准备&quot;&gt;&lt;a href=&quot;#准备&quot; class=&quot;headerlink&quot; title=&quot;准备&quot;&gt;&lt;/a&gt;准备&lt;/h1&gt;&lt;h2 id=&quot;安装系统必要软件&quot;&gt;&lt;a href=&quot;#安装系统必要软件&quot; class=&quot;headerlink&quot; title=&quot;安装系统必要软件&quot;
    
    </summary>
    
      <category term="Docker" scheme="http://www.haibin.me/categories/Docker/"/>
    
      <category term="Docker Engine" scheme="http://www.haibin.me/categories/Docker/Docker-Engine/"/>
    
      <category term="talk" scheme="http://www.haibin.me/categories/Docker/Docker-Engine/talk/"/>
    
    
      <category term="Linux" scheme="http://www.haibin.me/tags/Linux/"/>
    
      <category term="Docker" scheme="http://www.haibin.me/tags/Docker/"/>
    
      <category term="Docker Engine" scheme="http://www.haibin.me/tags/Docker-Engine/"/>
    
  </entry>
  
  <entry>
    <title>穷爸爸富爸爸读书笔记</title>
    <link href="http://www.haibin.me/2016/07/17/%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.haibin.me/2016/07/17/穷爸爸富爸爸读书笔记/</id>
    <published>2016-07-17T09:38:09.000Z</published>
    <updated>2019-07-03T23:28:43.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础的财务知识"><a href="#基础的财务知识" class="headerlink" title="基础的财务知识"></a>基础的财务知识</h1><p>什么是资产，什么是负债呢，下面结合图形进行了简单的定义<br><strong>资产现金流图</strong><br><img src="http://7xlvqo.com1.z0.glb.clouddn.com/9817fb219c360ed111d8c2a1a6db61d8.png" alt="资产现金流"><br><strong>负债现金流图</strong><br><img src="http://7xlvqo.com1.z0.glb.clouddn.com/e253b68f165a0ed9af4af7134b0967c4.png" alt="负债现金流图"><br>很多人陷入财务陷阱的最根本的原因在于，他们不明白资产与负债的区别<br>那什么是资产，什么是负债呢？<br><strong>资产</strong> 是能够把钱放进你口袋里的东西<br><strong>负债</strong> 是把钱从你口袋里取走的东西  </p>
<p>通常在财务报告中，现金流能够告诉我们先向哪里留了<br>下图是<strong>穷人的现金流图</strong><br><img src="http://7xlvqo.com1.z0.glb.clouddn.com/cb18fc868d728ed295f37a3b28f8632a.png" alt="穷人的现金流"></p>
<p><strong>中产阶级的现金流</strong><br><img src="http://7xlvqo.com1.z0.glb.clouddn.com/26df8674d6873d664551ad9996131809.png" alt="中产阶级现金流"></p>
<p><strong>富人的现金流</strong><br><img src="http://7xlvqo.com1.z0.glb.clouddn.com/19463015058dacfa81c96138e388db5a.png" alt="富人现金流"></p>
<p>所以要想获得财富，努力挣钱是不够的，更需要有理财的观念，减小你的负债，并且增加的你得资产.</p>
<blockquote>
<p>对于房子的理解上，穷人与富人的观点不一致<br>穷人或中产阶级认为房子是资产，但是富人认为房子是负债。那什么情况房子是资产的呢？当你的房子是通过资产的收入来购买的，而不是通过银行贷款而购买的，并且房子是用于出租或其他活动，能够为你带来收入的情况下，那么才是资产，其余的情况那么他就是负债。  </p>
</blockquote>
<p>要想或的财务自由，需要记住下面的话:  </p>
<ul>
<li>富人买入资产  </li>
<li>穷人只有支出  </li>
<li>中产阶级购买自以为是资产的负债</li>
</ul>
<h1 id="职业投资者基本的要素"><a href="#职业投资者基本的要素" class="headerlink" title="职业投资者基本的要素"></a>职业投资者基本的要素</h1><p>通过上面的情况，我们尅了解到，要实现财务自由，那么就要增加资产项<br>要很好的发现市场机会，能够在市场中获得利益，那么就必须让自己成为<strong>职业投资者</strong>，如何才是一个职业的投资者呢？一个职业投资者需要有以下要素</p>
<ul>
<li>知道如何寻找其他人都忽视的机会  </li>
<li>知道如何增加资金  </li>
<li>知道怎么样把精明的人组织起来  </li>
</ul>
<h1 id="成功所必须要的技能"><a href="#成功所必须要的技能" class="headerlink" title="成功所必须要的技能"></a>成功所必须要的技能</h1><ul>
<li>对现金流能够很好的管理  </li>
<li>对系统的管理<br>(1)对自我的管理<br>(2)对时间的管理<br>(3)对家庭的管理</li>
<li>对人员的管理  </li>
<li>克服恐惧<br>克服对亏钱与失败的恐惧  </li>
<li>不要做愤青<br>要理智的看问题，分析问题  </li>
<li>克服懒惰<br>这里懒惰不是身体的懒惰，而是思想的懒惰  </li>
<li>改掉自己的不良习惯<br>比如说乱花钱的习惯，购买奢侈品的习惯，改掉先支付给别人，然后支付给自己的坏习惯。  </li>
<li>要谦虚，不要自负</li>
</ul>
<h1 id="实现财务自由的步骤"><a href="#实现财务自由的步骤" class="headerlink" title="实现财务自由的步骤"></a>实现财务自由的步骤</h1><ul>
<li>找到一个超现实的理由，不要来虚的。  </li>
<li>慎重选择  </li>
<li>掌握一种模式，然后学习一种新的模式，拓展你解决问题的思路  </li>
<li>首先支付自己，哪怕你入不敷出的情况  </li>
<li>给你的经纪人优厚的报酬，应为你需要的好的建议  </li>
<li>做一个印第安给予者<br>这里指的是，你投资出去的东西，你的清楚他好久能够收回来。      </li>
<li>用资产来购买你的奢侈品  </li>
<li>找个英雄崇拜吧，千万不要当脑残粉  </li>
<li>要先索取，必先给予  <h1 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h1>穷爸爸富爸爸图书资源<br><a href="https://www.amazon.cn/%E5%AF%8C%E7%88%B8%E7%88%B8%E7%A9%B7%E7%88%B8%E7%88%B8-%E3%80%94%E7%BE%8E%E3%80%95%E7%BD%97%E4%BC%AF%E7%89%B9%C2%B7%E6%B8%85%E5%B4%8E-%E3%80%94%E7%BE%8E%E3%80%95%E8%8E%8E%E4%BC%A6%C2%B7%E8%8E%B1%E5%B8%8C%E7%89%B9/dp/B00H42WTTC/ref=sr_1_1?s=digital-text&amp;ie=UTF8&amp;qid=1468745562&amp;sr=1-1&amp;keywords=%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8" target="_blank" rel="noopener">图书地址</a><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1>这部分，是我总结的思维导图<br><strong>财务知识思维导图</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E8%B4%A2%E5%8A%A1%E7%9F%A5%E8%AF%86.png" alt="财务知识思维导图"><br><strong>关注事业思维导图</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%85%B3%E6%B3%A8%E4%BA%8B%E4%B8%9A.png" alt="关注事业"><br><strong>善于利用资源</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%96%84%E4%BA%8E%E5%88%A9%E7%94%A8%E8%B5%84%E6%BA%90.png" alt="善于利用资源"><br><strong>富人投资方法论</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%AF%8C%E4%BA%BA%E6%8A%95%E8%B5%84%E6%96%B9%E6%B3%95%E8%AE%BA.png" alt="富人投资方法论"><br><strong>投资综合技能</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E6%8A%95%E8%B5%84%E7%BB%BC%E5%90%88%E6%8A%80%E8%83%BD.png" alt="投资综合技能"><br><strong>实现财务自由的步骤</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E5%AE%9E%E7%8E%B0%E8%B4%A2%E5%8A%A1%E8%87%AA%E7%94%B1%E7%9A%84%E6%AD%A5%E9%AA%A4-1.png" alt="实现财务自由的步骤"><br><strong>生活态度</strong><br><img src="http://tp.linqmind.com/2016-07-17_%E7%A9%B7%E7%88%B8%E7%88%B8%E5%AF%8C%E7%88%B8%E7%88%B8%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0-%E7%94%9F%E6%B4%BB%E6%80%81%E5%BA%A6.png" alt="生活态度"><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><a href="http://www.write.org.cn/rich-dad-poor-dad-mind-mapping-study-notes.html" target="_blank" rel="noopener">http://www.write.org.cn/rich-dad-poor-dad-mind-mapping-study-notes.html</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础的财务知识&quot;&gt;&lt;a href=&quot;#基础的财务知识&quot; class=&quot;headerlink&quot; title=&quot;基础的财务知识&quot;&gt;&lt;/a&gt;基础的财务知识&lt;/h1&gt;&lt;p&gt;什么是资产，什么是负债呢，下面结合图形进行了简单的定义&lt;br&gt;&lt;strong&gt;资产现金流图&lt;/str
    
    </summary>
    
      <category term="读书笔记" scheme="http://www.haibin.me/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="理财" scheme="http://www.haibin.me/tags/%E7%90%86%E8%B4%A2/"/>
    
      <category term="理财入门读物" scheme="http://www.haibin.me/tags/%E7%90%86%E8%B4%A2%E5%85%A5%E9%97%A8%E8%AF%BB%E7%89%A9/"/>
    
      <category term="读书笔记" scheme="http://www.haibin.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>帕克胖夜话Docker-创建jenkins</title>
    <link href="http://www.haibin.me/2016/06/16/%E5%B8%95%E5%85%8B%E8%83%96%E5%A4%9C%E8%AF%9DDocker-%E5%88%9B%E5%BB%BAjenkins/"/>
    <id>http://www.haibin.me/2016/06/16/帕克胖夜话Docker-创建jenkins/</id>
    <published>2016-06-16T01:12:09.000Z</published>
    <updated>2019-07-03T23:28:43.814Z</updated>
    
    <content type="html"><![CDATA[<p>通过<code>docker</code>部署<code>jenkins</code>超简单  </p>
<h1 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h1><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="meta">@ubuntu</span>-<span class="string">docker03:</span>~/shell$ lsb_release -a</span><br><span class="line">No LSB modules are available.</span><br><span class="line">Distributor <span class="string">ID:</span> Ubuntu</span><br><span class="line"><span class="string">Description:</span>    Ubuntu <span class="number">14.04</span><span class="number">.3</span> LTS</span><br><span class="line"><span class="string">Release:</span>        <span class="number">14.04</span></span><br><span class="line"><span class="string">Codename:</span>       trusty</span><br></pre></td></tr></table></figure>
<h2 id="docker-engine版本"><a href="#docker-engine版本" class="headerlink" title="docker engine版本"></a><code>docker engine</code>版本</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker@ubuntu-docker03:~/shell$</span> <span class="string">docker</span> <span class="string">version</span></span><br><span class="line"><span class="attr">Client:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.1</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="string">d12ea79</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Aug</span> <span class="number">13</span> <span class="number">02</span><span class="string">:35:49</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Server:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.1</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="string">d12ea79</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Aug</span> <span class="number">13</span> <span class="number">02</span><span class="string">:35:49</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>如果<code>docker engine</code>版本不对的话，那么会导致jenkins调用外部<code>docker</code>失败<br>按照<a href="http://haibin.me/2016/07/28/帕克胖夜话Docker-安装-Docker-Engine" target="_blank" rel="noopener">安装Docker Engine</a>，正确安装Docker Engine指定版本</p>
</blockquote>
<h1 id="安装jenkins"><a href="#安装jenkins" class="headerlink" title="安装jenkins"></a>安装<code>jenkins</code></h1><h2 id="挂载共享文件nfs"><a href="#挂载共享文件nfs" class="headerlink" title="挂载共享文件nfs"></a>挂载共享文件<code>nfs</code></h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t nfs <span class="number">192.168</span>.<span class="number">0</span>.<span class="number">250</span><span class="symbol">:/srv/data/share</span> /home/docker/storage</span><br></pre></td></tr></table></figure>
<h2 id="下载jenkins-docker镜像"><a href="#下载jenkins-docker镜像" class="headerlink" title="下载jenkins docker镜像"></a>下载<code>jenkins docker</code>镜像</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry<span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/haibin/jenkins</span><br></pre></td></tr></table></figure>
<h2 id="启动jenkins"><a href="#启动jenkins" class="headerlink" title="启动jenkins"></a>启动<code>jenkins</code></h2><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker run \</span><br><span class="line">  -<span class="ruby">-name jenkins-new \</span></span><br><span class="line"><span class="ruby">  -d \</span></span><br><span class="line"><span class="ruby">  -v /var/run/docker.<span class="symbol">sock:</span>/var/run/docker.sock \</span></span><br><span class="line"><span class="ruby">  -v $(which docker)<span class="symbol">:/usr/bin/docker</span> \</span></span><br><span class="line"><span class="ruby">  -v /lib/x86_64-linux-gnu/libdevmapper.so.<span class="number">1.02</span>.<span class="number">1</span><span class="symbol">:/lib/x86_64-linux-gnu/libdevmapper</span>.so.<span class="number">1.02</span>.<span class="number">1</span> \</span></span><br><span class="line"><span class="ruby">  -v /home/docker/storage/docker_data/<span class="symbol">jenkins:</span>/var/jenkins_home \</span></span><br><span class="line"><span class="ruby">  -p <span class="number">18088</span><span class="symbol">:</span><span class="number">8080</span> \</span></span><br><span class="line"><span class="ruby">  registry.aliyuncs.com/haibin/jenkins</span></span><br></pre></td></tr></table></figure>
<h2 id="验证jenkins"><a href="#验证jenkins" class="headerlink" title="验证jenkins"></a>验证<code>jenkins</code></h2><p>访问<code>http://localhost:18088</code><br>如果出现以下情况，则创建成功<br><img src="http://qiniu1.kopbit.com/4f38be4deb5afabe23ad60aef7b6d033.png" alt="jenkins效果图"></p>
<h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><p><a href="http://haibin.me/2016/05/22/%E5%B8%95%E5%85%8B%E8%83%96%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97-%E5%BB%BA%E7%AB%8B%E5%8F%AF%E7%94%A8%E7%9A%84NFS%E5%AD%98%E5%82%A8/" target="_blank" rel="noopener">建立可用的NFS存储</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;通过&lt;code&gt;docker&lt;/code&gt;部署&lt;code&gt;jenkins&lt;/code&gt;超简单  &lt;/p&gt;
&lt;h1 id=&quot;前置条件&quot;&gt;&lt;a href=&quot;#前置条件&quot; class=&quot;headerlink&quot; title=&quot;前置条件&quot;&gt;&lt;/a&gt;前置条件&lt;/h1&gt;&lt;h2 id=&quot;操
    
    </summary>
    
      <category term="Linux" scheme="http://www.haibin.me/categories/Linux/"/>
    
      <category term="jenkins" scheme="http://www.haibin.me/categories/Linux/jenkins/"/>
    
      <category term="talk" scheme="http://www.haibin.me/categories/Linux/jenkins/talk/"/>
    
      <category term="Docker" scheme="http://www.haibin.me/categories/Linux/jenkins/talk/Docker/"/>
    
    
      <category term="Linux" scheme="http://www.haibin.me/tags/Linux/"/>
    
      <category term="Docker" scheme="http://www.haibin.me/tags/Docker/"/>
    
      <category term="CI" scheme="http://www.haibin.me/tags/CI/"/>
    
      <category term="jenkins" scheme="http://www.haibin.me/tags/jenkins/"/>
    
      <category term="持续集成" scheme="http://www.haibin.me/tags/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    
  </entry>
  
  <entry>
    <title>Angular单元测试与自动化UI测试实践</title>
    <link href="http://www.haibin.me/2016/05/23/%E5%B8%95%E5%85%8B%E8%83%96%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97-%E4%BA%8C-Angular%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E4%B8%8E%E8%87%AA%E5%8A%A8%E5%8C%96UI%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.haibin.me/2016/05/23/帕克胖折腾系列-二-Angular单元测试与自动化UI测试实践/</id>
    <published>2016-05-23T00:13:09.000Z</published>
    <updated>2019-07-03T23:28:43.815Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>关于本文：介绍通过karma与jsmine框架对angular开发的应用程序进行单元与E2E测试。这篇文章并非原创，具体的原作者 <a href="http://my.csdn.net/vipyoumay" target="_blank" rel="noopener">vipyoumay</a></p>
</blockquote>
<h2 id="一、先决条件"><a href="#一、先决条件" class="headerlink" title="一、先决条件"></a>一、先决条件</h2><ul>
<li>nodejs</li>
<li>webstorm</li>
</ul>
<h2 id="二、创建项目"><a href="#二、创建项目" class="headerlink" title="二、创建项目"></a>二、创建项目</h2><h3 id="1、webstorm中创建空白web项目"><a href="#1、webstorm中创建空白web项目" class="headerlink" title="1、webstorm中创建空白web项目"></a>1、webstorm中创建空白web项目</h3><p><img src="http://7xlh63.com1.z0.glb.clouddn.com/bef67a6853ce62867604126f123d68aa.png" alt="空白项目"></p>
<h3 id="2、创建html、js文件夹"><a href="#2、创建html、js文件夹" class="headerlink" title="2、创建html、js文件夹"></a>2、创建html、js文件夹</h3><p>在项目中创建2个文件夹分别用于存放项目中用到的html、js文件。</p>
<h2 id="三、安装框架"><a href="#三、安装框架" class="headerlink" title="三、安装框架"></a>三、安装框架</h2><h3 id="1、安装前端框架"><a href="#1、安装前端框架" class="headerlink" title="1、安装前端框架"></a>1、安装前端框架</h3><p>项目中所用框架是angularjs,为了安装框架方便可安装bower包管理器。</p>
<h4 id="1-安装bower包管理器"><a href="#1-安装bower包管理器" class="headerlink" title="1) 安装bower包管理器"></a>1) 安装bower包管理器</h4><p>在webstorm的terminal中执行脚本<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span><span class="keyword">bower </span>-g</span><br></pre></td></tr></table></figure></p>
<h4 id="2-安装angular等框架"><a href="#2-安装angular等框架" class="headerlink" title="2) 安装angular等框架"></a>2) 安装angular等框架</h4><p>angular、angular-mocks框架</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bower </span>i</span><br></pre></td></tr></table></figure>
<h3 id="2、安装服务器端框架及依赖模块"><a href="#2、安装服务器端框架及依赖模块" class="headerlink" title="2、安装服务器端框架及依赖模块"></a>2、安装服务器端框架及依赖模块</h3><p>服务器依赖于nodejs，需要安装nodejs的包，首先在根目录下创建package.json文件。</p>
<ul>
<li><strong>http-server</strong> 模块</li>
<li><strong>jasmine-core</strong>:javascript单元测试框架；</li>
<li><strong>karma</strong>:模拟javascript脚本在各种浏览器执行的工具；</li>
<li><strong>karma-chrome-launcher</strong>: 在chrome浏览器执行的工具；</li>
<li><strong>karma-jasmine</strong>: jasmine-core在karma中的适配器；</li>
<li><strong>karma-junit-reporter</strong>: 生成junit报告；</li>
<li><strong>protractor</strong>:E2E测试框架<br>安装模块<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="3、启动服务器"><a href="#3、启动服务器" class="headerlink" title="3、启动服务器"></a>3、启动服务器</h3><p>要启动node服务器需要在package.json中配置script节点,dependencies中定义依赖包，在script配置start节点用于启动服务器，test节点的内容会在后面讲解。<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">"name": "angularjs-test",</span><br><span class="line">  "version": "0.0.1",</span><br><span class="line">  "dependencies": &#123;</span><br><span class="line">    "bower": "^1.7.7",</span><br><span class="line">    "http-server": "^0.9.0",</span><br><span class="line">    "jasmine-core": "^2.4.1",</span><br><span class="line">    "karma": "^0.13.22",</span><br><span class="line">    "karma-chrome-launcher": "^0.2.3",</span><br><span class="line">    "karma-jasmine": "^0.3.8",</span><br><span class="line">    "karma-junit-reporter": "^0.4.1",</span><br><span class="line">    "protractor": "^3.2.1"</span><br><span class="line">  &#125;,</span><br><span class="line">  "scripts": &#123;</span><br><span class="line">    "postinstall": "bower install",</span><br><span class="line">    "prestart": "npm install",</span><br><span class="line">    "start": "http-server -a localhost -p 8000 -c-1",</span><br><span class="line">    "pretest": "npm install",</span><br><span class="line">    "test": "karma start karma.conf.js",</span><br><span class="line">    "test-single-run": "karma start karma.conf.js  --single-run"</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
<p>配置后运行命令,启动服务器，浏览器上输入<a href="http://localhost:8000" target="_blank" rel="noopener">http://localhost:8000</a><br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> start</span><br></pre></td></tr></table></figure></p>
<h2 id="四、开始单元测试"><a href="#四、开始单元测试" class="headerlink" title="四、开始单元测试"></a>四、开始单元测试</h2><h3 id="1、编写功能代码"><a href="#1、编写功能代码" class="headerlink" title="1、编写功能代码"></a>1、编写功能代码</h3><p>在文件js中新建js文件index.js。在index.js中定义congroller,实现简单累加方法add,代码如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by stephen on 2016/3/24.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">angular</span>) </span>&#123;</span><br><span class="line">    angular.module(<span class="string">'app'</span>, []).</span><br><span class="line">    controller(<span class="string">'indexCtrl'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">$scope</span>) </span>&#123;</span><br><span class="line">        $scope.add = <span class="function"><span class="keyword">function</span> (<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(a&amp;&amp;b)</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">Number</span>(a) + <span class="built_in">Number</span>(b)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)(<span class="built_in">window</span>.angular);</span><br></pre></td></tr></table></figure></p>
<p>在文件html中新建html文件index.html，加入两个输入框用户获取输入，当输入后绑定controller中的add方法实现计算器功能，代码如下:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span> ng-app=<span class="string">"app"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;index&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;/</span>head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div ng-controller=<span class="string">"indexCtrl"</span>&gt;</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> ng-model=<span class="string">"a"</span> value=<span class="string">"0"</span>&gt;</span><br><span class="line">    +</span><br><span class="line">    &lt;input type=<span class="string">"text"</span> ng-model=<span class="string">"b"</span> value=<span class="string">"0"</span>&gt;</span><br><span class="line">    =<span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">'result'</span>&gt;</span>&#123;&#123;add(a,b)&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br><span class="line"><span class="regexp">&lt;script src="/</span>bower_components/angular/angular.min.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>/bower_components/angular-mocks/angular-mocks.js<span class="string">"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">&lt;script src="</span>/js/index.js<span class="string">"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>启动服务器看到下图效果</p>
<p><img src="http://7xlh63.com1.z0.glb.clouddn.com/bfa862850c4b224e77e8e4f89117c657.png" alt="效果"></p>
<h3 id="2、编写测试代码"><a href="#2、编写测试代码" class="headerlink" title="2、编写测试代码"></a>2、编写测试代码</h3><p>在test文件夹中新建文件index-test.js用于编写index.js的单元测试。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">'use strict'</span>;</span><br><span class="line">describe(<span class="string">'app'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    beforeEach(<span class="built_in">module</span>(<span class="string">'app'</span>));</span><br><span class="line">    describe(<span class="string">'indexCtrl'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        it(<span class="string">'add 测试'</span>, inject(<span class="function"><span class="keyword">function</span> (<span class="params">$controller</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> $scope = &#123;&#125;;</span><br><span class="line">            <span class="comment">//spec body</span></span><br><span class="line">            <span class="keyword">var</span> indexCtrl = $controller(<span class="string">'indexCtrl'</span>, &#123;<span class="attr">$scope</span>: $scope&#125;);</span><br><span class="line">            expect(indexCtrl).toBeDefined();</span><br><span class="line">            expect($scope.add(<span class="number">2</span>, <span class="number">3</span>)).toEqual(<span class="number">5</span>);</span><br><span class="line">        &#125;));</span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="3、单元测试配置"><a href="#3、单元测试配置" class="headerlink" title="3、单元测试配置"></a>3、单元测试配置</h3><p>初始化karma配置文件,用于配置karma，执行命令<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">karma init</span></span><br></pre></td></tr></table></figure></p>
<p>在karma配置文件代码中每个节点都有默认注释请参看<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">config</span>) </span>&#123;</span><br><span class="line">    config.set(&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// base path that will be used to resolve all patterns (eg. files, exclude)</span></span><br><span class="line">        basePath: <span class="string">'./'</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// frameworks to use</span></span><br><span class="line">        <span class="comment">// available frameworks: https://npmjs.org/browse/keyword/karma-adapter</span></span><br><span class="line">        frameworks: [<span class="string">'jasmine'</span>],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// list of files / patterns to load in the browser</span></span><br><span class="line">        files: [</span><br><span class="line">            <span class="string">'bower_components/angular/angular.min.js'</span>,</span><br><span class="line">            <span class="string">'bower_components/angular-mocks/angular-mocks.js'</span>,</span><br><span class="line">            <span class="string">'js/index.js'</span>,</span><br><span class="line">            <span class="string">'test/index-test.js'</span></span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        <span class="comment">// test results reporter to use</span></span><br><span class="line">        <span class="comment">// possible values: 'dots', 'progress'</span></span><br><span class="line">        <span class="comment">// available reporters: https://npmjs.org/browse/keyword/karma-reporter</span></span><br><span class="line">        reporters: [<span class="string">'progress'</span>],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// web server port</span></span><br><span class="line">        port: <span class="number">9876</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// enable / disable colors in the output (reporters and logs)</span></span><br><span class="line">        colors: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// level of logging</span></span><br><span class="line">        <span class="comment">// possible values: config.LOG_DISABLE || config.LOG_ERROR || config.LOG_WARN || config.LOG_INFO || config.LOG_DEBUG</span></span><br><span class="line">        logLevel: config.LOG_INFO,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// enable / disable watching file and executing tests whenever any file changes</span></span><br><span class="line">        autoWatch: <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// start these browsers</span></span><br><span class="line">        <span class="comment">// available browser launchers: https://npmjs.org/browse/keyword/karma-launcher</span></span><br><span class="line">        browsers: [<span class="string">'Chrome'</span>],</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// Continuous Integration mode</span></span><br><span class="line">        <span class="comment">// if true, Karma captures browsers, runs the tests and exits</span></span><br><span class="line">        singleRun: <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line">        plugins: [</span><br><span class="line">            <span class="string">'karma-chrome-launcher'</span>,</span><br><span class="line">            <span class="string">'karma-jasmine'</span>,</span><br><span class="line">            <span class="string">'karma-junit-reporter'</span></span><br><span class="line">        ],</span><br><span class="line"></span><br><span class="line">        junitReporter: &#123;</span><br><span class="line">            outputFile: <span class="string">'/test_out/unit.xml'</span>,</span><br><span class="line">            suite: <span class="string">'unit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在package.json scripts 配置测试信息,指定karma文件地址<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"test": "karma start karma.conf.js",</span><br></pre></td></tr></table></figure></p>
<h3 id="4、运行单元测试"><a href="#4、运行单元测试" class="headerlink" title="4、运行单元测试"></a>4、运行单元测试</h3><p>运行命令，执行测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p>
<p>运行结果如下，可以看到通过测试：</p>
<p><img src="http://7xlh63.com1.z0.glb.clouddn.com/f675c4b60d832e1d407377c62203e40f.png" alt="测试运行结果"></p>
<h3 id="5、调试单元测试"><a href="#5、调试单元测试" class="headerlink" title="5、调试单元测试"></a>5、调试单元测试</h3><p>除了运行测试外，很多时候需要调试测试，在karma弹出网页中点击debug,进入<a href="http://localhost:9876/debug.html页面，就可以用chrome自带的调试工具调试代码了：" target="_blank" rel="noopener">http://localhost:9876/debug.html页面，就可以用chrome自带的调试工具调试代码了：</a></p>
<p><img src="http://7xlh63.com1.z0.glb.clouddn.com/4c90f7283a25b91e4ec76835d8698127.png" alt="debug点击"></p>
<p><img src="http://7xlh63.com1.z0.glb.clouddn.com/aa81509c780345df954477bc2fbf6d88.png" alt="debug code"></p>
<h3 id="单元测试覆盖率"><a href="#单元测试覆盖率" class="headerlink" title="单元测试覆盖率"></a>单元测试覆盖率</h3><p>如果需要对单元测试覆盖率进行统计，可以安装karma-coverage并配置karma文件。这样在单元测试完成后，会生成测试覆盖率报告文档。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> karma-coverage -<span class="keyword">save</span></span><br></pre></td></tr></table></figure></p>
<p>在karma.conf.js文件中加入节点<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 新增节点用于配置输出文件夹</span></span><br><span class="line">coverageReporter: &#123;</span><br><span class="line">           type: <span class="string">'html'</span>,</span><br><span class="line">           dir: <span class="string">'coverage'</span></span><br><span class="line">       &#125;,</span><br><span class="line"><span class="comment">// 新增节点用于配置需要测试的文件地址（这里是controller地址）</span></span><br><span class="line">preprocessors: &#123;<span class="string">'js/*.js'</span>: [<span class="string">'coverage'</span>]&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新增元素'karma-coverage'</span></span><br><span class="line">plugins: [</span><br><span class="line">          <span class="string">'karma-chrome-launcher'</span>,</span><br><span class="line">          <span class="string">'karma-jasmine'</span>,</span><br><span class="line">          <span class="string">'karma-junit-reporter'</span>,</span><br><span class="line">          <span class="string">'karma-coverage'</span>,</span><br><span class="line">      ],</span><br><span class="line"><span class="comment">// 新增元素 coverage</span></span><br><span class="line">reporters: [<span class="string">'progress'</span>, <span class="string">'coverage'</span>],</span><br></pre></td></tr></table></figure></p>
<p>运行单元测试后在目录中生成coverage文件夹，点击index.html可以查看测试覆盖率。</p>
<p><img src="http://qiniu.xdpie.com/fb0ce841d8781d287d5bc74b49a09091.png?imageView2/2/w/700" alt="测试覆盖率"></p>
<h2 id="五、E2E测试"><a href="#五、E2E测试" class="headerlink" title="五、E2E测试"></a>五、E2E测试</h2><p>e2e或者端到端（end-to-end）或者UI测试是一种测试方法，它用来测试一个应用从头到尾的流程是否和设计时候所想的一样。简而言之，它从一个用户的角度出发，认为整个系统都是一个黑箱，只有UI会暴露给用户。</p>
<h3 id="1、配置E2E测试"><a href="#1、配置E2E测试" class="headerlink" title="1、配置E2E测试"></a>1、配置E2E测试</h3><p>新建文件夹e2e-test新建protractor.conf.js文件,用于配置protractor框架，代码如下。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">exports.config = &#123;</span><br><span class="line"></span><br><span class="line">    allScriptsTimeout: <span class="number">11000</span>,</span><br><span class="line"></span><br><span class="line">    baseUrl: <span class="string">'http://localhost:8000/app/'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Capabilities to be passed to the webdriver instance.</span></span><br><span class="line">    capabilities: &#123;</span><br><span class="line">        <span class="string">'browserName'</span>: <span class="string">'chrome'</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    framework: <span class="string">'jasmine'</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Spec patterns are relative to the configuration file location passed</span></span><br><span class="line">    <span class="comment">// to protractor (in this example conf.js).</span></span><br><span class="line">    <span class="comment">// They may include glob patterns.</span></span><br><span class="line">    specs: [<span class="string">'*.js'</span>],</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Options to be passed to Jasmine-node.</span></span><br><span class="line">    jasmineNodeOpts: &#123;</span><br><span class="line">        showColors: <span class="literal">true</span>, <span class="comment">// Use colors in the command line report.</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    defaultTimeoutInterval: <span class="number">30000</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>配置package.json scripts脚本节点<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">"preupdate-webdriver": "npm install",</span><br><span class="line">"update-webdriver": "webdriver-manager update",</span><br><span class="line">"preprotractor": "npm run update-webdriver",</span><br><span class="line">"protractor": "protractor e2e-test/protractor.conf.js"</span><br></pre></td></tr></table></figure></p>
<h3 id="2、编写e2e测试脚本"><a href="#2、编写e2e测试脚本" class="headerlink" title="2、编写e2e测试脚本"></a>2、编写e2e测试脚本</h3><p>设计测试用例：文本框a的值录入1，文本框b录入2，期望结果3<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">describe(<span class="string">'index.html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    beforeEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        browser.get(<span class="string">'http://localhost:8000/html'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    it(<span class="string">'get index html'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> a = element(by.model(<span class="string">'a'</span>));</span><br><span class="line">        <span class="keyword">var</span> b = element(by.model(<span class="string">'b'</span>));</span><br><span class="line">        a.sendKeys(<span class="number">1</span>);</span><br><span class="line">        b.sendKeys(<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">var</span> result = element(by.id(<span class="string">'result'</span>));</span><br><span class="line">        expect(result.getText()).toEqual(<span class="string">'3'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<h3 id="3、执行测试查看测试结果"><a href="#3、执行测试查看测试结果" class="headerlink" title="3、执行测试查看测试结果"></a>3、执行测试查看测试结果</h3><p>需要执行命名,查看是否更新webdriver(什么是webdriver <a href="http://sentsin.com/web/658.html" target="_blank" rel="noopener">http://sentsin.com/web/658.html</a>),<br>手动安装protractor至全局<br><code>npm i -g protractor</code></p>
<p><strong>注:安装或更新webdriver需要翻墙，请在webstrom中设置代理地址</strong>。<br>在<code>webstrom</code>中切换至<code>Terminal</code>窗口，在<code>Terminal</code>窗口通过以下方式设置代理:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">set</span> <span class="attribute">PROXY</span>=http://localhost:1080</span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">HTTP_PROXY</span>=%PROXY%</span><br><span class="line"><span class="builtin-name">set</span> <span class="attribute">HTTPS_PROXY</span>=%PROXY%</span><br></pre></td></tr></table></figure></p>
<p>代理设置成功后，运行以下命令<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">run</span><span class="bash"> update-webdriver</span></span><br></pre></td></tr></table></figure></p>
<p>手动安装webdriver  </p>
<ol>
<li><p>下载protractor<br>下载的网盘地址:<br><code>http://pan.baidu.com/s/1hr7oYva</code></p>
</li>
<li><p>将下载的protractor拷贝到用户的目录下<br><code>C:\Users\laura\AppData\Roaming\npm\node_modules</code> 文件目录中<br>第二步：将webstorm原来项目中node文件删除，<br>第三步：在terminal中输入 nrm ls 显示不报错时执行npm i 命令，报错时执行npm i nrm –g命令，后执行nrm use taobao命令<br>第四步：执行npm i命令，<br>第五步：执行bower i命令如果报错，看项目有没有bower文件，没有的话安装，执行npm I bower -g后执行bower i命令<br>第六步：执行npm start命令，完成后，点击新建窗口“＋”新增窗口执行npm run protractor 命令</p>
</li>
</ol>
<p>执行e2e测试,这是会弹出浏览器，自动点击浏览器，录入脚本输入完成自动化e2e测试，其本质还是调用selenium测试。<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">run</span><span class="bash"> protractor</span></span><br></pre></td></tr></table></figure></p>
<p><img src="http://7xlh63.com1.z0.glb.clouddn.com/84b941fef69af1c6767156b68f069732.png" alt="自动化ui测试结果"></p>
<h2 id="执行构建"><a href="#执行构建" class="headerlink" title="执行构建"></a>执行构建</h2><h3 id="构建docker镜像"><a href="#构建docker镜像" class="headerlink" title="构建docker镜像"></a>构建docker镜像</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> build --<span class="literal">no</span>-cache=<span class="literal">true</span> --rm=<span class="literal">true</span> -t angular-e2etest-showcase .</span><br></pre></td></tr></table></figure>
<h3 id="运行docker镜像"><a href="#运行docker镜像" class="headerlink" title="运行docker镜像"></a>运行docker镜像</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">sh</span> <span class="selector-tag">wrapper_docker</span><span class="selector-class">.sh_</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1] 官方测试demo <a href="https://github.com/angular/angular-seed" target="_blank" rel="noopener">https://github.com/angular/angular-seed</a></p>
<p>[2] protractor 官方文档 <a href="http://angular.github.io/protractor/#/tutorial" target="_blank" rel="noopener">http://angular.github.io/protractor/#/tutorial</a></p>
<p>[3] 自动化E2E测试 <a href="http://sentsin.com/web/658.html" target="_blank" rel="noopener">http://sentsin.com/web/658.html</a></p>
<p>[4] karma官方文档 <a href="https://karma-runner.github.io/latest/intro/configuration.html" target="_blank" rel="noopener">https://karma-runner.github.io/latest/intro/configuration.html</a></p>
<p>[5] angular单元测试官方文档 <a href="https://docs.angularjs.org/guide/unit-testing" target="_blank" rel="noopener">https://docs.angularjs.org/guide/unit-testing</a>    </p>
<p>[6] 示例项目代码 <a href="https://github.com/haibinpark/angular-e2etest-showcase" target="_blank" rel="noopener">https://github.com/haibinpark/angular-e2etest-showcase</a>  </p>
<p>[7] 原文地址 <a href="http://blog.csdn.net/vipyoumay/article/details/50978887" target="_blank" rel="noopener">http://blog.csdn.net/vipyoumay/article/details/50978887</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;关于本文：介绍通过karma与jsmine框架对angular开发的应用程序进行单元与E2E测试。这篇文章并非原创，具体的原作者 &lt;a href=&quot;http://my.csdn.net/vipyoumay&quot; target=&quot;_blank&quot; rel=
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>帕克胖折腾系列(-)建立可用的NFS存储</title>
    <link href="http://www.haibin.me/2016/05/22/%E5%B8%95%E5%85%8B%E8%83%96%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97-%E5%BB%BA%E7%AB%8B%E5%8F%AF%E7%94%A8%E7%9A%84NFS%E5%AD%98%E5%82%A8/"/>
    <id>http://www.haibin.me/2016/05/22/帕克胖折腾系列-建立可用的NFS存储/</id>
    <published>2016-05-22T03:47:43.000Z</published>
    <updated>2019-07-03T23:28:43.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h1><blockquote>
<p>生命不息，折腾不止!  </p>
</blockquote>
<p>建立可用的NFS共享存储<br><strong>建议通读一次后，再进行尝试！！</strong>  </p>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>1). 三张千兆网卡<br>2). 两根千兆网线<br>拓扑图<br><img src="http://7xlvqo.com1.z0.glb.clouddn.com/6652b89d89446a3a949d6986fb269ac8.png" alt="网络拓扑图">  </p>
<h1 id="基础系统"><a href="#基础系统" class="headerlink" title="基础系统"></a>基础系统</h1><h2 id="分区，系统安装"><a href="#分区，系统安装" class="headerlink" title="分区，系统安装"></a>分区，系统安装</h2><p>两台机器，分别安装ubuntu操作系统<br>具体的分区信息如下:<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">swap  <span class="number">4</span>G</span><br><span class="line">/boot <span class="number">1</span>G</span><br><span class="line">/        <span class="number">100</span>G 安装系统</span><br></pre></td></tr></table></figure></p>
<p>系统都通过卷管理<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/sda<span class="string">[3]</span></span><br><span class="line"></span><br><span class="line">pvcreate /dev/sdb<span class="string">[1]</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装必要软件"><a href="#安装必要软件" class="headerlink" title="安装必要软件"></a>安装必要软件</h2><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-software-properties</span><br><span class="line">sudo<span class="built_in"> add-apt-repository </span>ppa:icamargo/drbd</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure>
<h2 id="配置固定IP"><a href="#配置固定IP" class="headerlink" title="配置固定IP"></a>配置固定IP</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##server01##</span></span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto eth1</span><br><span class="line">iface eth1 inet static</span><br><span class="line">       <span class="built_in"> address </span>192.168.1.100</span><br><span class="line">        netmask 255.255.255.0</span><br><span class="line"></span><br><span class="line"><span class="comment">##server02##</span></span><br><span class="line"><span class="comment"># The primary network interface</span></span><br><span class="line">auto eth1</span><br><span class="line">iface eth1 inet static</span><br><span class="line">       <span class="built_in"> address </span>192.168.1.100</span><br><span class="line">        netmask 255.255.255.0</span><br></pre></td></tr></table></figure>
<h2 id="配置host"><a href="#配置host" class="headerlink" title="配置host"></a>配置host</h2><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/hosts</span><br><span class="line"></span><br><span class="line">######</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>   server01</span><br><span class="line"><span class="number">192.168</span><span class="number">.1</span><span class="number">.101</span>   server02</span><br></pre></td></tr></table></figure>
<h2 id="同步服务器时间"><a href="#同步服务器时间" class="headerlink" title="同步服务器时间"></a>同步服务器时间</h2><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="built_in">get</span> install ntp</span><br><span class="line">//同步时间任务</span><br><span class="line">sudo crontab -e</span><br><span class="line"><span class="comment">##Added the following line to the end.</span></span><br><span class="line"><span class="number">1</span> * * * * root ntpdate au.pool.ntp.org</span><br></pre></td></tr></table></figure>
<h2 id="内核调试"><a href="#内核调试" class="headerlink" title="内核调试"></a>内核调试</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">##Both##</span><br><span class="line"></span><br><span class="line">sudo vi /etc/sysctl.conf.</span><br><span class="line"></span><br><span class="line"># drbd tuning</span><br><span class="line">net.ipv4.tcp_no_metrics_save = <span class="number">1</span></span><br><span class="line">net.core.rmem_max = <span class="number">33554432</span></span><br><span class="line">net.core.wmem_max = <span class="number">33554432</span></span><br><span class="line">net.ipv4.tcp_rmem = <span class="number">4096</span> <span class="number">87380</span> <span class="number">33554432</span></span><br><span class="line">net.ipv4.tcp_wmem = <span class="number">4096</span> <span class="number">87380</span> <span class="number">33554432</span></span><br><span class="line">vm.dirty_ratio = <span class="number">10</span></span><br><span class="line">vm.dirty_background_ratio = <span class="number">4</span></span><br></pre></td></tr></table></figure>
<h1 id="DRBD"><a href="#DRBD" class="headerlink" title="DRBD"></a>DRBD</h1><h2 id="DRBD安装"><a href="#DRBD安装" class="headerlink" title="DRBD安装"></a>DRBD安装</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Both</span></span><br><span class="line">sudo apt-<span class="builtin-name">get</span> install drbd8-utils heartbeat</span><br></pre></td></tr></table></figure>
<h2 id="文件配置"><a href="#文件配置" class="headerlink" title="文件配置"></a>文件配置</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Both</span></span><br><span class="line">sudo vi /etc/drbd.d/disk1.res</span><br><span class="line">resource disk1 &#123;</span><br><span class="line"></span><br><span class="line">        protocol C;</span><br><span class="line"></span><br><span class="line">        handlers &#123;</span><br><span class="line">                pri-on-incon-degr <span class="string">"echo o &gt; /proc/sysrq-trigger ; halt -f"</span>;</span><br><span class="line">                pri-lost-after-sb <span class="string">"echo o &gt; /proc/sysrq-trigger ; halt -f"</span>;</span><br><span class="line">                local-io-<span class="builtin-name">error</span> <span class="string">"echo o &gt; /proc/sysrq-trigger ; halt -f"</span>;</span><br><span class="line">                outdate-peer <span class="string">"/usr/lib/heartbeat/drbd-peer-outdater -t 5"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        startup &#123;</span><br><span class="line">                degr-wfc-timeout 120;</span><br><span class="line">                wfc-timeout 30;</span><br><span class="line">                outdated-wfc-timeout 20;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        disk &#123;</span><br><span class="line">                on-io-<span class="builtin-name">error</span> detach;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        net &#123;</span><br><span class="line">                cram-hmac-alg sha1;</span><br><span class="line">                shared-secret <span class="string">"password"</span>;</span><br><span class="line">                after-sb-0pri disconnect;</span><br><span class="line">                after-sb-1pri disconnect;</span><br><span class="line">                after-sb-2pri disconnect;</span><br><span class="line">                rr-conflict disconnect;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        syncer &#123;</span><br><span class="line">                rate 100M;</span><br><span class="line">                verify-alg sha1;</span><br><span class="line">                al-extents 257;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        on server01 &#123;</span><br><span class="line">                device  /dev/drbd0;</span><br><span class="line">                disk    /dev/sdb1;</span><br><span class="line">               <span class="built_in"> address </span>192.168.0.211:7788;</span><br><span class="line">                meta-disk internal;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        on server02&#123;</span><br><span class="line">                device  /dev/drbd0;</span><br><span class="line">                disk    /dev/sdb1;</span><br><span class="line">               <span class="built_in"> address </span>192.168.0.212:7788;</span><br><span class="line">                meta-disk internal;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="更改DRDB权限"><a href="#更改DRDB权限" class="headerlink" title="更改DRDB权限"></a>更改DRDB权限</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Both</span></span><br><span class="line"></span><br><span class="line">sudo chgrp haclient /<span class="class"><span class="keyword">lib</span>/<span class="title">drbd</span>/<span class="title">drbdsetup</span>-84</span></span><br><span class="line">sudo chmod o-x /<span class="class"><span class="keyword">lib</span>/<span class="title">drbd</span>/<span class="title">drbdsetup</span>-84</span></span><br><span class="line">sudo chmod u+s /<span class="class"><span class="keyword">lib</span>/<span class="title">drbd</span>/<span class="title">drbdsetup</span>-84</span></span><br><span class="line">sudo chgrp haclient /sbin/drbdmeta</span><br><span class="line">sudo chmod o-x /sbin/drbdmeta</span><br><span class="line">sudo chmod u+s /sbin/drbdmeta</span><br></pre></td></tr></table></figure>
<h2 id="创建资源"><a href="#创建资源" class="headerlink" title="创建资源"></a>创建资源</h2><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Both</span></span><br><span class="line"><span class="string">drbdadm </span><span class="built_in">create-md</span> <span class="string">disk1</span></span><br></pre></td></tr></table></figure>
<h2 id="启动DRBD"><a href="#启动DRBD" class="headerlink" title="启动DRBD"></a>启动DRBD</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##Both</span></span><br><span class="line">sudo<span class="built_in"> service </span>drbd start</span><br></pre></td></tr></table></figure>
<h2 id="初始化同步"><a href="#初始化同步" class="headerlink" title="初始化同步"></a>初始化同步</h2><p>server01作为master,并且开始初始化同步<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">##server01</span><br><span class="line">drbdadm -- --overwrite-data-<span class="keyword">of</span>-peer primary disk1</span><br></pre></td></tr></table></figure></p>
<p>监视同步过程<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">watch</span> <span class="string">cat</span> <span class="string">/proc/drbd</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="string">Every</span> <span class="number">2.0</span><span class="attr">s:</span> <span class="string">cat</span> <span class="string">/proc/drbd</span>                                                  <span class="string">Sun</span> <span class="string">Jun</span>  <span class="number">8</span> <span class="number">08</span><span class="string">:00:49</span> <span class="number">2014</span></span><br><span class="line"></span><br><span class="line"><span class="attr">version:</span> <span class="number">8.4</span><span class="number">.3</span> <span class="string">(api:1/proto:86-101)</span></span><br><span class="line"><span class="attr">srcversion:</span> <span class="string">F97798065516C94BE0F27DC</span></span><br><span class="line"><span class="number">0</span><span class="string">:</span> <span class="attr">cs:SyncTarget</span> <span class="attr">ro:Secondary/Secondary</span> <span class="attr">ds:Inconsistent/UpToDate</span> <span class="string">C</span> <span class="string">r-----</span></span><br><span class="line">    <span class="attr">ns:0</span> <span class="attr">nr:90397696</span> <span class="attr">dw:90389504</span> <span class="attr">dr:0</span> <span class="attr">al:0</span> <span class="attr">bm:5516</span> <span class="attr">lo:9</span> <span class="attr">pe:6</span> <span class="attr">ua:8</span> <span class="attr">ap:0</span> <span class="attr">ep:1</span> <span class="attr">wo:f</span> <span class="attr">oos:1842345780</span></span><br><span class="line">        <span class="string">[&gt;....................]</span> <span class="string">sync'ed:</span>  <span class="number">4.7</span><span class="string">%</span> <span class="string">(1799164/1887436)Mfinish:</span> <span class="number">14</span><span class="string">:11:31</span> <span class="attr">speed:</span> <span class="number">36</span><span class="string">,044</span> <span class="string">(36,</span></span><br><span class="line"><span class="number">168</span><span class="string">)</span> <span class="attr">want:</span> <span class="number">3</span><span class="string">,280</span> <span class="string">K/sec</span></span><br></pre></td></tr></table></figure></p>
<h2 id="测试同步"><a href="#测试同步" class="headerlink" title="测试同步"></a>测试同步</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">##server01</span><br><span class="line"></span><br><span class="line">sudo mkfs<span class="selector-class">.ext4</span> /dev/drbd0</span><br><span class="line">sudo mkdir -<span class="selector-tag">p</span> /srv/data</span><br><span class="line">sudo mount /dev/drbd0 /srv/data</span><br></pre></td></tr></table></figure>
<p>创建磁盘块<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="attribute">if</span>=/dev/zero <span class="attribute">of</span>=/srv/data/test.zeros <span class="attribute">bs</span>=1M <span class="attribute">count</span>=1000</span><br><span class="line"></span><br><span class="line"><span class="comment">##server01</span></span><br><span class="line">sudo umount /srv/data</span><br><span class="line">drbdadm secondary disk1</span><br></pre></td></tr></table></figure></p>
<p>查看同步过程<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">##server02</span></span><br><span class="line"><span class="title">sudo</span> mkdir -p /srv/<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="title">sudo</span> drbdadm primary disk1</span><br><span class="line"><span class="title">sudo</span> mount /dev/drbd0 /srv/<span class="class"><span class="keyword">data</span></span></span><br><span class="line"></span><br><span class="line"><span class="title">sudo</span> ls /srv/<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="meta">##Check for test.zeros file</span></span><br><span class="line"></span><br><span class="line"><span class="title">sudo</span> rm /srv/<span class="class"><span class="keyword">data</span>/test.zeros</span></span><br><span class="line"><span class="title">sudo</span> umount /srv/<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="title">sudo</span> drbdadm secondary disk1</span><br><span class="line"></span><br><span class="line"><span class="meta">##server01</span></span><br><span class="line"><span class="title">sudo</span> drbdadm primary disk1</span><br><span class="line"><span class="title">sudo</span> mount /dev/drbd0 /srv/<span class="class"><span class="keyword">data</span></span></span><br><span class="line"></span><br><span class="line"><span class="title">sudo</span> ls /srv/<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="meta">##Check that the test.zeros file is no longer there</span></span><br></pre></td></tr></table></figure></p>
<p>取消自启动<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-rc<span class="selector-class">.d</span> -f drbd remove</span><br></pre></td></tr></table></figure></p>
<h1 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h1><h2 id="安装nfs-kernel-server"><a href="#安装nfs-kernel-server" class="headerlink" title="安装nfs kernel server"></a>安装nfs kernel server</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">##Both</span></span><br><span class="line">sudo apt-get install nfs-kernel-<span class="keyword">server</span> nfs-<span class="keyword">common</span></span><br></pre></td></tr></table></figure>
<h2 id="取消自启动"><a href="#取消自启动" class="headerlink" title="取消自启动"></a>取消自启动</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">##Both</span><br><span class="line">sudo update-rc.d -f nfs-kernel-server remove</span><br><span class="line"># sudo update-rc.d -f nfs-common remove</span><br><span class="line">sudo update-rc.d nfs-kernel-server stop <span class="number">20</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> .</span><br><span class="line"># sudo update-rc.d nfs-common  stop <span class="number">20</span> <span class="number">0</span> <span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span> <span class="number">6</span> .</span><br></pre></td></tr></table></figure>
<h2 id="配置NFS到DRBD设备"><a href="#配置NFS到DRBD设备" class="headerlink" title="配置NFS到DRBD设备"></a>配置NFS到DRBD设备</h2><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##server01</span></span><br><span class="line">sudo mount /dev/drbd0 /srv/data</span><br><span class="line">sudo mv /var/<span class="class"><span class="keyword">lib</span>/<span class="title">nfs</span>/ /<span class="title">srv</span>/<span class="title">data</span>/</span></span><br><span class="line">sudo ln -s /srv/data/nfs/ <span class="regexp">/var/lib</span><span class="regexp">/nfs</span></span><br><span class="line"><span class="regexp">sudo mv /etc</span><span class="regexp">/exports /srv</span><span class="regexp">/data</span></span><br><span class="line"><span class="regexp">sudo ln -s /srv</span><span class="regexp">/data/exports</span> /etc/exports</span><br><span class="line"></span><br><span class="line"><span class="comment">##server02</span></span><br><span class="line">sudo rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">nfs</span></span></span><br><span class="line">sudo ln -s /srv/data/nfs/ <span class="regexp">/var/lib</span><span class="regexp">/nfs</span></span><br><span class="line"><span class="regexp">sudo rm /etc</span><span class="regexp">/exports</span></span><br><span class="line"><span class="regexp">sudo ln -s /srv</span><span class="regexp">/data/exports</span> /etc/exports</span><br></pre></td></tr></table></figure>
<h2 id="共享配置"><a href="#共享配置" class="headerlink" title="共享配置"></a>共享配置</h2><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">##server01</span></span><br><span class="line"><span class="title">sudo</span> mkdir /srv/<span class="class"><span class="keyword">data</span>/sharet</span></span><br><span class="line"><span class="title">sudo</span> chmod <span class="number">777</span> /srv/<span class="class"><span class="keyword">data</span>/share</span></span><br><span class="line"><span class="title">sudo</span> vi /etc/exports</span><br><span class="line"></span><br><span class="line"><span class="meta">##Add to the bottom</span></span><br><span class="line"><span class="title">sudo</span> vi /etc/exports</span><br><span class="line">/srv/<span class="class"><span class="keyword">data</span>/share        192.168.0.*(<span class="title">rw</span>,<span class="title">no_subtree_check</span>,<span class="title">no_all_squash</span>,<span class="title">no_root_squash</span>)</span></span><br></pre></td></tr></table></figure>
<p>配置完成后卸载掉/dev/drbd0<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo umount <span class="regexp">/dev/</span>drbd0</span><br></pre></td></tr></table></figure></p>
<h1 id="Corosync"><a href="#Corosync" class="headerlink" title="Corosync"></a>Corosync</h1><p>corosync 是用于处理心跳和上报节点信息的软件  </p>
<h2 id="安装配置Corosync"><a href="#安装配置Corosync" class="headerlink" title="安装配置Corosync"></a>安装配置Corosync</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server01<span class="variable">@server01</span><span class="symbol">:~</span><span class="comment"># apt-get install -y corosync</span></span><br><span class="line">server02<span class="variable">@server02</span><span class="symbol">:~</span><span class="comment"># apt-get install -y corosync</span></span><br></pre></td></tr></table></figure>
<p>安装完成以后修改配置文件 /etc/corosync/corosync.conf 找到<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">interface</span> <span class="string">&#123;</span></span><br><span class="line">     <span class="comment"># The following values need to be set based on your environment</span></span><br><span class="line">     <span class="attr">ringnumber:</span> <span class="number">0</span></span><br><span class="line">     <span class="attr">bindnetaddr:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">     <span class="attr">mcastaddr:</span> <span class="number">226.94</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">     <span class="attr">mcastport:</span> <span class="number">5405</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>其中的 bindnetaddr 需要根据当前网络修改, 通过命令 (其中 eth1 根据实际的网络修改)<br><code>ip addr | grep &quot;inet &quot; | grep eth1 | awk &#39;{print $4}&#39; | sed s/255/0/</code><br>可以看到这里我们需要修成的值是 192.168.1.0. 于是我们把这段配置修改成<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">interface</span> <span class="string">&#123;</span></span><br><span class="line">        <span class="comment"># The following values need to be set based on your environment</span></span><br><span class="line">        <span class="attr">ringnumber:</span> <span class="number">0</span></span><br><span class="line">        <span class="attr">bindnetaddr:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.0</span></span><br><span class="line">        <span class="attr">mcastaddr:</span> <span class="number">226.94</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">        <span class="attr">mcastport:</span> <span class="number">5405</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>接着找到<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">server02@server02:~$ sudo cat /etc/corosync/service.d/pcmk</span><br><span class="line">service &#123;</span><br><span class="line">        # Load the Pacemaker Cluster<span class="built_in"> Resource </span>Manager</span><br><span class="line">        ver:       0</span><br><span class="line">        name:      pacemaker</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>把其中的 ver: 0 修改成 1 也就是修改成:<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">service &#123;</span><br><span class="line">        # Load the Pacemaker Cluster<span class="built_in"> Resource </span>Manager</span><br><span class="line">        ver:      1</span><br><span class="line">        name:      pacemaker</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="启动Corosync"><a href="#启动Corosync" class="headerlink" title="启动Corosync"></a>启动Corosync</h2><p>完成以上配置后还需要修改 /etc/default/corosync 将<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">START=no</span><br><span class="line"></span><br><span class="line">修改成</span><br><span class="line"></span><br><span class="line">START=yes</span><br></pre></td></tr></table></figure></p>
<p>接着通过命令, 启动 corosync<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">server01@server01:~# sudo<span class="built_in"> service </span>corosync start</span><br><span class="line">server02@server02:~# sudo<span class="built_in"> service </span>corosync start</span><br></pre></td></tr></table></figure></p>
<h1 id="Pacemaker"><a href="#Pacemaker" class="headerlink" title="Pacemaker"></a>Pacemaker</h1><p>pacemaker 是一个群集资源管理器, 用于管理 corosync 的节点.  </p>
<h2 id="安装和运行-pacemaker"><a href="#安装和运行-pacemaker" class="headerlink" title="安装和运行 pacemaker"></a>安装和运行 pacemaker</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">server01@server01:~#sudo apt-<span class="builtin-name">get</span> install -y pacemaker</span><br><span class="line"></span><br><span class="line">server02@server02:~#sudo apt-<span class="builtin-name">get</span> install -y pacemaker</span><br><span class="line"></span><br><span class="line">server01@server01:~#sudo<span class="built_in"> service </span>pacemaker start</span><br><span class="line"></span><br><span class="line">server02@server02:~#sudo<span class="built_in"> service </span>pacemaker start</span><br></pre></td></tr></table></figure>
<p>完成后就可以通过命令 crm status 查看节点状态了.<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">server01@server01:~#sudo  crm status</span><br><span class="line"></span><br><span class="line">============</span><br><span class="line">Last updated: Mon Dec  2 16:45:30 2013</span><br><span class="line">Last change: Mon Dec  2 16:41:35 2013 via crmd on db2</span><br><span class="line">Stack: openais</span><br><span class="line">Current DC: NONE</span><br><span class="line">2 Nodes configured, 2 expected votes</span><br><span class="line">0 Resources configured.</span><br><span class="line">============</span><br><span class="line"></span><br><span class="line">Node db1: UNCLEAN (offline)</span><br><span class="line">Node db2: UNCLEAN (offline)</span><br></pre></td></tr></table></figure></p>
<p>可以看到目前的2个节点 server01和 server02都是离线的. 接着就需要配置 pacemaker 了  </p>
<h2 id="配置-pacemaker"><a href="#配置-pacemaker" class="headerlink" title="配置 pacemaker"></a>配置 pacemaker</h2><p>首先在 server01输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo crm configure <span class="keyword">property</span><span class="title"> </span><span class="attr">stonith-enabled=</span><span class="literal">false</span></span><br><span class="line">sudo  crm configure <span class="keyword">property</span><span class="title"> </span><span class="attr">no-quorum-policy=</span>ignore</span><br><span class="line"></span><br><span class="line">sudo  crm configure <span class="keyword">rsc_defaults</span><span class="title"> </span><span class="attr">resource-stickiness=</span><span class="number">100</span></span><br></pre></td></tr></table></figure></p>
<p>这几条命令保证, 当 db1 宕机切换到 db2 后, db1 修复好重新上线也不会自动的把主机转移回 db1, 造成不必要的切换.  </p>
<h2 id="配置-drbd"><a href="#配置-drbd" class="headerlink" title="配置 drbd"></a>配置 drbd</h2><p>继续再终端输入 crm configure 进入配置模式, 接着输入<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sudo crm configure</span><br><span class="line"><span class="keyword">primitive</span><span class="title"> drbd0</span> ocf:linbit:drbd \</span><br><span class="line">    <span class="keyword">params</span> <span class="attr">drbd_resource=</span><span class="string">"disk1"</span> \</span><br><span class="line">    <span class="keyword">op</span> <span class="literal">monitor</span> <span class="attr">interval=</span><span class="string">"29s"</span> <span class="attr">role=</span><span class="string">"Master"</span> \</span><br><span class="line">    <span class="keyword">op</span> <span class="literal">monitor</span> <span class="attr">interval=</span><span class="string">"31s"</span> <span class="attr">role=</span><span class="string">"Slave"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ms</span> <span class="title">ms-drbd0</span> drbd0 \</span><br><span class="line">    <span class="keyword">meta</span> <span class="attr">master-max=</span><span class="string">"1"</span> <span class="attr">master-node-max=</span><span class="string">"1"</span> \</span><br><span class="line">        <span class="attr">clone-max=</span><span class="string">"2"</span> <span class="attr">clone-node-max=</span><span class="string">"1"</span> \</span><br><span class="line">        <span class="attr">notify=</span><span class="string">"true"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">primitive</span><span class="title"> db-fs</span> ocf:heartbeat:Filesystem \</span><br><span class="line">    <span class="keyword">params</span> <span class="attr">fstype=</span>ext4 <span class="attr">directory=</span>/srv/data \</span><br><span class="line">        <span class="attr">device=</span>/dev/drbd0</span><br><span class="line"></span><br><span class="line"><span class="keyword">group</span> <span class="title">db-ha-group</span> db-fs</span><br><span class="line"></span><br><span class="line"><span class="keyword">colocation</span> <span class="title">db-ha-group-on-ms-drbd0</span> <span class="literal">inf</span>: db-ha-<span class="keyword">group</span> <span class="title">ms-drbd0</span>:<span class="literal">Master</span></span><br><span class="line"><span class="keyword">order</span> <span class="title">db-ha-group-after-ms-drbd0</span> <span class="literal">inf</span>: ms-drbd0:<span class="literal">promote</span> db-ha-group:<span class="literal">start</span></span><br><span class="line"></span><br><span class="line">commit</span><br><span class="line">exit</span><br></pre></td></tr></table></figure></p>
<p>这时可以通过 crm status 查看到<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Online</span>: [ db1 db2 ]</span><br><span class="line"></span><br><span class="line">Master/Slave Set: ms-drbd0 [drbd0]</span><br><span class="line">    <span class="attribute">Masters</span>: [ db1 ]</span><br><span class="line">    <span class="attribute">Slaves</span>: [ db2 ]</span><br><span class="line">Resource Group: db-ha-group</span><br><span class="line">    db-fs      (ocf::heartbeat:Filesystem):    Started db1</span><br></pre></td></tr></table></figure></p>
<p>当前的 drbd 已经在 server01 上启动并挂载到 /srv/data 下了.  </p>
<h2 id="配置-vip"><a href="#配置-vip" class="headerlink" title="配置 vip"></a>配置 vip</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo crm configure primitive db-ip ocf:heartbeat:IPaddr2 \</span><br><span class="line">    params <span class="attribute">ip</span>=<span class="string">"192.168.0.250"</span> <span class="attribute">nic</span>=<span class="string">"eth0"</span> meta <span class="attribute">target-role</span>=stopped</span><br><span class="line">echo $(crm configure show db-ha-group) db-ip | crm configure load update -</span><br><span class="line">crm<span class="built_in"> resource </span>start db-ip</span><br></pre></td></tr></table></figure>
<p>以上命令就是新建了一个叫 db-ip 的资源, 并把他加入 db-ha-group 组并启动. 为了验证是否成功我们可以输入<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">server01</span>@<span class="selector-tag">server01</span>:~<span class="selector-id">#sudo</span>  <span class="selector-tag">crm</span> <span class="selector-tag">status</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Online</span>: <span class="selector-attr">[ db1 db2 ]</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Master</span>/<span class="selector-tag">Slave</span> <span class="selector-tag">Set</span>: <span class="selector-tag">ms-drbd0</span> <span class="selector-attr">[drbd0]</span></span><br><span class="line">    <span class="selector-tag">Masters</span>: <span class="selector-attr">[ db1 ]</span></span><br><span class="line">    <span class="selector-tag">Slaves</span>: <span class="selector-attr">[ db2 ]</span></span><br><span class="line"><span class="selector-tag">Resource</span> <span class="selector-tag">Group</span>: <span class="selector-tag">db-ha-group</span></span><br><span class="line">    <span class="selector-tag">db-fs</span>      (<span class="attribute">ocf</span>::<span class="attribute">heartbeat</span>:Filesystem):    <span class="selector-tag">Started</span> <span class="selector-tag">db1</span></span><br><span class="line">    <span class="selector-tag">db-ip</span>      (<span class="attribute">ocf</span>::<span class="attribute">heartbeat</span>:IPaddr2):      <span class="selector-tag">Started</span> <span class="selector-tag">db1</span></span><br></pre></td></tr></table></figure></p>
<p>看到 db-ip 已经在 db1 启动了. 接着验证这个 ip 的设置可以输入<br><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">server01@server01:</span>~#sudo <span class="built_in">ip</span> addr show eth0</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>: eth0: &lt;BROADCAST,MULTICAST,<span class="meta">UP</span>,LOWER_UP&gt; mtu <span class="number">1500</span> qdisc pfifo_fast state <span class="meta">UP</span> qlen <span class="number">1000</span></span><br><span class="line">    link/ether <span class="number">00</span>:0c:<span class="number">29</span>:0c:<span class="number">0d</span>:<span class="number">69</span> brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet <span class="number">192.168</span><span class="meta">.37</span><span class="meta">.51</span>/<span class="number">24</span> brd <span class="number">192.168</span><span class="meta">.37</span><span class="meta">.255</span> scope <span class="meta">global</span> eth0</span><br><span class="line">    inet <span class="number">192.168</span><span class="meta">.37</span><span class="meta">.50</span>/<span class="number">32</span> brd <span class="number">192.168</span><span class="meta">.37</span><span class="meta">.178</span> scope <span class="meta">global</span> eth0</span><br><span class="line">    inet6 fe80::20c:29ff:fe0c:d69/<span class="number">64</span> scope link</span><br><span class="line">      valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure></p>
<p>可以看到这个 192.168.0.250 已经被配置给了 eth0  </p>
<h2 id="配置NFS"><a href="#配置NFS" class="headerlink" title="配置NFS"></a>配置NFS</h2><p>配置 pacemaker 的资源<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo crm configure primitive db-nfs lsb:nfs-kernel-server \</span><br><span class="line">    op monitor <span class="attribute">interval</span>=<span class="string">"30s"</span> meta <span class="attribute">target-role</span>=stopped</span><br><span class="line">sudo echo $(sudo crm configure show db-ha-group) db-nfs |sudo crm configure load update -</span><br><span class="line">sudo crm<span class="built_in"> resource </span>start db-nfs</span><br></pre></td></tr></table></figure></p>
<p>最终输入 crm status<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Online</span>: [ db1 db2 ]</span><br><span class="line"></span><br><span class="line">Master/Slave Set: ms-drbd0 [drbd0]</span><br><span class="line">    <span class="attribute">Masters</span>: [ db1 ]</span><br><span class="line">    <span class="attribute">Slaves</span>: [ db2 ]</span><br><span class="line">Resource Group: db-ha-group</span><br><span class="line">    db-fs      (ocf::heartbeat:Filesystem):    Started db1</span><br><span class="line">    db-ip      (ocf::heartbeat:IPaddr2):      Started db1</span><br><span class="line">    db-pg      (ocf::heartbeat:pgsql): Started db1</span><br><span class="line">    db-nfs    (lsb:nfs-kernel-server):        Started db1</span><br></pre></td></tr></table></figure></p>
<p>可以看到所有的服务都已启动.  </p>
<h1 id="迁移资源"><a href="#迁移资源" class="headerlink" title="迁移资源"></a>迁移资源</h1><p>完成之前配置后, 可以通过 crm status 看到所有资源都在 server01上启动了, 现在我们测试能否将资源转移到 server02上并且根据设计他不应该自动迁移回server01, 我们输入<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo crm<span class="built_in"> resource </span>migrate db-ha-group server02</span><br><span class="line">sudo crm<span class="built_in"> resource </span>unmigrate db-ha-group</span><br></pre></td></tr></table></figure></p>
<p>先资源强制分配到 server02, 再取消强制分配. 然后输入 crm_mon, 应该就可以看到资源再慢慢的迁移到 server02, 等一会最终可以看到.<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">Online</span>: [ db1 db2 ]</span><br><span class="line"></span><br><span class="line">Master/Slave Set: ms-drbd0 [drbd0]</span><br><span class="line">    <span class="attribute">Masters</span>: [ db2 ]</span><br><span class="line">    <span class="attribute">Slaves</span>: [ db1 ]</span><br><span class="line">Resource Group: db-ha-group</span><br><span class="line">    db-fs      (ocf::heartbeat:Filesystem):    Started db2</span><br><span class="line">    db-ip      (ocf::heartbeat:IPaddr2):      Started db2</span><br><span class="line">    db-pg      (ocf::heartbeat:pgsql): Started db2</span><br><span class="line">    db-nfs    (lsb:nfs-kernel-server):        Started db2</span><br></pre></td></tr></table></figure></p>
<p>所有的资源都运行于 server02 了. 然后把资源再迁回 server01 可以输入之前的迁移命令也可以简单的重启 pacemaker<br><code>sudo service pacemaker restart</code><br>不一会儿就可以通过 crm status 看到所有的资源又被迁移回了 server01</p>
<p>最后</p>
<p>至此基本的 HA 都已经配置完成了. 基本就是让 pacemaker 来负责程序的启动和调度. 另外还可以通过下列命令来设置 crm.<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">crm<span class="built_in"> resource </span>show            # 显示所有的 resource</span><br><span class="line">crm<span class="built_in"> resource </span>cleanup <span class="variable">$&#123;id&#125;</span>    # 清除失败的 action 日志</span><br><span class="line">crm<span class="built_in"> resource </span>stop <span class="variable">$&#123;id&#125;</span>      # 停止某个 resource</span><br><span class="line">crm configure delete <span class="variable">$&#123;id&#125;</span>    # 删除某个配置</span><br><span class="line">crm configure <span class="builtin-name">edit</span>            # 编辑现有的配置文件</span><br></pre></td></tr></table></figure></p>
<h1 id="故障恢复"><a href="#故障恢复" class="headerlink" title="故障恢复"></a>故障恢复</h1><h2 id="一般故障"><a href="#一般故障" class="headerlink" title="一般故障"></a>一般故障</h2><p>1）单机发生故障<br>当server01发生故障，corosync就会切换资源到server02<br>当server01修复了后，就要立即进行系统切换<br>1&gt; 启动服务<br>启动server01-&gt;启动drbd-&gt;启动corosync-&gt;启动pacemaker<br>2&gt; 迁移数据（可选）<br>当数据同步完成后，迁移资源到server01<br>sudo crm resource migrate db-ha-group server01<br>也可选择不迁移  </p>
<p>2)同时掉电<br>启动server01-&gt;启动drbd-&gt;启动corosync-&gt;启动pacemaker  </p>
<p>启动server02-&gt;启动drbd-&gt;启动corosync-&gt;启动pacemaker  </p>
<h2 id="脑裂故障"><a href="#脑裂故障" class="headerlink" title="脑裂故障"></a>脑裂故障</h2><p>1) 断开主(parmary)节点；关机、断开网络或重新配置其他的IP都可以；这里选择的是断开网络  </p>
<p>2)查看两节点状态<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[server02@server02 ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span>:drbd<span class="regexp">/0  WFConnection Primary/</span>Unknown UpToDate<span class="regexp">/DUnknown C r----- /m</span>nt ext4 <span class="number">2.0</span>G <span class="number">68</span>M <span class="number">1.9</span>G <span class="number">4</span>%</span><br><span class="line">[root@nod1 ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span>:drbd<span class="regexp">/0  StandAlone Secondary/</span>Unknown UpToDate<span class="regexp">/DUnknown r-----</span></span><br></pre></td></tr></table></figure></p>
<p>由上可以看到两个节点已经无法通信；server02为主节点，server01为备节点  </p>
<p>3)将server01节点升级为主(primary)节点并挂载资源<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[server01<span class="variable">@server01</span>~]<span class="comment"># drbdadm primary drbd</span></span><br><span class="line">[server01<span class="variable">@server01</span>~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span><span class="symbol">:drbd/</span><span class="number">0</span>  StandAlone Primary/Unknown UpToDate/DUnknown r-----</span><br><span class="line">[server01<span class="variable">@server01</span>~]<span class="comment"># mount /dev/drbd0 /srv/data</span></span><br><span class="line">[server01<span class="variable">@server01</span>~]<span class="comment"># mount | grep drbd0</span></span><br><span class="line">/dev/drbd<span class="number">0</span> on /srv/data type ext4 (rw)</span><br></pre></td></tr></table></figure></p>
<p>4)假如原来的主(primary)节点修复好重新上线了，这时出现了脑裂情况  </p>
<p>5)再次查看两节点的状态<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[server01<span class="symbol">@server01</span>~]<span class="meta"># drbdadm role drbd</span></span><br><span class="line">Primary/Unknown</span><br><span class="line">[server02<span class="symbol">@server02</span>~]<span class="meta"># drbdadm role drbd</span></span><br><span class="line">Primary/Unknown</span><br></pre></td></tr></table></figure></p>
<p>6)查看server01与server02连接状态<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[server01@server01 ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span>:drbd<span class="regexp">/0  StandAlone Primary/</span>Unknown UpToDate<span class="regexp">/DUnknown r----- /m</span>nt ext4 <span class="number">2.0</span>G <span class="number">68</span>M <span class="number">1.9</span>G <span class="number">4</span>%</span><br><span class="line">[server02@server02 ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span>:drbd<span class="regexp">/0  WFConnection Primary/</span>Unknown UpToDate<span class="regexp">/DUnknown C r----- /m</span>nt ext4 <span class="number">2.0</span>G <span class="number">68</span>M <span class="number">1.9</span>G <span class="number">4</span>%</span><br></pre></td></tr></table></figure></p>
<p>由上可见，状态为StandAlone时，主备节点是不会通信的  </p>
<p>7）查看DRBD的服务状态<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[server01@server01 ~]#<span class="built_in"> service </span>drbd status</span><br><span class="line">drbd driver loaded OK; device status:</span><br><span class="line">version: 8.4.3 (api:1/proto:86-101)</span><br><span class="line">GIT-hash: 89a294209144b68adb3ee85a73221f964d3ee515 build by gardner@, 2013-05-27 04:30:21</span><br><span class="line">m:res   cs          ro               ds                 p       mounted  fstype</span><br><span class="line">0:drbd  StandAlone  Primary/Unknown  UpToDate/DUnknown  r-----  ext4</span><br><span class="line">[server02@server02~]#<span class="built_in"> service </span>drbd status</span><br><span class="line">drbd driver loaded OK; device status:</span><br><span class="line">version: 8.4.3 (api:1/proto:86-101)</span><br><span class="line">GIT-hash: 89a294209144b68adb3ee85a73221f964d3ee515 build by gardner@, 2013-05-27 04:30:21</span><br><span class="line">m:res   cs            ro               ds                 p  mounted  fstype</span><br><span class="line">0:drbd  WFConnection  Primary/Unknown  UpToDate/DUnknown  C  /mnt     ext4</span><br></pre></td></tr></table></figure></p>
<p>8) 在server01备用节点处理办法<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[server01<span class="variable">@server01</span> ~]<span class="comment"># umount /mnt/</span></span><br><span class="line">[server01<span class="variable">@server01</span> ~]<span class="comment"># drbdadm disconnect drbd</span></span><br><span class="line"><span class="symbol">drbd:</span> <span class="symbol">Failure:</span> (<span class="number">162</span>) Invalid configuration request</span><br><span class="line">additional info from <span class="symbol">kernel:</span></span><br><span class="line">unknown connection</span><br><span class="line">Command <span class="string">'drbdsetup disconnect ipv4:192.168.137.225:7789 ipv4:192.168.137.222:7789'</span> terminated <span class="keyword">with</span> exit code <span class="number">10</span></span><br><span class="line">[server01<span class="variable">@server01</span> ~]<span class="comment"># drbdadm secondary drbd</span></span><br><span class="line">[server01<span class="variable">@server01</span> ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span><span class="symbol">:drbd/</span><span class="number">0</span>  StandAlone Secondary/Unknown UpToDate/DUnknown r-----</span><br><span class="line">[server01<span class="variable">@server01</span> ~]<span class="comment"># drbdadm connect --discard-my-data drbd</span></span><br><span class="line"><span class="comment">######执行完以上三步后，你查看会发现还是不可用</span></span><br><span class="line">[server01<span class="variable">@server01</span> ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span><span class="symbol">:drbd/</span><span class="number">0</span>  WFConnection Secondary/Unknown UpToDate/DUnknown C r-----</span><br></pre></td></tr></table></figure></p>
<p>9） 需要在server02节点上重新建立连接资源<br><code>[server02@server02~]# drbdadm connect drbd</code><br>查看节点连接状态<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[server02@server02~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span>:drbd<span class="regexp">/0  Connected Primary/</span>Secondary UpToDate<span class="regexp">/UpToDate C r----- /m</span>nt ext4 <span class="number">2.0</span>G <span class="number">68</span>M <span class="number">1.9</span>G <span class="number">4</span>%</span><br><span class="line">[server01@server01 ~]<span class="comment"># drbd-overview</span></span><br><span class="line">  <span class="number">0</span>:drbd<span class="regexp">/0  Connected Secondary/</span>Primary UpToDate<span class="regexp">/UpToDate C r-----</span></span><br></pre></td></tr></table></figure></p>
<p>由上可见已经恢复到正常运行状态  </p>
<p>待恢复完成后<br>卸载掉/srv/data<br>然后启动服务：<br>启动server01-&gt;启动drbd-&gt;启动corosync-&gt;启动pacemaker<br>启动server02-&gt;启动drbd-&gt;启动corosync-&gt;启动pacemaker  </p>
<p>这里要考虑相关的服务的启动顺序。  </p>
<h1 id="安全策略"><a href="#安全策略" class="headerlink" title="安全策略"></a>安全策略</h1><p>1）需进行ip地址权限设定，在交换机上面做安全策略<br>2）建议配置双网卡，直接背对背连接  </p>
<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><h2 id="NFS-Client"><a href="#NFS-Client" class="headerlink" title="NFS Client"></a>NFS Client</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">In</span> testing, I chose <span class="keyword">to</span> use this command <span class="keyword">to</span> mount NFS:</span><br><span class="line"></span><br><span class="line">sudo mount -t nfs 192.168.0.250:/srv/data/share /mnt</span><br><span class="line"></span><br><span class="line">sudo dd <span class="attribute">if</span>=/dev/zero <span class="attribute">of</span>=/mnt/test.zero <span class="attribute">bs</span>=1M <span class="attribute">count</span>=4000</span><br></pre></td></tr></table></figure>
<p>生成一个4G的文件<br>同时写入两个4G的文件，并且拷贝1G的文件<br>第一个4G文件的写入速度为9M左右<br>第二个4G文件的写入速度为80M左右<br>第三个1G文件的读取速度为80M左右<br>具体是否满足性能要求还需要设置  </p>
<p><img src="http://7xlvqo.com1.z0.glb.clouddn.com/17b96fee66053e8a5c75e91e5a987d8d.png" alt="NFS测试">  </p>
<h1 id="FAQ"><a href="#FAQ" class="headerlink" title="FAQ"></a>FAQ</h1><pre><code>error:
server02@server02:~$ sudo drbdadm create-md disk1
md_offset 10736365568
al_offset 10736332800
bm_offset 10736005120

Found LVM2 physical volume signature
    10484736 kB data area apparently used
    10484380 kB left usable by current configuration

Device size would be truncated, which
would corrupt data and result in
&apos;access beyond end of device&apos; errors.
You need to either
   * use external meta data (recommended)
   * shrink that filesystem first
   * zero out the device (destroy the filesystem)
Operation refused.

Command &apos;drbdmeta 0 v08 /dev/sdb1 internal create-md&apos; terminated with exit code 40
</code></pre><p>解决:<br><code>sudo dd if=/dev/zero of=/dev/sdb1 bs=1M count=1</code>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;需求&quot;&gt;&lt;a href=&quot;#需求&quot; class=&quot;headerlink&quot; title=&quot;需求&quot;&gt;&lt;/a&gt;需求&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;生命不息，折腾不止!  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;建立可用的NFS共享存储&lt;br&gt;&lt;strong
    
    </summary>
    
      <category term="Linux" scheme="http://www.haibin.me/categories/Linux/"/>
    
      <category term="NFS" scheme="http://www.haibin.me/categories/Linux/NFS/"/>
    
      <category term="存储" scheme="http://www.haibin.me/categories/Linux/NFS/%E5%AD%98%E5%82%A8/"/>
    
    
      <category term="Linux" scheme="http://www.haibin.me/tags/Linux/"/>
    
      <category term="nfs" scheme="http://www.haibin.me/tags/nfs/"/>
    
      <category term="存储" scheme="http://www.haibin.me/tags/%E5%AD%98%E5%82%A8/"/>
    
      <category term="折腾" scheme="http://www.haibin.me/tags/%E6%8A%98%E8%85%BE/"/>
    
      <category term="配置" scheme="http://www.haibin.me/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="ubuntu" scheme="http://www.haibin.me/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Sequelizejs-中文手册</title>
    <link href="http://www.haibin.me/2016/04/12/Sequelizejs-%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C/"/>
    <id>http://www.haibin.me/2016/04/12/Sequelizejs-中文手册/</id>
    <published>2016-04-11T23:37:03.000Z</published>
    <updated>2019-07-03T23:28:43.809Z</updated>
    
    <content type="html"><![CDATA[<p>最近翻译了一些关于Sequelizejs的文章，希望对大家有帮助<br>文章地址:</p>
<p><a href="https://haibinpark.gitbooks.io/sequelize-zh-manual/content/" target="_blank" rel="noopener">https://haibinpark.gitbooks.io/sequelize-zh-manual/content/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近翻译了一些关于Sequelizejs的文章，希望对大家有帮助&lt;br&gt;文章地址:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://haibinpark.gitbooks.io/sequelize-zh-manual/content/&quot; target=&quot;_blank&quot; re
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>grunt打包实践</title>
    <link href="http://www.haibin.me/2016/04/10/grunt%E6%89%93%E5%8C%85%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.haibin.me/2016/04/10/grunt打包实践/</id>
    <published>2016-04-10T06:29:25.000Z</published>
    <updated>2019-07-03T23:28:43.811Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h1><p>学会grunt打包<br>并将grunt打包运用于项目实践  </p>
<h1 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h1><ul>
<li>了解 <code>grunt</code> 的作用与用途  </li>
<li>熟悉 <code>nodejs</code>  </li>
<li>熟悉npm的用法  </li>
</ul>
<h1 id="工具链"><a href="#工具链" class="headerlink" title="工具链"></a>工具链</h1><h2 id="grunt-安装"><a href="#grunt-安装" class="headerlink" title="grunt 安装"></a><code>grunt</code> 安装</h2><p>由于我们在开发web项目的时候，都要用 <code>grunt</code> 打包，为了减少重复操作，所以需要安装 <code>grunt</code> 到全局，具体的安装脚本如下:<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="selector-tag">i</span> grunt grunt-cli -g <span class="comment">//安装grunt到全局</span></span><br></pre></td></tr></table></figure></p>
<h2 id="less-安装"><a href="#less-安装" class="headerlink" title="less 安装"></a><code>less</code> 安装</h2><p>由于在项目开发的过程中，我们用到了less,所以提交安装less到全局，具体的安装脚本:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="selector-tag">i</span> less@latest -g <span class="comment">//安装less到全局</span></span><br></pre></td></tr></table></figure>
<h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><p><img src="http://qiniu1.kopbit.com/c8616dc12375f991cd17c3e61b93084e.png" alt="打包流程"></p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="准备-Grunt-项目"><a href="#准备-Grunt-项目" class="headerlink" title="准备 Grunt 项目"></a>准备 <code>Grunt</code> 项目</h2><p>一般需要在你的项目中添加两份文件：<code>package.json</code> 和 <code>Gruntfile</code>。<br><strong>package.json</strong>: 此文件被<code>npm</code>用于存储项目的元数据，以便将此项目发布为<code>npm</code>模块。你可以在此文件中列出项目依赖的<code>grunt</code>和<code>Grunt插件</code>，放置于<code>devDependencies</code>配置段内。<br><strong>Gruntfile</strong>: 此文件被命名为 <code>Gruntfile.js</code> 或 <code>Gruntfile.coffee</code>，用来配置或定义任务（<code>task</code>）并加载<code>Grunt</code>插件的。 此文档中提到的 <code>Gruntfile</code> 其实说的是一个文件，文件名是 <code>Gruntfile.js</code> 或 <code>Gruntfile.coffee</code>.  </p>
<h2 id="配置-package-json"><a href="#配置-package-json" class="headerlink" title="配置 package.json"></a>配置 <code>package.json</code></h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">"name"</span>: <span class="string">"angularjs-e2e-showcase"</span>,     <span class="comment">//项目名称             </span></span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"1.0.0"</span>,                   <span class="comment">//版本号</span></span><br><span class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,                      <span class="comment">//</span></span><br><span class="line">  <span class="string">"devDependencies"</span>: &#123;                  <span class="comment">//开发依赖</span></span><br><span class="line">    <span class="string">"grunt-contrib-clean"</span>: <span class="string">"0.6.0"</span>,     <span class="comment">//清楚目录或者文件</span></span><br><span class="line">    <span class="string">"grunt-contrib-jshint"</span>: <span class="string">"0.11.0"</span>,   <span class="comment">//js语法检查</span></span><br><span class="line">    <span class="string">"grunt-contrib-concat"</span>: <span class="string">"0.5.1"</span>,    <span class="comment">//合并</span></span><br><span class="line">    <span class="string">"grunt-contrib-uglify"</span>: <span class="string">"0.8.0"</span>,    <span class="comment">//js压缩</span></span><br><span class="line">    <span class="string">"grunt-contrib-watch"</span>: <span class="string">"0.6.1"</span>,     <span class="comment">//监听</span></span><br><span class="line">    <span class="string">"grunt-contrib-cssmin"</span>: <span class="string">"0.13.0"</span>,   <span class="comment">//css严肃哦</span></span><br><span class="line">    <span class="string">"grunt-filerev"</span>: <span class="string">"2.3.1"</span>,           <span class="comment">//文件重命名</span></span><br><span class="line">    <span class="string">"load-grunt-tasks"</span>: <span class="string">"3.2.0"</span>,        <span class="comment">//加载grunt任务</span></span><br><span class="line">    <span class="string">"grunt-usemin"</span>: <span class="string">"3.0.0"</span>,            <span class="comment">//</span></span><br><span class="line">    <span class="string">"grunt-contrib-copy"</span>: <span class="string">"0.8.0"</span>,      <span class="comment">//拷贝</span></span><br><span class="line">    <span class="string">"grunt-contrib-imagemin"</span>: <span class="string">"0.9.4"</span>,  <span class="comment">//生成雪碧图，并对css相关样式做出调整</span></span><br><span class="line">    <span class="string">"karma-coverage"</span>: <span class="string">"0.4.2"</span>,          <span class="comment">//</span></span><br><span class="line">    <span class="string">"grunt-lesslint"</span>: <span class="string">"1.4.1"</span>,          <span class="comment">//less检查</span></span><br><span class="line">    <span class="string">"grunt-contrib-less"</span>: <span class="string">"~1.0.1"</span>,     <span class="comment">//less生成工具</span></span><br><span class="line">    <span class="string">"grunt-contrib-htmlmin"</span>: <span class="string">"0.6.0"</span>,   <span class="comment">//html压缩</span></span><br><span class="line">    <span class="string">"karma-jasmine"</span>: <span class="string">"0.3.6"</span>,           <span class="comment">//</span></span><br><span class="line">    <span class="string">"busboy"</span>: <span class="string">"^0.2.9"</span>,                 <span class="comment">//</span></span><br><span class="line">    <span class="string">"fs-extra"</span>: <span class="string">"^0.16.4"</span>               <span class="comment">//</span></span><br><span class="line">  &#125;                                     <span class="comment">//</span></span><br></pre></td></tr></table></figure>
<p>安装依赖包，安装命令<br><code>npm i</code><br>如果是国内的话，可以使用 <code>taoao</code>的npm安装源<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">npm</span> i nrm -g  </span><br><span class="line">nrm use taobao  </span><br><span class="line"><span class="built_in">npm</span> i</span><br></pre></td></tr></table></figure></p>
<h2 id="建立-Gruntfile-文件结构"><a href="#建立-Gruntfile-文件结构" class="headerlink" title="建立 Gruntfile 文件结构"></a>建立 <code>Gruntfile</code> 文件结构</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by david on 4/10/2016.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params">grunt</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'load-grunt-tasks'</span>)(grunt); <span class="comment">//加载 load-grunt-tasks grunt插件</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义路径变量</span></span><br><span class="line">    <span class="keyword">var</span> path = &#123;</span><br><span class="line">        tmp: <span class="string">'.tmp'</span>,                        <span class="comment">//临时目录</span></span><br><span class="line">        dest: <span class="string">'.publish'</span>,                   <span class="comment">//发布目录</span></span><br><span class="line">        web: <span class="string">''</span>  <span class="comment">//项目站点</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//项目配置文件</span></span><br><span class="line">    grunt.initConfig(&#123;</span><br><span class="line"></span><br><span class="line">      pkg: grunt.file.readJSON(<span class="string">'package.json'</span>),</span><br><span class="line">      path: path, <span class="comment">//申明变量</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//清楚文件和目录</span></span><br><span class="line">        clean:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//编译less文件为css</span></span><br><span class="line">        less:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成雪碧图，并修改相应的css文件</span></span><br><span class="line">        sprite:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//拷贝文件</span></span><br><span class="line">        copy:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//合并文件</span></span><br><span class="line">        concat:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//压缩css</span></span><br><span class="line">        cssmin:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//压缩Js</span></span><br><span class="line">        uglify:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文件重命名</span></span><br><span class="line">        filerev:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//替换文件前准备</span></span><br><span class="line">        useminPrepare:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        <span class="comment">//替换文件</span></span><br><span class="line">        usemin:&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    grunt.registerTask(</span><br><span class="line">        <span class="string">'build'</span>, <span class="comment">//分组名称</span></span><br><span class="line">        [        <span class="comment">//该分组包含的任务</span></span><br><span class="line">            <span class="string">'clean:beforebuild'</span>,</span><br><span class="line">            <span class="string">'less'</span>,</span><br><span class="line">            <span class="string">'sprite'</span>,</span><br><span class="line">            <span class="string">'copy'</span>,</span><br><span class="line">            <span class="string">'concat'</span>,</span><br><span class="line">            <span class="string">'cssmin'</span>,</span><br><span class="line">            <span class="string">'uglify'</span>,</span><br><span class="line">            <span class="string">'filerev'</span>,</span><br><span class="line">            <span class="string">'useminPrepare'</span>,</span><br><span class="line">            <span class="string">'usemin'</span>,</span><br><span class="line">            <span class="string">'clean:afterbuild'</span></span><br><span class="line">        ]</span><br><span class="line">    );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="清除文件目录"><a href="#清除文件目录" class="headerlink" title="清除文件目录"></a>清除文件目录</h3><p>该任务包含两个子任务:  </p>
<ul>
<li><p>构建前执行脚本<br>清除 <code>dest</code>，与 <code>tmp</code> 相关目录与文件</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">beforebuild</span>: &#123;</span><br><span class="line">    <span class="attribute">files</span>: [&#123;</span><br><span class="line">        src: [<span class="string">'&lt;%= path.dest %&gt;/'</span>, <span class="string">'&lt;%= path.tmp %&gt;/'</span>]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p>构建后执行脚本<br>清除 <code>tmp</code> 相关目录与文件</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">afterbuild</span>: &#123;</span><br><span class="line">     <span class="attribute">files</span>: [&#123;</span><br><span class="line">         src: [<span class="string">'&lt;%= path.tmp %&gt;/'</span>]</span><br><span class="line">     &#125;]</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="编译less文件"><a href="#编译less文件" class="headerlink" title="编译less文件"></a>编译less文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baseStyleCss:</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">     options:</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">         strictMath:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">         sourceMap:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">         outputSourceFiles:</span> <span class="literal">true</span></span><br><span class="line">     <span class="string">&#125;,</span></span><br><span class="line"><span class="attr">     src:</span> <span class="string">'content/stylesheet/less/config.less'</span><span class="string">,</span> <span class="string">//该less文件将导入其他的less文件</span></span><br><span class="line"><span class="attr">     dest:</span> <span class="string">'content/stylesheet/css/config.css'</span></span><br><span class="line"> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="生成雪碧图"><a href="#生成雪碧图" class="headerlink" title="生成雪碧图"></a>生成雪碧图</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">options</span>: &#123;</span><br><span class="line">    <span class="comment">// 给雪碧图追加时间戳，默认不追加</span></span><br><span class="line">    <span class="attribute">spritestamp</span>: true</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// image-set 示例</span></span><br><span class="line"><span class="attribute">imageKityMinderSprite</span>: &#123;</span><br><span class="line">    <span class="attribute">options</span>: &#123;</span><br><span class="line">        <span class="attribute">useimageset</span>: true,</span><br><span class="line">        <span class="attribute">imagepath</span>: <span class="string">"content/images/slice/"</span>,         <span class="comment">//less文件应用图片的目录地址</span></span><br><span class="line">        <span class="attribute">spritedest</span>: <span class="string">'&lt;%= path.tmp%&gt;/images/slice/'</span>  <span class="comment">//生成后的雪碧图目录地址</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attribute">files</span>: [&#123;</span><br><span class="line">        <span class="comment">// 启用动态扩展</span></span><br><span class="line">        <span class="attribute">expand</span>: true,</span><br><span class="line">        <span class="comment">// css文件源的文件夹</span></span><br><span class="line">        <span class="attribute">cwd</span>: <span class="string">'content/stylesheet/css'</span>,</span><br><span class="line">        <span class="comment">// 匹配规则</span></span><br><span class="line">        <span class="attribute">src</span>: <span class="string">'*.css'</span>,</span><br><span class="line">        <span class="comment">// 导出css和sprite的路径地址</span></span><br><span class="line">        <span class="attribute">dest</span>: <span class="string">'&lt;%= path.tmp%&gt;/css/'</span>,</span><br><span class="line">        <span class="comment">// 导出的css名</span></span><br><span class="line">        <span class="attribute">ext</span>: <span class="string">'.sprite.css'</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="拷贝文件"><a href="#拷贝文件" class="headerlink" title="拷贝文件"></a>拷贝文件</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fonts</span>: &#123;                                     <span class="comment">//拷贝字体</span></span><br><span class="line">     <span class="attribute">expand</span>: true,                           <span class="comment">//展开</span></span><br><span class="line">     <span class="attribute">cwd</span>: <span class="string">'content/fonts/'</span>,                  <span class="comment">//改变当前路径</span></span><br><span class="line">     <span class="attribute">src</span>: [<span class="string">'**'</span>],                            <span class="comment">//匹配文件的正则表达式</span></span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'&lt;%= path.dest %&gt;/fonts/'</span>,        <span class="comment">//</span></span><br><span class="line">     <span class="attribute">flatten</span>: false                          <span class="comment">//</span></span><br><span class="line"> &#125;,                                          <span class="comment">//拷贝图片</span></span><br><span class="line"> <span class="attribute">images</span>: &#123;                                   <span class="comment">//</span></span><br><span class="line">     <span class="attribute">expand</span>: true,                           <span class="comment">//</span></span><br><span class="line">     <span class="attribute">cwd</span>: <span class="string">'content/images/other'</span>,            <span class="comment">//</span></span><br><span class="line">     <span class="attribute">src</span>: [<span class="string">'**'</span>],                            <span class="comment">//</span></span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'&lt;%= path.dest%&gt;/images/other'</span>,   <span class="comment">//</span></span><br><span class="line">     <span class="attribute">flatten</span>: false                          <span class="comment">//</span></span><br><span class="line"> &#125;,                                          <span class="comment">//拷贝雪碧图</span></span><br><span class="line"> <span class="attribute">spriteImages</span>: &#123;                             <span class="comment">//</span></span><br><span class="line">     <span class="attribute">expand</span>: true,                           <span class="comment">//</span></span><br><span class="line">     <span class="attribute">cwd</span>: <span class="string">'&lt;%= path.tmp%&gt;/images/slice'</span>,     <span class="comment">//</span></span><br><span class="line">     <span class="attribute">src</span>: [<span class="string">'**'</span>],                            <span class="comment">//</span></span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'&lt;%= path.dest%&gt;/images/slice'</span>,   <span class="comment">//</span></span><br><span class="line">     <span class="attribute">flatten</span>: false                          <span class="comment">//</span></span><br><span class="line"> &#125;,                                          <span class="comment">//拷贝站点小图标</span></span><br><span class="line"> <span class="attribute">ico</span>: &#123;                                      <span class="comment">//</span></span><br><span class="line">     <span class="attribute">src</span>: <span class="string">'favicon.ico'</span>,                     <span class="comment">//</span></span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'&lt;%= path.dest%&gt;/'</span>                <span class="comment">//</span></span><br><span class="line"> &#125;,                                          <span class="comment">//</span></span><br><span class="line"> <span class="attribute">indexCopy</span>: &#123;                                <span class="comment">//拷贝index.html</span></span><br><span class="line">     <span class="attribute">expand</span>: true,                           <span class="comment">//</span></span><br><span class="line">     <span class="attribute">src</span>: [<span class="string">'index.html'</span>],                    <span class="comment">//</span></span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'&lt;%= path.dest%&gt;/'</span>,               <span class="comment">//</span></span><br><span class="line">     <span class="attribute">flatten</span>: false                          <span class="comment">//</span></span><br><span class="line"> &#125;,                                          <span class="comment">//</span></span><br><span class="line"> <span class="attribute">appViewsCopy</span>: &#123;                             <span class="comment">//拷贝应用相关html文件</span></span><br><span class="line">     <span class="attribute">expand</span>: true,                           <span class="comment">//</span></span><br><span class="line">     <span class="attribute">cwd</span>: <span class="string">'app/'</span>,                            <span class="comment">//</span></span><br><span class="line">     <span class="attribute">src</span>: [<span class="string">'**/**.html'</span>],                    <span class="comment">//</span></span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'&lt;%= path.dest%&gt;/app/'</span>,           <span class="comment">//</span></span><br><span class="line">     <span class="attribute">flatten</span>: false                          <span class="comment">//</span></span><br><span class="line"> &#125;                                           <span class="comment">//</span></span><br></pre></td></tr></table></figure>
<h3 id="合并文件"><a href="#合并文件" class="headerlink" title="合并文件"></a>合并文件</h3><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">baseCss: &#123; //合并<span class="attribute">css</span></span><br><span class="line"><span class="attribute">    src</span>: [</span><br><span class="line">        "bower_components/bootstrap/dist/css/bootstrap<span class="variable">.css</span>",</span><br><span class="line">        "bower_components/angular/angular-csp<span class="variable">.css</span>",</span><br><span class="line">        "bower_components/color-picker/dist/color-picker<span class="variable">.css</span>",</span><br><span class="line">        "bower_components/codemirror/lib/codemirror<span class="variable">.css</span>",</span><br><span class="line">        "bower_components/hotbox/hotbox<span class="variable">.css</span>",</span><br><span class="line">        "<span class="variable">.tmp</span>/css/config<span class="variable">.sprite</span><span class="variable">.css</span>"</span><br><span class="line">    ],</span><br><span class="line">    dest: "&lt;%= path<span class="variable">.tmp</span>%&gt;/css/showcase<span class="variable">.css</span>"</span><br><span class="line">&#125;,</span><br><span class="line">kityminderJs: &#123;</span><br><span class="line">    src: [ //合并js</span><br><span class="line">        "bower_components/angular/angular<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/jquery/dist/jquery<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/bootstrap/dist/js/bootstrap<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/angular-bootstrap/ui-bootstrap<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/angular-bootstrap/ui-bootstrap-tpls<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/seajs/dist/sea-debug<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/color-picker/src/color-picker<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/lib/codemirror<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/mode/xml/xml<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/mode/javascript/javascript<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/mode/css/css<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/mode/htmlmixed/htmlmixed<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/mode/markdown/markdown<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/addon/mode/overlay<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/codemirror/mode/gfm/gfm<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/angular-ui-codemirror/ui-codemirror<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/kity/dist/kity<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/hotbox/hotbox<span class="variable">.js</span>",</span><br><span class="line">        "lib/kityminder/src/kityminder<span class="variable">.js</span>",</span><br><span class="line">        "bower_components/marked/lib/marked<span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/kityminder<span class="variable">.app</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/templates<span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/commandBinder<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/config<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/memory<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/lang<span class="variable">.zh-cn</span><span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/valueTransfer<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/minder<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/resource<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/service/revokeDialog<span class="variable">.service</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_filter/lang<span class="variable">.filter</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/topTab/topTab<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/undoRedo/undoRedo<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/appendNode/appendNode<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/arrange/arrange<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/operation/operation<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/hyperLink/hyperLink<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/imageBtn/imageBtn<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/noteBtn/noteBtn<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/resourceEditor/resourceEditor<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/priorityEditor/priorityEditor<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/progressEditor/progressEditor<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/noteEditor/noteEditor<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/notePreviewer/notePreviewer<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/templateList/templateList<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/themeList/themeList<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/layout/layout<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/styleOperator/styleOperator<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/fontOperator/fontOperator<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/expandLevel/expandLevel<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/selectAll/selectAll<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/colorPanel/colorPanel<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/navigator/navigator<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/searchBox/searchBox<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/searchBtn/searchBtn<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/dialog/hyperlink/hyperlink<span class="variable">.ctrl</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/dialog/image/image<span class="variable">.ctrl</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/dialog/im-export-node/imExportNode<span class="variable">.ctrl</span><span class="variable">.js</span>",</span><br><span class="line">        "app/_directive/kityminder/kityminderEditor/kityminderEditor<span class="variable">.directive</span><span class="variable">.js</span>",</span><br><span class="line">        "lib/kityminder/src/expose-kityminder<span class="variable">.js</span>",</span><br><span class="line">        "app/app<span class="variable">.module</span><span class="variable">.js</span>",</span><br><span class="line">        "app/kityminder/kityminder-main-controller<span class="variable">.js</span>"</span><br><span class="line">    ],</span><br><span class="line">    dest: "&lt;%= path<span class="variable">.tmp</span>%&gt;/js/showcase<span class="variable">.js</span>"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="压缩css"><a href="#压缩css" class="headerlink" title="压缩css"></a>压缩css</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">kopBaseCss</span>: &#123;</span><br><span class="line">    <span class="attribute">src</span>: [<span class="string">"&lt;%= path.tmp%&gt;/css/showcase.css"</span>],</span><br><span class="line">    dest: <span class="string">"&lt;%= path.dest %&gt;/css/showcase.css"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="压缩Js"><a href="#压缩Js" class="headerlink" title="压缩Js"></a>压缩Js</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">baseJs</span>: &#123;</span><br><span class="line">    <span class="attribute">src</span>: <span class="string">"&lt;%= path.tmp%&gt;/js/showcase.js"</span>,</span><br><span class="line">    dest: <span class="string">"&lt;%= path.dest%&gt;/js/showcase.js"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="文件重命名"><a href="#文件重命名" class="headerlink" title="文件重命名"></a>文件重命名</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">build</span>: &#123;</span><br><span class="line">    <span class="attribute">files</span>: [&#123;</span><br><span class="line">        src: [<span class="string">'&lt;%= path.dest %&gt;/js/**.js'</span>, <span class="string">'&lt;%= path.dest %&gt;/css/**'</span>] //只是对js于css重新命名</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="替换文件前准备"><a href="#替换文件前准备" class="headerlink" title="替换文件前准备"></a>替换文件前准备</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">html</span>: <span class="string">'&lt;%= path.dest %/**/*.html'</span>,</span><br><span class="line"> <span class="attribute">options</span>: &#123;</span><br><span class="line">     <span class="attribute">dest</span>: <span class="string">'./&lt;%= path.dest %&gt;'</span>,</span><br><span class="line">     <span class="attribute">root</span>: <span class="string">'./&lt;%= path.dest %&gt;'</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="替换文件"><a href="#替换文件" class="headerlink" title="替换文件"></a>替换文件</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>: &#123;</span><br><span class="line">    <span class="attribute">files</span>: [&#123;</span><br><span class="line">        src: <span class="string">'&lt;%= path.dest %&gt;/**/*.html'</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;,</span><br><span class="line"><span class="selector-tag">options</span>: &#123;</span><br><span class="line">    <span class="attribute">assetsDirs</span>: [<span class="string">'&lt;%= path.dest %&gt;'</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h1><p>项目地址传送门:<br><a href="https://github.com/haibinpark/angular-e2etest-showcase.git" target="_blank" rel="noopener">https://github.com/haibinpark/angular-e2etest-showcase.git</a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="http://gruntjs.com/" target="_blank" rel="noopener">Gruntjs官方网站</a><br><a href="http://www.gruntjs.net/" target="_blank" rel="noopener">Gruntjs中文网站</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;目的&quot;&gt;&lt;a href=&quot;#目的&quot; class=&quot;headerlink&quot; title=&quot;目的&quot;&gt;&lt;/a&gt;目的&lt;/h1&gt;&lt;p&gt;学会grunt打包&lt;br&gt;并将grunt打包运用于项目实践  &lt;/p&gt;
&lt;h1 id=&quot;前提&quot;&gt;&lt;a href=&quot;#前提&quot; class=&quot;h
    
    </summary>
    
      <category term="工具" scheme="http://www.haibin.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://www.haibin.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="grunt" scheme="http://www.haibin.me/tags/grunt/"/>
    
  </entry>
  
  <entry>
    <title>ATOM 快速上手文档</title>
    <link href="http://www.haibin.me/2016/02/07/ATOM%20%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B%E6%96%87%E6%A1%A3/"/>
    <id>http://www.haibin.me/2016/02/07/ATOM 快速上手文档/</id>
    <published>2016-02-07T04:48:02.000Z</published>
    <updated>2019-07-03T23:28:43.807Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li><a href="#atom-快速上手文档">ATOM 快速上手文档</a><ul>
<li><a href="#安装nodejs">安装nodejs</a></li>
<li><a href="#安装-atom">安装 atom</a></li>
<li><a href="#代理设置">代理设置</a></li>
<li><a href="#安装常用插件">安装常用插件</a></li>
<li><a href="#如何安装插件">如何安装插件</a></li>
<li><a href="#atom配置">atom配置</a><ul>
<li><a href="#配置七牛">配置七牛</a></li>
<li><a href="#修改源码文件">修改源码文件</a></li>
</ul>
</li>
<li><a href="#atom-使用小技巧">atom 使用小技巧</a><ul>
<li><a href="#tips1">tips1</a></li>
</ul>
</li>
<li><a href="#tips2">tips2</a><ul>
<li><a href="#tips3">tips3</a></li>
<li><a href="#tip4">tip4</a></li>
</ul>
</li>
<li><a href="#使用错误">使用错误</a></li>
<li><a href="#参考链接">参考链接</a></li>
</ul>
</li>
</ul>
<h1 id="ATOM-快速上手文档"><a href="#ATOM-快速上手文档" class="headerlink" title="ATOM 快速上手文档"></a>ATOM 快速上手文档</h1><h2 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h2><p>略  </p>
<h2 id="安装-atom"><a href="#安装-atom" class="headerlink" title="安装 atom"></a>安装 atom</h2><p>略  </p>
<h2 id="代理设置"><a href="#代理设置" class="headerlink" title="代理设置"></a>代理设置</h2><blockquote>
<p>由于我们伟大的墙，所以我们需要进行代理设置<br>代理我们可以使用shadowsocks    </p>
</blockquote>
<p>安装Atom后,打开C:\Users\xxx\下的.atom文件夹里的.apmrc文件,添加以下三行配置即可:  </p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">http-proxy</span>=http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">1080</span></span><br><span class="line"><span class="attr">https-proxy</span>=http://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">1080</span></span><br><span class="line"><span class="attr">strict-ssl</span>=<span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>如果找不到.apmrc文件,就从.apm文件夹里复制一个出来.</p>
<h2 id="安装常用插件"><a href="#安装常用插件" class="headerlink" title="安装常用插件"></a>安装常用插件</h2><blockquote>
<p>这些插件写文档基本够用了  </p>
</blockquote>
<ul>
<li>Markdown Assistant  </li>
<li>Qiniu-uploader  </li>
<li>Git-Plus  </li>
<li>Merge Conflicts  </li>
<li>Markdown preview plus</li>
</ul>
<h2 id="如何安装插件"><a href="#如何安装插件" class="headerlink" title="如何安装插件"></a>如何安装插件</h2><p>按住ctrl+, 这个组合键，即可进入atom配置界面<br>选择<code>+Install</code>  </p>
<p><img src="http://7xphqb.com1.z0.glb.clouddn.com/cfbdd3816740380930fdb1b7ff5b2f7e.png" alt="安装相关插件页面"></p>
<h2 id="atom配置"><a href="#atom配置" class="headerlink" title="atom配置"></a>atom配置</h2><h3 id="配置七牛"><a href="#配置七牛" class="headerlink" title="配置七牛"></a>配置七牛</h3><p>由于我们使用的是qiniu的图床，所以要配置qiniu-uploader  </p>
<p>具体参数的获取方法，上面都有相对应的说明  </p>
<p><img src="http://7xphqb.com1.z0.glb.clouddn.com/0ac312cde75753f7416f082a42369220.png" alt="七牛相关配置信息"></p>
<h3 id="修改源码文件"><a href="#修改源码文件" class="headerlink" title="修改源码文件"></a>修改源码文件</h3><p>由于复制粘贴有些问题，所以需要对markdown-assistant源码做少许修改<br>修改路径<br><code>C:\Users\xxx\.atom\packages\markdown-assistant\lib\main.coffee</code><br>将33行的<code>e.mataKey</code>替换为<code>e.ctrKey</code>  </p>
<h2 id="atom-使用小技巧"><a href="#atom-使用小技巧" class="headerlink" title="atom 使用小技巧"></a>atom 使用小技巧</h2><h3 id="tips1"><a href="#tips1" class="headerlink" title="tips1"></a>tips1</h3><p>ctrl+shift+a 快捷键添加单个文件  </p>
<h2 id="tips2"><a href="#tips2" class="headerlink" title="tips2"></a>tips2</h2><p>ctrl+shift+x 快捷键提交当前修改  </p>
<h3 id="tips3"><a href="#tips3" class="headerlink" title="tips3"></a>tips3</h3><p>ctrl+shift+h 快捷键打开git命令窗口  </p>
<h3 id="tip4"><a href="#tip4" class="headerlink" title="tip4"></a>tip4</h3><p>使用<code>unset!</code>取消快捷键<br><figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'atom</span>-workspace, atom-workspace atom-text-editor':</span><br><span class="line">  <span class="symbol">'ctrl</span>-shift-<span class="type">X'</span>: <span class="symbol">'unset</span>!<span class="string">'</span></span><br></pre></td></tr></table></figure></p>
<h2 id="使用错误"><a href="#使用错误" class="headerlink" title="使用错误"></a>使用错误</h2><p>这里的主要错误是atom插件的安装错误<br><code>atom tunneling socket could not be established, cause=Parse Error</code><br>这个错误的原因是由于代理设置的问题，我使用的是sockets代理，要转为http代理  </p>
<pre><code>brew install polipo  
polipo socksParentProxy=localhost:1080
</code></pre><p>这样就会产生一个新的端口<br><code>Established listening socket on port 8123.</code>  将上面的端口号修改为<code>8123</code>即可</p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://www.jianshu.com/p/85b11364fa1c" target="_blank" rel="noopener">http://www.jianshu.com/p/85b11364fa1c</a><br><a href="http://blog.csdn.net/crper/article/details/48056435" target="_blank" rel="noopener">http://blog.csdn.net/crper/article/details/48056435</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#atom-快速上手文档&quot;&gt;ATOM 快速上手文档&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#安装nodejs&quot;&gt;安装nodejs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#安装-atom&quot;&gt;安装 atom&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
    
    </summary>
    
      <category term="OSX atom tools 工具" scheme="http://www.haibin.me/categories/OSX-atom-tools-%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>nodejs课程学习第2课</title>
    <link href="http://www.haibin.me/2015/11/13/nodejs%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%AC2%E8%AF%BE/"/>
    <id>http://www.haibin.me/2015/11/13/nodejs课程学习第2课/</id>
    <published>2015-11-13T12:10:52.000Z</published>
    <updated>2019-07-03T23:28:43.811Z</updated>
    
    <content type="html"><![CDATA[<h2 id="课程目标"><a href="#课程目标" class="headerlink" title="课程目标"></a>课程目标</h2><ul>
<li>建立nodejs web项目  </li>
<li>nodejs web框架的常用函数的使用方法  </li>
<li>代码托管Gitlab与github  </li>
<li>私有镜像Docker部署  </li>
</ul>
<h2 id="课程内容"><a href="#课程内容" class="headerlink" title="课程内容"></a>课程内容</h2><h3 id="基础工具准备"><a href="#基础工具准备" class="headerlink" title="基础工具准备"></a>基础工具准备</h3><h4 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h4><ul>
<li>windows安装<br>略  </li>
<li>osx下安装  </li>
</ul>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>nodejs</span><br></pre></td></tr></table></figure>
<ul>
<li>ubuntu 安装  </li>
</ul>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="builtin-name">get</span> update -y</span><br><span class="line">apt-<span class="builtin-name">get</span> install nodejs -y</span><br></pre></td></tr></table></figure>
<h4 id="安装web-strom"><a href="#安装web-strom" class="headerlink" title="安装web strom"></a>安装web strom</h4><p>现在体验了一圈，用的比较顺手的还是web storm，安装方法我这里就不一一演示了,如果经济条件允许，建议大家购买正版吧，建议大家购买的软件版本为webstorm 11，主要这个版本，可以为使用javascript测试框架mocha<br>略   </p>
<h4 id="建立nodejs项目"><a href="#建立nodejs项目" class="headerlink" title="建立nodejs项目"></a>建立nodejs项目</h4><h3 id="nodejs-express框架"><a href="#nodejs-express框架" class="headerlink" title="nodejs express框架"></a>nodejs express框架</h3><p>nodejs express框架，包括几个比较常用的函数，大家理解对代码编写很有帮助的。  </p>
<ul>
<li><p>require<br>require包含的主要作用是包含第三方模块  </p>
</li>
<li><p>app.use  </p>
</li>
</ul>
<ul>
<li>app.get;app.post;app.put;app.delete  </li>
</ul>
<ul>
<li>app.set方法  </li>
</ul>
<h3 id="代码托管"><a href="#代码托管" class="headerlink" title="代码托管"></a>代码托管</h3><p>现在代码托管代码的方式有两种方式git,svn,由于git的分布式的特性，所以我们采用git的方式，现在采用git的平台著名的有两个<a href="(http://www.gitlab.org)">gitlab</a>,<a href="(http://www.github.com)">github</a>  </p>
<h4 id="gitlab"><a href="#gitlab" class="headerlink" title="gitlab"></a>gitlab</h4><h4 id="github"><a href="#github" class="headerlink" title="github"></a>github</h4><h3 id="代码测试"><a href="#代码测试" class="headerlink" title="代码测试"></a>代码测试</h3><ul>
<li><p>代码测试框架mocha  </p>
</li>
<li><p>网络持续集成平台  </p>
</li>
</ul>
<h3 id="代码部署"><a href="#代码部署" class="headerlink" title="代码部署"></a>代码部署</h3><p>现在的代码部署，其实是很方便的，我采用的方案，是通过<a href="(http://www.alauda.cn)">灵雀云</a>,代码托管采用的是aliyun的vps服务器  </p>
<h4 id="持续构建镜像"><a href="#持续构建镜像" class="headerlink" title="持续构建镜像"></a>持续构建镜像</h4><p>这里主要概述如何在灵雀云上构建一个持续构建的镜像   </p>
<h4 id="运行你的服务"><a href="#运行你的服务" class="headerlink" title="运行你的服务"></a>运行你的服务</h4><ul>
<li>购买aliyun服务器  </li>
</ul>
<ul>
<li>安装docker环境  </li>
</ul>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> install docker.io</span><br></pre></td></tr></table></figure>
<ul>
<li>启动软件服务  </li>
</ul>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -d index<span class="selector-class">.aluda</span><span class="selector-class">.com</span>/park/myweb</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;课程目标&quot;&gt;&lt;a href=&quot;#课程目标&quot; class=&quot;headerlink&quot; title=&quot;课程目标&quot;&gt;&lt;/a&gt;课程目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;建立nodejs web项目  &lt;/li&gt;
&lt;li&gt;nodejs web框架的常用函数的使用方法  &lt;/li&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>学习nodejs第一课</title>
    <link href="http://www.haibin.me/2015/11/10/%E5%AD%A6%E4%B9%A0nodejs%E7%AC%AC%E4%B8%80%E8%AF%BE/"/>
    <id>http://www.haibin.me/2015/11/10/学习nodejs第一课/</id>
    <published>2015-11-09T23:28:02.000Z</published>
    <updated>2019-07-03T23:28:43.814Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一步一步学习nodejs-startup"><a href="#一步一步学习nodejs-startup" class="headerlink" title="一步一步学习nodejs-startup"></a>一步一步学习nodejs-startup</h1><p>讲解点:  </p>
<ul>
<li>nodejs特点</li>
<li>nodejs与v8</li>
<li>nodejs与libuv</li>
<li>nodejs的应用场景</li>
</ul>
<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>我们已经有许多web容器，为什么还需要有nodejs呢？</p>
<ul>
<li>IIS  </li>
<li>Apache  </li>
<li>Tomcat  </li>
<li>nginx</li>
<li>…  </li>
</ul>
<p>因为nodejs具有以下特点:</p>
<ul>
<li>异步I/O  </li>
<li>事件与回调  </li>
<li>跨平台  </li>
<li>单线程  </li>
</ul>
<h2 id="nodejs特点"><a href="#nodejs特点" class="headerlink" title="nodejs特点"></a>nodejs特点</h2><ul>
<li>异步I/O  {:&amp;.moveIn}   </li>
</ul>
<p>这个是经典前端的异步I/O  </p>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/前端异步调用.png" alt="&quot;前端异步调用&quot;" title="前端异步调用"></p>
<p><strong>查看代码 N</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">'/url'</span>, &#123;<span class="attr">title</span>: <span class="string">'Parkpang讲Node.js'</span>&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123; </span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'收到讲课请求'</span>);&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'发送讲课请求完毕'</span>);</span><br></pre></td></tr></table></figure>
<p>这个是后端的异步操作<br><img src="http://7xlp7m.com1.z0.glb.clouddn.com/服务器端异步调用.png" alt="&quot;后端异步调用&quot;" title="后端异步调用"><br><strong>查看代码 N</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="regexp">/home/</span>parkpang.png;fs.readFile(<span class="string">'path'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err, file</span>) </span>&#123; </span><br><span class="line">	<span class="built_in">console</span>.log(<span class="string">'读取parkpang的照片成功'</span>)&#125;); </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'发起读取parkpang的照片'</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li>事件与回调函数  </li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);<span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);<span class="comment">//   服务器的request事件 </span></span><br><span class="line">http.createServer(</span><br><span class="line">	<span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;		<span class="keyword">var</span> postData = <span class="string">''</span>; req.setEncoding(<span class="string">'utf8'</span>);		<span class="comment">//   请求的data事件 </span></span><br><span class="line">		req.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">trunk</span>) </span>&#123;			postData += trunk; &#125;);<span class="comment">//   请求的end事件 </span></span><br><span class="line">		req.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;		res.end(postData); </span><br><span class="line">	&#125;);&#125;).listen(<span class="number">8080</span>); </span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'服务器启动成功'</span>);</span><br></pre></td></tr></table></figure>
<ul>
<li><p>跨平台</p>
</li>
<li><p>单线程 <strong>N</strong>     </p>
</li>
</ul>
<p>单线程的优点:<br>（1） 不用像多线程编程那样处处在意状态的同步问题<br>（2） 没有死锁的存在<br>（3） 没有线程上下文交换所带来的性能上的开销<br>单线程的缺点:<br>（1） 无法利用多核CPU  ？<br>（2） 错误会引起整个应用退出,应用的健壮性值得考验<br>（3） 大量计算占用CPU导致无法继续调用异步I/O   </p>
<h2 id="nodejs历史"><a href="#nodejs历史" class="headerlink" title="nodejs历史"></a>nodejs历史</h2><ul>
<li>2009年3月,Ryan Dahl在其博客上宣布准备基于V8创建一个轻量级的Web服务器并提供一套库  {:&amp;.moveIn}</li>
<li>2009年5月,Ryan Dahl在GitHub上发布了最初的版本  </li>
<li>2009年12月和2010年4月,两届JSConf大会都安排了Node的讲座  </li>
<li>2010年年底,Node获得硅谷云计算服务商Joyent公司的资助,其创始人Ryan Dahl加入Joyent公司全职负责Node的发展  </li>
<li><strong>2011年7月,Node在微软的支持下发布了其Windows版本</strong>  </li>
<li>2011年11月,Node超越Ruby on Rails,成为GitHub上关注度最高的项目(随后被Bootstrap 7 项目超越,目前仍居第二）  </li>
<li>2012年1月底,Ryan Dahl在对Node架构设计满意的情况下,将掌门人的身份转交给Isaac Z. Schlueter,自己转向一些研究项目。Isaac Z. Schlueter是Node的包管理器<a href="https://npmjs.org" target="_blank" rel="noopener">NPM</a>的作者,之 后Node的版本发布和bug修复等工作由他接手  {:&amp;.moveIn}  </li>
<li><strong>2014年12月份左右，iojs从nodejs分裂出来</strong>  </li>
<li><strong>2015年9月份左右，iojs又回归到nodejs</strong>  </li>
</ul>
<h2 id="v8引擎"><a href="#v8引擎" class="headerlink" title="v8引擎"></a>v8引擎</h2><ul>
<li>chrome与v8组件图  </li>
</ul>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/chrome组件图.png" alt="chrome与v8组件图" title="chrome与v8组件图"></p>
<h3 id="nodejs与v8"><a href="#nodejs与v8" class="headerlink" title="nodejs与v8"></a>nodejs与v8</h3><hr>
<ul>
<li>nodejs与v8组件图<br><img src="http://7xlp7m.com1.z0.glb.clouddn.com/node组件图.png" alt="nodejs与v8组件图" title="chrome与v8组件图"></li>
</ul>
<h3 id="什么是v8引擎"><a href="#什么是v8引擎" class="headerlink" title="什么是v8引擎?"></a>什么是v8引擎?</h3><p><a href="https://zh.wikipedia.org/wiki/V8_(JavaScript引擎)" target="_blank" rel="noopener">V8</a>是一个由美国Google开发的开源JavaScript引擎，用于Google Chrome中。<br>V8在运行之前将JavaScript编译成了机器码，而非字节码或是解释执行它，以此提升性能。更进一步，使用了如内联缓存（inline caching）等方法来提高性能。有了这些功能，JavaScript程序与V8引擎的速度媲美二进制编译。  </p>
<h2 id="nodejs如何实现跨平台"><a href="#nodejs如何实现跨平台" class="headerlink" title="nodejs如何实现跨平台"></a>nodejs如何实现跨平台</h2><ul>
<li>nodejs最初的跨平台方案   </li>
</ul>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/node跨平台_origin.png" alt="nodejs最初的跨平台方案" title="nodejs最初的跨平台方案"></p>
<ul>
<li>nodejs是通过libuv实现跨平台  </li>
</ul>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/nodejs跨平台_v0.6.0.png" alt="nodejs是通过libuv实现跨平台" title="nodejs是通过libuv实现跨平台">  </p>
<blockquote>
<p>libuv 是 Node 的新跨平台抽象层，用于抽象 Windows 的 IOCP 及 *nix 的 libev。作者打算在这个库的包含所有平台的差异性。</p>
</blockquote>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/libuv.png" alt="libuv与系统" title="libuv与系统"></p>
<p><a href="http://blog.codingnow.com/2012/01/libuv.html" target="_blank" rel="noopener">http://blog.codingnow.com/2012/01/libuv.html</a><br><a href="http://baike.baidu.com/view/1256215.htm" target="_blank" rel="noopener">http://baike.baidu.com/view/1256215.htm</a></p>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/IOCP模型.png" alt="IOCP" title="IOCP"></p>
<p><strong>IOCP定义 N</strong></p>
<blockquote>
<p>IOCP（I/O Completion Port）,常称I/O完成端口。 IOCP模型属于一种通讯模型，适用于(能控制并发执行的)高负载服务器的一个技术。 通俗一点说，就是用于高效处理很多很多的客户端进行数据交换的一个模型。或者可以说，就是能异步I/O操作的模型。  </p>
</blockquote>
<h2 id="nodejs如何突破单线程"><a href="#nodejs如何突破单线程" class="headerlink" title="nodejs如何突破单线程"></a>nodejs如何突破单线程</h2><ul>
<li>HTML5如何解决前端javascript大计算阻塞UI渲染的问题？<br>html5是采用<strong>Web Workers</strong>来解决js大计算阻塞ui的问题<br>demo_workers.js源码  </li>
</ul>
<figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var <span class="built_in">i</span>=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timedCount</span><span class="params">()</span></span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">i</span>=<span class="built_in">i</span>+<span class="number">1</span>;</span><br><span class="line">	postMessage(<span class="built_in">i</span>);</span><br><span class="line">	setTimeout(<span class="string">"timedCount()"</span>,<span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">timedCount();</span><br></pre></td></tr></table></figure>
<p>index.html源码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> w;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">startWorker</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(typeof(Worker)!==<span class="string">"undefined"</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	  <span class="keyword">if</span>(typeof(w)==<span class="string">"undefined"</span>)</span><br><span class="line">	    &#123;</span><br><span class="line">	    w=<span class="keyword">new</span> Worker(<span class="string">"demo_workers.js"</span>);</span><br><span class="line">	    &#125;</span><br><span class="line">	  w.onmessage = <span class="function"><span class="keyword">function</span> <span class="params">(event)</span> </span>&#123;</span><br><span class="line">	    document.getElementById(<span class="string">"result"</span>).innerHTML=event.data;</span><br><span class="line">	  &#125;;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		document.getElementById(<span class="string">"result"</span>).innerHTML=<span class="string">"Sorry, your browser</span></span><br><span class="line"><span class="string">		 does not support Web Workers..."</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stopWorker</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	w.terminate();</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">* nodejs是如何解决javascript大计算阻塞的呢？</span><br><span class="line">node采用了与Web Workers相同的思路来解决单线程中大计算量的问题，使用Nodejs的一个十分重要的模块child_process，通过它可以创建多进程，以利用多核计算资源。</span><br><span class="line"></span><br><span class="line"><span class="comment">## child_process介绍  </span></span><br><span class="line">child_process创建子进程的四个函数  </span><br><span class="line"></span><br><span class="line">spawn,exec,execFile,fork</span><br><span class="line"></span><br><span class="line">![](http:<span class="comment">//7xlp7m.com1.z0.glb.clouddn.com/子进程.png "")</span></span><br><span class="line"></span><br><span class="line">* spawn</span><br></pre></td></tr></table></figure>
<p>child_process = require (‘child_process’);<br>options ={stdio: [‘ipc’] };<br>child = child_process.spawn(‘coffee’, [‘./child.coffee’], options);   </p>
<p>注解:  </p>
<p>IPC（Inter-Process Communication，进程间通信）<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">* exec  </span><br><span class="line"></span><br><span class="line">```<span class="built_in">require</span>(<span class="string">'child_process'</span>).exec( <span class="string">'ls -lh /home'</span> , <span class="function"><span class="keyword">function</span><span class="params">(err, stdout , stderr )</span></span> &#123;</span><br><span class="line">   console.<span class="built_in">log</span>( <span class="built_in">stdout</span> );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<ul>
<li>execFile <strong>N</strong></li>
</ul>
<figure class="highlight plain"><figcaption><span>childProcess </span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var path = &quot;/home&quot;;</span><br><span class="line">childProcess.execFile(&apos;/bin/ls&apos;, [&apos;-l&apos;, path], function (err, result) &#123;</span><br><span class="line">    console.log(result)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>fork</li>
</ul>
<p>```var n = require(‘child_process’).fork( ‘./child.js’);<br>n.on ( ‘message’, function(m) {<br>  console. log ( ‘ParkPang got message:’, m);<br>});<br>n.send({ ToChildProcess: ‘讨论需求’ });</p>
<p>child.js:</p>
<p>process.on ( ‘message’, function(m) {<br>   console.log ( ‘Homer got message:’, m);<br>});<br>process.send({ ToParentProcess: ‘正在进行需求讨论’ });<br>```   </p>
<h2 id="nodejs的应用场景"><a href="#nodejs的应用场景" class="headerlink" title="nodejs的应用场景"></a>nodejs的应用场景</h2><ul>
<li>I/O密集型  </li>
<li>兼容已有系统  </li>
<li>分布式应用  </li>
<li>计算密集???  </li>
</ul>
<h2 id="FAQ？"><a href="#FAQ？" class="headerlink" title="FAQ？"></a>FAQ？</h2><ul>
<li>nodejs是通过什么跨平台的？</li>
<li>nodejs有哪些特点?</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;一步一步学习nodejs-startup&quot;&gt;&lt;a href=&quot;#一步一步学习nodejs-startup&quot; class=&quot;headerlink&quot; title=&quot;一步一步学习nodejs-startup&quot;&gt;&lt;/a&gt;一步一步学习nodejs-startup&lt;/h1&gt;&lt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>互联网女皇2015年互联网报告</title>
    <link href="http://www.haibin.me/2015/10/13/%E4%BA%92%E8%81%94%E7%BD%91%E5%A5%B3%E7%9A%872015%E5%B9%B4%E6%8A%A5%E5%91%8A/"/>
    <id>http://www.haibin.me/2015/10/13/互联网女皇2015年报告/</id>
    <published>2015-10-12T16:10:10.000Z</published>
    <updated>2019-07-03T23:28:43.813Z</updated>
    
    <content type="html"><![CDATA[<p>2015 年互联网女皇<a href="http://en.wikipedia.org/wiki/Mary_Meeker" target="_blank" rel="noopener">Mary_Meeker</a>出报告了，<br>报告下载地址:<br><a href="http://7bv984.com1.z0.glb.clouddn.com/“互联网女皇报告”中文版_腾讯科技.pdf" target="_blank" rel="noopener">2015 互联网报告下载</a>  </p>
<blockquote>
<p><a href="http://www.haibin.me/2014/05/29/2014-05-29-internet-2014-report/">2015以前报告传送门</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2015 年互联网女皇&lt;a href=&quot;http://en.wikipedia.org/wiki/Mary_Meeker&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Mary_Meeker&lt;/a&gt;出报告了，&lt;br&gt;报告下载地址:&lt;br&gt;&lt;a href=&quot;
    
    </summary>
    
      <category term="互联网报告" scheme="http://www.haibin.me/categories/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%A5%E5%91%8A/"/>
    
    
      <category term="互联网报告" scheme="http://www.haibin.me/tags/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%A5%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>[晨写于20150918]</title>
    <link href="http://www.haibin.me/2015/09/18/%E6%99%A8%E5%86%99%E4%BA%8E20150918/"/>
    <id>http://www.haibin.me/2015/09/18/晨写于20150918/</id>
    <published>2015-09-17T23:33:07.000Z</published>
    <updated>2019-07-03T23:28:43.818Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/udisk.jpg" alt="U 盘"><br>在大的社会化协作中，我们应该勇敢做u盘人生，把自己这个智能操作系统，经过裁剪与修正，装进一个小的盒子，并通过类似的’USB’口共享出来，U盘人生的特点:  </p>
<ul>
<li><p>接入方便<br>标准化自己，能够很方便的接入公司或者TEAM工作小组</p>
</li>
<li><p>即插即用<br>内置高效的检索系统，与丰富的知识库，能够很方便的进入与退出项目和系统</p>
</li>
<li><p>快速协作<br>统一的工具，统一的语言，团队协作技巧，互补的知识与技能</p>
</li>
<li><p>方便携带<br>走到哪里，带到哪里，用到哪里。</p>
</li>
<li><p>按需付费<br>为自己的工作进行价值估算</p>
</li>
</ul>
<p>当然还有病毒防御功能，能够过滤到不好的，吸收好的东西。我的朋友准备好了吗？让我们一起2B，一起做个小小的U盘!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://7xlp7m.com1.z0.glb.clouddn.com/udisk.jpg&quot; alt=&quot;U 盘&quot;&gt;&lt;br&gt;在大的社会化协作中，我们应该勇敢做u盘人生，把自己这个智能操作系统，经过裁剪与修正，装进一个小的盒子，并通过类似的’USB’口共
    
    </summary>
    
      <category term="人生" scheme="http://www.haibin.me/categories/%E4%BA%BA%E7%94%9F/"/>
    
      <category term="感悟" scheme="http://www.haibin.me/categories/%E4%BA%BA%E7%94%9F/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="http://www.haibin.me/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="人生" scheme="http://www.haibin.me/tags/%E4%BA%BA%E7%94%9F/"/>
    
  </entry>
  
  <entry>
    <title>[晨写于20150917]</title>
    <link href="http://www.haibin.me/2015/09/17/%E6%99%A8%E5%86%99%E4%BA%8E20150917/"/>
    <id>http://www.haibin.me/2015/09/17/晨写于20150917/</id>
    <published>2015-09-16T23:22:32.000Z</published>
    <updated>2019-07-03T23:28:43.817Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img12.360buyimg.com/n0/jfs/t1417/333/1184132989/129633/2ec4b74e/55c07133Nb42cb74a.jpg" alt="增长黑客"><br>最近正在阅读大神<a href="http://www.fanbing.net" target="_blank" rel="noopener">范冰</a>的力作，<a href="http://www.duokan.com/book/97382" target="_blank" rel="noopener">增长黑客</a>,这本书由多位大神联合作序，看起来牛逼闪闪的样子，不过按照我们的话说，并无卵，你对该书感兴趣，可以直接忽略序的部分，直接跳至目录，寻找你感兴趣的章节进行阅读。<br>我也是刚开始阅读这本书，不过从目录看，虽然都是讲解的现在比较成功的创业公司，在公司初期的时候。  </p>
<ul>
<li>如何创造的产品</li>
<li>如何增长用户  </li>
<li>如何获取收入</li>
<li>如何有效传播产品   </li>
</ul>
<p>对于走在创业路上的初创型公司，有比较大的帮助的。后面我会与大家分享其中的观点。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img12.360buyimg.com/n0/jfs/t1417/333/1184132989/129633/2ec4b74e/55c07133Nb42cb74a.jpg&quot; alt=&quot;增长黑客&quot;&gt;&lt;br&gt;最近正在阅读大神&lt;a href=&quot;h
    
    </summary>
    
      <category term="阅读" scheme="http://www.haibin.me/categories/%E9%98%85%E8%AF%BB/"/>
    
      <category term="生活" scheme="http://www.haibin.me/categories/%E9%98%85%E8%AF%BB/life/"/>
    
    
      <category term="生活" scheme="http://www.haibin.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="阅读" scheme="http://www.haibin.me/tags/%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>[晨写于20150916]</title>
    <link href="http://www.haibin.me/2015/09/16/%E6%99%A8%E5%86%99%E4%BA%8E20150916-1/"/>
    <id>http://www.haibin.me/2015/09/16/晨写于20150916-1/</id>
    <published>2015-09-15T23:49:59.000Z</published>
    <updated>2019-07-03T23:28:43.817Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://s-media-cache-ak0.pinimg.com/474x/49/13/89/491389feb719839fa38612999a5559df.jpg" alt="加班">  </p>
<p>为什么加班的总是我？<br>我总结了一下，主要有以下几个方面:  </p>
<ul>
<li><p>讨论的问题的时间过长了<br>这会花掉我三分之一的事情来应对各种各样的讨论，没有目的，来的也很突然。如果我能够有效的解决这个问题，那么我的可支配的时间就会多一些  </p>
</li>
<li><p>阅读电子邮件<br>这个还不是很严重，只是没有专门花时间统一处理。</p>
</li>
<li><p>做一些不必要的事情<br>这个也会花掉我比较多的时间， 有一些事情其实可以找人帮助，或者不做也行  </p>
</li>
</ul>
<p>希望今天对上面的问题做些改进，使自己的时间更合理，做的重要的事情更多，最终消灭[加班]。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://s-media-cache-ak0.pinimg.com/474x/49/13/89/491389feb719839fa38612999a5559df.jpg&quot; alt=&quot;加班&quot;&gt;  &lt;/p&gt;
&lt;p&gt;为什么加班的总是我？&lt;br&gt;我总结了一
    
    </summary>
    
      <category term="生活" scheme="http://www.haibin.me/categories/life/"/>
    
      <category term="感悟" scheme="http://www.haibin.me/categories/life/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="http://www.haibin.me/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="生活" scheme="http://www.haibin.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>[晨写于20150915]</title>
    <link href="http://www.haibin.me/2015/09/15/%E6%99%A8%E5%86%99%E4%BA%8E20150915/"/>
    <id>http://www.haibin.me/2015/09/15/晨写于20150915/</id>
    <published>2015-09-14T23:26:51.000Z</published>
    <updated>2019-07-03T23:28:43.816Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚逼迫自己早早的睡了，开始虽然有些痛苦，习惯是慢慢养成的一个过程<br>每天想做的事情太多太多了，而时间呢感觉太少，每天忙忙碌碌，却不知道自己的事情都花在了哪些地方.<br>想想如果有一款软件能够记录自己的时间轨迹，帮忙规划自己的时间，该软件具有以下特点:  </p>
<ul>
<li>通过情景感知，可以连续记录我每个时间段都再干些什么?  </li>
<li>实用的任务四象限管理，四象限包括: 紧急且重要，紧急不重要，不紧急重要，不紧急不重要  </li>
<li>每天列出你必须做的五个最重要的事情，并在设置时间点做提醒  </li>
<li>回忆每天未记录的时间间隔，帮助提供灰色时间段的利用率  </li>
<li>可以通过二维码的形式订阅任务  </li>
<li>相关任务列表可以和日历进行关联  </li>
<li>并可对相关的任务做排序与调整  </li>
<li>原来任务的所需要的时间与改进工作方法所能够节省的工作时间  </li>
<li>时间利用与任务处理的相关统计  </li>
</ul>
<p>有了这些工具，是否你的时间就多了呢？也不是，但是有了这些工具，就可能改进工作效率，提高自己的时间利用率，让你可以节省一些时间，但是关键点还是自己，自己有没有改变的勇气.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨晚逼迫自己早早的睡了，开始虽然有些痛苦，习惯是慢慢养成的一个过程&lt;br&gt;每天想做的事情太多太多了，而时间呢感觉太少，每天忙忙碌碌，却不知道自己的事情都花在了哪些地方.&lt;br&gt;想想如果有一款软件能够记录自己的时间轨迹，帮忙规划自己的时间，该软件具有以下特点:  &lt;/p&gt;
&lt;
    
    </summary>
    
      <category term="生活" scheme="http://www.haibin.me/categories/life/"/>
    
      <category term="感悟" scheme="http://www.haibin.me/categories/life/%E6%84%9F%E6%82%9F/"/>
    
    
      <category term="感悟" scheme="http://www.haibin.me/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="生活" scheme="http://www.haibin.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="软件" scheme="http://www.haibin.me/tags/%E8%BD%AF%E4%BB%B6/"/>
    
      <category term="想法" scheme="http://www.haibin.me/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>[晨写于20150914]</title>
    <link href="http://www.haibin.me/2015/09/14/%E6%99%A8%E5%86%99%E4%B8%8E20150914/"/>
    <id>http://www.haibin.me/2015/09/14/晨写与20150914/</id>
    <published>2015-09-13T23:37:05.000Z</published>
    <updated>2019-07-03T23:28:43.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><p>上周很难得的休息了两天，如果每周都能够这样，那就太好了，在家休息一下，顺便给自己充电，学习，提升自己。<br>这周有是忙碌的一周，本体编辑器的第二次迭代，进入了一个关键的开发阶段，所以我把自己的时间分成了三种类型  </p>
<ul>
<li>自我日<br><strong><em>自我日</em></strong>，用于给自己补充能量,提升自己的智力，维护自身的健康，优质的家庭时间 ,自我日是最最重要的日子。  </li>
</ul>
<ul>
<li>关键日<br><strong><em>关键日</em></strong>，在这些日子，你需要把你的工作聚焦于五个最关键的活动<br>1) 创业者，你要聚焦于你能够给你带来最大收入的活动；<br>2) 设计师，你要聚焦于满足客户需求的工作<br>如果你不确定你的关键日最重要的活动是设呢，你可以问你的老板，如果你是老板，你可以问下属，你没有下午，那么你就问问你的客户。  </li>
</ul>
<ul>
<li>事务日<br><strong><em>事务日</em></strong> ，处理其他事物的日子，会朋友，整理办公室，跨部门协商，沟通，阅读电子邮件，购物，处理干扰等 …</li>
</ul>
<p>我把一周的时间做了这样的划分:<br>星期一： 事务日<br>星期二： 关键日<br>星期三： 关键日<br>星期四： 关键日<br>星期五： 事物日<br>星期六： 自我日<br>星期日： 自我日  </p>
<p>可以通过自己的情况做动态调整.  </p>
<p>这周要达成的目标  </p>
<ul>
<li>完成本体编辑器第二次迭代主体功能的开发  </li>
<li>阅读书籍 <a href="http://item.jd.com/11732259.html" target="_blank" rel="noopener">《增长黑客》</a></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.duokan.com/book/41036" target="_blank" rel="noopener">超级时间整理术</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Content&quot;&gt;&lt;a href=&quot;#Content&quot; class=&quot;headerlink&quot; title=&quot;Content&quot;&gt;&lt;/a&gt;Content&lt;/h2&gt;&lt;p&gt;上周很难得的休息了两天，如果每周都能够这样，那就太好了，在家休息一下，顺便给自己充电，学习，提升自己
    
    </summary>
    
      <category term="感悟" scheme="http://www.haibin.me/categories/%E6%84%9F%E6%82%9F/"/>
    
      <category term="生活" scheme="http://www.haibin.me/categories/%E6%84%9F%E6%82%9F/life/"/>
    
    
      <category term="感悟" scheme="http://www.haibin.me/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="生活" scheme="http://www.haibin.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>[晨写]</title>
    <link href="http://www.haibin.me/2015/09/13/%E6%99%A8%E5%86%99/"/>
    <id>http://www.haibin.me/2015/09/13/晨写/</id>
    <published>2015-09-12T23:00:00.000Z</published>
    <updated>2019-07-03T23:28:43.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><p>现在想写一些东西呢？试试早上花半个小时写写看吧，希望自己能够坚持！！！</p>
<h2 id="Content"><a href="#Content" class="headerlink" title="Content"></a>Content</h2><p>今天是周末，由于昨天晚上睡的比较晚，所以早上起的比较的晚，我发觉现在我已近习惯晚睡了，我发觉这样很不好，从今天开始，还是应该早睡，早起。这样对身体也比较的好。生活尽量规则些<br>今天计划为自己充电  </p>
<ul>
<li>完成《超级时间整理术》的阅读，为我的下个产品积累理论知识  </li>
<li>开始计划学习<a href="http://swiftlang.org" target="_blank" rel="noopener">swift</a>  </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Feature&quot;&gt;&lt;a href=&quot;#Feature&quot; class=&quot;headerlink&quot; title=&quot;Feature&quot;&gt;&lt;/a&gt;Feature&lt;/h2&gt;&lt;p&gt;现在想写一些东西呢？试试早上花半个小时写写看吧，希望自己能够坚持！！！&lt;/p&gt;
&lt;h2 id=&quot;Co
    
    </summary>
    
    
      <category term="感悟" scheme="http://www.haibin.me/tags/%E6%84%9F%E6%82%9F/"/>
    
  </entry>
  
  <entry>
    <title>startup</title>
    <link href="http://www.haibin.me/2015/09/09/startup/"/>
    <id>http://www.haibin.me/2015/09/09/startup/</id>
    <published>2015-09-09T15:35:18.000Z</published>
    <updated>2019-07-03T23:28:43.812Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Feature"><a href="#Feature" class="headerlink" title="Feature"></a>Feature</h2><ul>
<li>Github新建博客项目  </li>
<li>VPS安装Docker  </li>
<li>启动<a href="https://hub.docker.com/r/cloudcube/hexo/" target="_blank" rel="noopener">Hexo 镜像</a></li>
<li>博客配置  </li>
</ul>
<h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>在30分钟之内搭建好你的博客系统 <a href="http://hexo.io" target="_blank" rel="noopener">Hexo</a><br>现在网上有好多的文章，说的是如何使用github来构建hexo博客系统，github有一个致命的弱点就是在国内访问太恼火了，想想如果自己能够把写的文档托管在<a href="http://github.com" target="_blank" rel="noopener">Github</a>或者<a href="http://www.oschina.net" target="_blank" rel="noopener">oschina</a>,<a href="http://hexo.io" target="_blank" rel="noopener">Hexo</a>部署在vps上，当有新的文章推送到代码管理平台，然后自动更新到<a href="http://hexo.io" target="_blank" rel="noopener">Hexo</a> Server 那多好啊？<br>于是作了个计划，就开始构建自己的Hexo博客系统<br><a href="http://naotu.baidu.com/file/7235a00854a4983dd5bf4d1daf590ab4?token=00d7ba69e5749502" target="_blank" rel="noopener">博客构建计划</a>  </p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="购买域名"><a href="#购买域名" class="headerlink" title="购买域名"></a>购买域名</h3><p>现在购买域名选择比较的多，你可以有几种选择   </p>
<ul>
<li><p><a href="http://www.godaddy.com" target="_blank" rel="noopener">godaddy</a>  </p>
</li>
<li><p><a href="http://www.dnspod.cn" target="_blank" rel="noopener">dnspod</a>  </p>
</li>
</ul>
<ul>
<li><a href="http://www.net.cn" target="_blank" rel="noopener">万网</a>  </li>
</ul>
<p>以上的这三家都支持支付宝付款，还是比较的方便,推荐在godaddy购买.    </p>
<h3 id="购买VPS"><a href="#购买VPS" class="headerlink" title="购买VPS"></a>购买VPS</h3><p>购买vps,可以在以下几个地方购买  </p>
<ul>
<li><p><a href="http://www.linode.com" target="_blank" rel="noopener">linode</a><br>这里需要信用卡，所以感觉不是很方便，而且这里有个坑，购买后要给linode客户提交一个工单，并告知取消智能托管服务，不然的话会持续扣你的钱  </p>
</li>
<li><p><a href="https://www.digitalocean.com/?refcode=e211668f3c86" target="_blank" rel="noopener">digitalocean</a><br>这个是我目前使用的vps，主要有两个作用<br>1) 搭建shadowsocks,翻墙使用<br>2) 搭建静态博客<a href="http://www.haibin.me">haibin.me</a>  </p>
</li>
</ul>
<p>国内的就需要备案了，如果你要获取更好的访问速度的话，那么可以选用国内的主机  </p>
<ul>
<li><p><a href="http://www.aliyun.com" target="_blank" rel="noopener">aliyun</a><br>访问速度还可以，就是安装docker的比较的繁琐  </p>
</li>
<li><p><a href="http://www.ustack.com" target="_blank" rel="noopener">ustack</a><br>这里基础环境比较的好的，不用安装docker，可以直接使用<a href="http://www.coreos.com" target="_blank" rel="noopener">coreos</a>，价格还算可以,不过这里绑定的域名也是需要备案的！  </p>
</li>
</ul>
<h3 id="本地安装nodejs"><a href="#本地安装nodejs" class="headerlink" title="本地安装nodejs"></a>本地安装nodejs</h3><p>具体的安装方法，可以参考<a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a>  </p>
<h2 id="新建博客项目"><a href="#新建博客项目" class="headerlink" title="新建博客项目"></a>新建博客项目</h2><ul>
<li>访问<a href="http://github.com" target="_blank" rel="noopener">github</a>,注册github账号</li>
<li>创建博客的版本库    </li>
</ul>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/创建版本库.png" alt="创建版本库"></p>
<ul>
<li>本地新建博客项目  <ul>
<li>安装<a href="http://hexo.io" target="_blank" rel="noopener">Hexo</a>  </li>
</ul>
</li>
</ul>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-cli -g  </span><br><span class="line">hexo init <span class="keyword">blog </span> </span><br><span class="line">cd <span class="keyword">blog </span> </span><br><span class="line">npm <span class="keyword">install</span></span><br><span class="line"><span class="keyword">hexo </span>server</span><br></pre></td></tr></table></figure>
<p>你可以访问<br><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a><br>来确定是否安装成功  </p>
<ul>
<li>将新建的博客项目同步到github  </li>
</ul>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="keyword">blog</span></span><br><span class="line"><span class="keyword">git </span>init</span><br><span class="line">git <span class="keyword">add </span>.</span><br><span class="line">git commit -m <span class="string">"init project"</span></span><br><span class="line">git remote <span class="keyword">add </span><span class="keyword">origin </span><span class="string">"git@github.com:haibinpark/hexo-blog.git"</span></span><br><span class="line">git push -u <span class="keyword">origin </span>master</span><br></pre></td></tr></table></figure>
<ul>
<li>设置github hexo-blog项目参数  </li>
</ul>
<p>1) 设置自动发布参数  </p>
<image src="http://7xlp7m.com1.z0.glb.clouddn.com/设置自动发布参数.png">  

<h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><ul>
<li>登录<a href="https://www.digitalocean.com/?refcode=e211668f3c86" target="_blank" rel="noopener">digitalocean</a>.</li>
<li><p>安装<a href="http://www.docker.io" target="_blank" rel="noopener">Docker</a>  </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http<span class="variable">s:</span>//<span class="built_in">get</span>.docker.<span class="keyword">com</span>/ | <span class="keyword">sh</span>  </span><br><span class="line">$ docker --<span class="keyword">version</span>  </span><br><span class="line">Docker <span class="keyword">version</span> <span class="number">1.8</span>.<span class="number">1</span>,build d12ea79</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="启动hexo"><a href="#启动hexo" class="headerlink" title="启动hexo"></a>启动hexo</h2><pre><code>docker run \
    --name my_blog -d \
    -p 80:4000 \
    -p 14000:14000 \
    -e GITHUB_REMOTE_ADDR=&quot;git@github.com:haibinpark/hexo-blog.git&quot; \
    -e AUTO_DEPLOY_WEB_HOOK_PORT=&quot;14000&quot; \
    -e AUTO_DEPLOY_WEB_HOOK_HASHKEY=&quot;testautopub&quot; \
    cloudcube/hexo
</code></pre><p><strong><em>参数说明</em></strong>  </p>
<ul>
<li>– name 博客名称  </li>
<li>-d 后台启动  </li>
<li>-p 80:4000 对外端口是80,内部端口为4000  </li>
<li>-p 14000:14000 对外端口是14000,对内端口为14000  </li>
<li>-e GITHUB_REMOTE_ADDR github上你的新建的博客地址  </li>
<li>-e AUTO_DEPLOY_WEB_HOOK_PORT  自动发布程序监听的端口,默认为14000  </li>
<li>-e AUTO_DEPLOY_WEB_HOOK_HASHKEY  自己设置在github新建博客项目设置的hashkey,这个的保密哦！</li>
<li><a href="https://hub.docker.com/r/cloudcube/hexo/" target="_blank" rel="noopener">cloudcube/hexo</a><a href="http://www.docker.io" target="_blank" rel="noopener">Docker</a>镜像地址  </li>
</ul>
<p>查看Docker日志,记录id_rsa.pub的值，后面自动获取代码需要设置该链接地址    </p>
<pre><code>$docker logs my_blog  

+ cat /root/.ssh/id_rsa.pub
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCeiJaoDbIQ0j4R3BnO7pos3B9ccnT1b70yJjGGfGRPr4CUmhRSBmqn4d829wxI1vff3m5XpJKHiHr
b80150IEtuDikvasD5pU8LwWlb+3xhSDrMD+vGOPlfxdNYQxQx8MDi5FTAuLnuiviVFNTGaqM+3wmKAY/H7VzftgrgoyMZzs2RVtIeHBVl8ALWn8Ocg
6m8kW7RFRxkhonFU0ST+UCHoJ1IwPcAA4Q+96aCARaYgxAg4ta321aHE02PvSkMin34FdntW5uoQWAhB2zHYuHq32DfIs4ZR/HvpwC18xXuvo34JwX1
o+xyiS+bKHws9XYO0Bvo//fdsa12321fd12dddafds root@3402a89049d3
+ echo Please copy above key to github deploy key,then continue
Please copy above key to github deploy key,then continue
+ sleep 180s
</code></pre><h2 id="设置发布key"><a href="#设置发布key" class="headerlink" title="设置发布key"></a>设置发布key</h2><p>将上面获取到的key设置到项目的部署key   </p>
<p><img src="http://7xlp7m.com1.z0.glb.clouddn.com/设置部署key.png" alt="设置部署key"></p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>通过浏览器，访问你的博客域名地址即可<br><a href="http://www.haibin.me">http://www.haibin.me</a></p>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="http://blog.jamespan.me/2015/04/17/hexo-in-the-docker/" target="_blank" rel="noopener">http://blog.jamespan.me/2015/04/17/hexo-in-the-docker/</a><br><a href="https://docs.docker.com/installation/ubuntulinux/" target="_blank" rel="noopener">https://docs.docker.com/installation/ubuntulinux/</a>  </p>
</image>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Feature&quot;&gt;&lt;a href=&quot;#Feature&quot; class=&quot;headerlink&quot; title=&quot;Feature&quot;&gt;&lt;/a&gt;Feature&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Github新建博客项目  &lt;/li&gt;
&lt;li&gt;VPS安装Docker  &lt;/li&gt;
&lt;
    
    </summary>
    
    
      <category term="startup" scheme="http://www.haibin.me/tags/startup/"/>
    
      <category term="Docker" scheme="http://www.haibin.me/tags/Docker/"/>
    
      <category term="Hexo" scheme="http://www.haibin.me/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>开发在OSX</title>
    <link href="http://www.haibin.me/2015/02/07/2015-02-07-code-in-osx/"/>
    <id>http://www.haibin.me/2015/02/07/2015-02-07-code-in-osx/</id>
    <published>2015-02-07T04:48:02.000Z</published>
    <updated>2019-07-03T23:28:43.807Z</updated>
    
    <content type="html"><![CDATA[<p><img style="float: right" height="200" width="180" src="http://triz.qiniudn.com/xcode_tool.jpg"><br>最近公司需要开发iOS的应用，本来是做Android开发的，根据需要，再加上我也比较喜欢折腾，所以就接下了这个艰巨的任务…<br>在开发之前，其实之前也看过object-c的语法，并且写了一个demo（其实也就是hello world）给人的感觉和Java还是有比较大的差别。但当时也没这方面的开发需要，所以也就废弃了。吐槽:主要当时没有苹果开发工具，自己在虚拟机中进行折腾。<br>新任务接下来后呢，需要学习的东西还很多，因为什么都不知道吗？所以在接下来这个任务后，首先的明确需求。<br>由于Android客户端也在开发中，所以服务端不用我们操心，接口那些基本都是好的，可用的，我们只需要开发iOS客户端即可，开发相关已经确定；  </p>
<ol>
<li>人:2个人，都是从Android转过来的。  </li>
<li>时间: 2014年12月中旬~2015年2月地(春节前)  </li>
<li>任务: 系统核心功能:<br>3.1 基础信息展示<br>3.2 用户联合登录<br>3.3 集成百度地图  </li>
<li>目标:<br>整个系统测试没有问题，并且通过苹果应用商店审核<br>没有做过，所以心里没底，但是凭借对Android的开发过程的熟悉，也就答应了下来.<br>答应的时候很爽快，接下来就是苦逼的加班:   </li>
<li>要开发正式的产品，装备也不能太山寨了，在怎么着，也得买台苹果电脑吧(主要原因是虚拟机TTM卡了，8G的内存，完全跑不动)，mac book pro也就是算了，应为是创业公司，能省就省了吧，买了两台mac mini将就用着。  </li>
<li>买了一本电子书,<a href="http://book.douban.com/subject/24846574/" target="_blank" rel="noopener">《iOS开发指南》</a>,这本书非常适合入门使用，看完了它，你基本了解整个软件开发的流程.  </li>
<li>开发工具也就是苹果的xcode，版本控制用的是svn，由于xcode对svn支持不是很友好，所以如果有条件就使用git吧，我平时业余的项目就是用git，如果是私有项目就采用<a href="http://git.oschina.net" target="_blank" rel="noopener">git.oschina.net</a>,公开的项目可以采用<a href="http://www.github.com" target="_blank" rel="noopener">github</a>. 如果必须的使用svn的话，那么建议使用<a href="http://www.smartsvn.com" target="_blank" rel="noopener">smarsvn</a>,当然此软件是收费的.<br>工具准备好了，那么接下来就开始干活了，两个人各有分工，通过<a href="http://book.douban.com/subject/24846574/" target="_blank" rel="noopener">《iOS开发指南》</a>知道，整个项目采用了分层开发.项目分了三层:Persistence,Business,Presentation。接下来才知道，当对整个开发不熟悉的话，这样分层是很不合理的，这样增加了项目的调试难度。当然这样对开发了iPhone，在开发iPad应用，无意会节省不少的时间成本，应为PersistenceLayer，BusinessLayer根本就用不着改变。<br>整个项目开发中，一共有三个点:  </li>
<li>网络通讯，采用<a href="http://allseeing-i.com/ASIHTTPRequest/" target="_blank" rel="noopener">ASIHTTPRequest</a>  </li>
<li>本地存储，结构化数据，采用CoreData，配置文件保存在plist文件中,归档苹果提供了Archiver。  </li>
<li>多线程，异步  </li>
<li>基础控件的使用  </li>
<li>控件的生命周期  </li>
<li>布局文件storyboard,xib   </li>
<li>代码自动布局的实现，这块相对来说比较的麻烦.特别是在一个view controller中有多个高度不定的控件的时候.<br>在整个开发的过程中. 最好采用分层开发,这样的话可以加快开发进度,如果只是项目分开了，而实际开发没有实际分开的话。那么整个开发过程是低效并且充满折磨的过程.<br>在2月6号左右，我们就完成了开发，提交到了应用商店.由于苹果审核还没下来，测试版地址:<br><a href="http://fir.im/rvqc" target="_blank" rel="noopener">行动派-轻松自驾.旅游</a><br>新的应用审核通过了,应用appstore下载地址:<br><a href="https://itunes.apple.com/us/app/xing-dong-pai-qing-song-zi/id964439381?l=zh&amp;ls=1&amp;mt=8" target="_blank" rel="noopener">行动派-轻松自驾.旅游</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img style=&quot;float: right&quot; height=&quot;200&quot; width=&quot;180&quot; src=&quot;http://triz.qiniudn.com/xcode_tool.jpg&quot;&gt;&lt;br&gt;最近公司需要开发iOS的应用，本来是做Android开发的，根据需要，再加
    
    </summary>
    
      <category term="OSX iOSDevTips" scheme="http://www.haibin.me/categories/OSX-iOSDevTips/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS 百度SDK离线地图下载</title>
    <link href="http://www.haibin.me/2015/01/22/2015-01-22-baidu-api-lixian-map-download/"/>
    <id>http://www.haibin.me/2015/01/22/2015-01-22-baidu-api-lixian-map-download/</id>
    <published>2015-01-22T13:51:13.000Z</published>
    <updated>2019-07-03T23:28:43.807Z</updated>
    
    <content type="html"><![CDATA[<p>在进行集成百度iOS sdk的时候，进行离线地图下载的时候，会出现错误:  </p>
<p>availableDiskSpace方法找不到，但是如何解决呢，需要对UIDevice进行扩展:<br>具体的代码片段:<br>“UIDevice+Manager.h”  </p>
<figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  UIDevice+Manager.h</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">&lt;mach/mach.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIDevice</span> (<span class="title">DiskManager</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)availableDiskSpace;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure>
<p>“UIDevice+Manager.m”<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//  UIDevice+DiskManager.m</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#import <span class="meta-string">"UIDevice+Manager.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIDevice</span> (<span class="title">DiskManager</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">BOOL</span>)availableDiskSpace&#123;</span><br><span class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span> availableMemory] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">TRUE</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">FALSE</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">double</span>)availableMemory&#123;</span><br><span class="line">    vm_statistics_data_t vmStats;</span><br><span class="line">    mach_msg_type_number_t infoCount = HOST_VM_INFO_COUNT;</span><br><span class="line">    kern_return_t kernReturn = host_statistics(mach_host_self(), HOST_VM_INFO, (host_info_t)&amp;vmStats, &amp;infoCount);</span><br><span class="line">    <span class="keyword">if</span> (kernReturn != KERN_SUCCESS ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">NSNotFound</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> availableMem = ((vm_page_size* vmStats.free_count) / <span class="number">1024.0</span>)/<span class="number">1024.0</span>;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"可使用内存大小为: %f"</span>,availableMem);</span><br><span class="line">    <span class="keyword">return</span> availableMem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在进行集成百度iOS sdk的时候，进行离线地图下载的时候，会出现错误:  &lt;/p&gt;
&lt;p&gt;availableDiskSpace方法找不到，但是如何解决呢，需要对UIDevice进行扩展:&lt;br&gt;具体的代码片段:&lt;br&gt;“UIDevice+Manager.h”  &lt;/p&gt;

    
    </summary>
    
      <category term="iOSDevTips" scheme="http://www.haibin.me/categories/iOSDevTips/"/>
    
    
  </entry>
  
  <entry>
    <title>优秀的产品经理是怎样炼成的</title>
    <link href="http://www.haibin.me/2014/07/17/2014-07-17-how-to-grow-up-a-wonderfull-pm/"/>
    <id>http://www.haibin.me/2014/07/17/2014-07-17-how-to-grow-up-a-wonderfull-pm/</id>
    <published>2014-07-17T14:57:57.000Z</published>
    <updated>2019-07-03T23:28:43.806Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://triz.qiniudn.com/pm_1.jpg">  </p>
<p>要想成为产品经理，换句话说你要做成产品经理这个“产品”，至少让它可用，可能需要满足以下几个方面的需求：  </p>
<p><strong> 个人认知方面 </strong> </p>
<p>个人认知也就是你用什么方法去获取和搜集最新的产品信息、用户需求，你是否有一双细致入微的眼睛或者广阔的思维，当然如果你现在没有但你至少应该有这方面的潜力，实在不行就不断的锻炼自己。那么其他人怎么提高自己对产品的认知水平呢？有以下几个方法：<br><a id="more"></a></p>
<ul>
<li><p>关注互联网社区，多结交这方面的朋友。不管这种朋友对产品的理解是深还是浅，你总是可以从中学到点什么。  </p>
</li>
<li><p>尝试不同的产品，像极客一样追逐新鲜的东西。微博等东西的出现加快了信息传播的速度，不但让你可以迅速了解当前的热点，同时也让你更快的了解到最新的产品资讯。  </p>
</li>
<li><p>吸取别人的经验和教训。一个产品总有被骂的一面，搜集整理这些点，成为你的一个惊醒库，在你有能力设计产品的时候，你被骂的机会就会少。  </p>
</li>
<li><p>提升沟通能力。做产品总要说服很多人，有时候是老板，有时候是研发，有时候是市场人员，有时候甚至是你的女朋友，你总要掌握一些技巧，这是在不断的碰壁过程中提升的。  </p>
</li>
<li><p>参加社区的活动。参加类似 PMCamp 产品经理大会，在大会里重要的不是认识多少人，也不是学习到多少所为的干货，而是能够促进你的思考，听别人分享过程中让自己的脑细胞产生裂变。<br>个人思考方面</p>
</li>
</ul>
<p>信息爆炸的观念很早就有了，人们也做了很多努力去帮助别人过滤信息，这其中就有 google 的成功，还有 digg 的努力，后来又出现了社交网站的熟人传播模式（facebook 的 like），以及现在的问答网站，这种帮助从由一个组织提供转变到众包提供，虽然信息的准确性提高了，但是信息量依然是巨大的，在这种情况下个人的过滤能力（也就是思考能力）显得有为总要，细化到产品层面就是需要我们：  </p>
<ul>
<li><p>经常系统地总结和思考日常生活中所遇到的产品的类似功能点。当你使用的产品多了，你就能看到很多产品功能，有些产品功能其实是类似的，但是改变了展示形态，这就需要你善于观察和总结，能够把他们归为一类。b. 多理解和思考为什么产品需要某个功能，什么场景下需要这个功能。很多产品功能可能在当时情况下你并不觉得很重要，甚至你都很难发现它，但是当你遇到的时候又会觉得很让你惊讶，普通人也许惊讶一下就过了，但是你可能需要思考的更多。  </p>
</li>
<li><p>探索失败。整个互联网行业中产品太多，失败的产品总是占大多数，不要沉迷在成功的产品中，失败的产品其实更是一部经验教科书。  </p>
</li>
</ul>
<p><strong> 个人实践方面 </strong> </p>
<p>思考而不实践就是空谈，就是空中楼阁，也许你现在还没有从事互联网产品行业，但是你有做一个自己产品的机会，你就一定要把自己所思考的结论运用到实际当中去，因为只有这样你才会知道自己的想法是否正确或者是否幼稚，从而剔除掉那些对产品有害的东西保留住在产品路上对你有帮助的东西。那么怎么做呢:  </p>
<ul>
<li><p>进入一家这方面的公司，实际参与到一件产品的设计工作中或者一个项目的实施过程中。如果你的运气不错，这是最好的实践方法，就算你只是产品部一个打杂的，至少之前的产品经理会给你些写文档的机会，运用上去吧，你会收获很大。b. 建立一个博客或者个人网站，并当成一个个人产品，然后用产品的思维去运营和设计。如果你的运气稍差，你可以选择为自己建立一个独立的博客或者个人网站，也许很多人认为现在都微博了还博客干吗，但我想说的是“现在也有快餐，但是我们还是会经常回家做饭。”在这个过程中你不但可以运用你的理论，你还可以学到设计、信息规划、技术、数据分析、运营等方面的东西，也许一不小心你就被创业了。  </p>
</li>
<li><p>做一份接近用户的工作，比如市场、运营、编辑或者客服。产品人大部分都很信奉 UCD（以用户为中心的设计）思想，实际上所有的产品原型都来源于用户（当然你自己也是用户），既然不能马上走入产品岗位，那就先去亲近用户，避免在做产品的时候出现闭门造车的情况。  </p>
</li>
</ul>
<p><strong> 个人沉淀方面 </strong></p>
<p>思考过了，实践过了，但这些依然是浮云。思考了还在自己的脑袋里，实践了也只是形成了初步的成果，如果不把它们记下来并分享给其他朋友是没有意义的，就好像建房子，你只是把地基搭好了却不在上面添砖加瓦，然后又去建新的地基，虽然你很忙，但却没有一栋成型的房子，而分享给朋友就是请他们来家里做客，感情就会深，交心就会多。  </p>
<ul>
<li><p>反思错误，并深深印在自己心里。自己思考的结论不免有错，遇到错误一笑了之的心态虽好，但是得不到什么，只有弄清楚自己为什么会错，是什么让自己判断出错，怎么避免不再出错，想清楚这些问题错才错的值得，而且你解决了一个问题，那么这一系列的问题都可以迎刃而解。  </p>
</li>
<li><p>将思考和实践过的东西写下来。好记性不如烂键盘，这是真理，以前只能写在本子上，现在可以敲进电脑里，有自己的网站就是方便，甚至存在云端，历史也洗不掉，把东西沉淀下来做好适当的分类，当你需要的时候你可以以最快的速度找到。也许你还没有产品方面的经验，但是你已经有了很多积累。  </p>
</li>
<li><p>懂得分享成果。把粮食存起来等天荒地老，虽然很浪漫，却一样很愚蠢，因为要么会坏，要么会被老鼠偷吃掉。分享给别人，让别人知道你在思考，提升你自己的影响力同时帮助别人成长，把快乐分享给别人你的快乐会加倍。<br>其实这四个方面是一个学习的过程，通过搜集、思考、验证、总结四步逐步提升产品意识和市场意识，缩短与产品经理的距离。另外除了这四个主要方面的需求需要满足，我个人认为产品经理还需要“懂点技术、懂点设计、懂点经济、懂点哲学、懂点心理学”，当然略懂即可。  </p>
</li>
</ul>
<blockquote>
<p>QQ 邮箱的产品经理说过一句话“如果你比销售人员内向，又比工程师外向，你就可以考虑产品经理这个职位”，我想说的是“只要你足够想，就可以！”，欢迎来到互联网产品的世界。  </p>
</blockquote>
<p><a href="http://news.html5tricks.com/how-good-productor-be.html" target="_blank" rel="noopener">原文连接</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://triz.qiniudn.com/pm_1.jpg&quot;&gt;  &lt;/p&gt;
&lt;p&gt;要想成为产品经理，换句话说你要做成产品经理这个“产品”，至少让它可用，可能需要满足以下几个方面的需求：  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 个人认知方面 &lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;个人认知也就是你用什么方法去获取和搜集最新的产品信息、用户需求，你是否有一双细致入微的眼睛或者广阔的思维，当然如果你现在没有但你至少应该有这方面的潜力，实在不行就不断的锻炼自己。那么其他人怎么提高自己对产品的认知水平呢？有以下几个方法：&lt;br&gt;
    
    </summary>
    
      <category term="产品" scheme="http://www.haibin.me/categories/%E4%BA%A7%E5%93%81/"/>
    
    
  </entry>
  
  <entry>
    <title>产品32字生死诀</title>
    <link href="http://www.haibin.me/2014/06/18/2014-06-18-chan-pin-32zi-sheng-si-jue/"/>
    <id>http://www.haibin.me/2014/06/18/2014-06-18-chan-pin-32zi-sheng-si-jue/</id>
    <published>2014-06-18T13:21:59.000Z</published>
    <updated>2019-07-03T23:28:43.806Z</updated>
    
    <content type="html"><![CDATA[<p>唐沐产品观点:  </p>
<blockquote>
<p>找到痛点，定义场景；体验做透，方案优雅；保持克制，体验闭环；小步快跑、快速迭代    </p>
</blockquote>
<p>全文连接<br><a href="http://news.pedaily.cn/201406/20140618367361.shtml#jtss-tsina" target="_blank" rel="noopener">小米唐沐：做产品32字生死诀 为极致去死磕</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;唐沐产品观点:  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;找到痛点，定义场景；体验做透，方案优雅；保持克制，体验闭环；小步快跑、快速迭代    &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;全文连接&lt;br&gt;&lt;a href=&quot;http://news.pedaily.cn/20
    
    </summary>
    
      <category term="产品" scheme="http://www.haibin.me/categories/%E4%BA%A7%E5%93%81/"/>
    
    
  </entry>
  
  <entry>
    <title>产品经理的必备书单</title>
    <link href="http://www.haibin.me/2014/05/29/2014-05-29-product-manager-books/"/>
    <id>http://www.haibin.me/2014/05/29/2014-05-29-product-manager-books/</id>
    <published>2014-05-29T15:15:47.000Z</published>
    <updated>2019-07-03T23:28:43.806Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本文主体部分根据《壹读》“失控的微信先生”与《商业周刊中文版》“张小龙的盗梦空间”整理。 </p>
</blockquote>
<ol>
<li><strong>&lt;&lt;失控&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/out_of_control.jpg"><br>凯文·凯利，一位在亚洲游荡了近10年的美国人，东方激发了他对于技术的思考，最终通往哲学的终极命题。在他笔下，失控，往往意味着不确定性，容易使人感到不安，但正是不确定性和不可控性，成就了创新的源泉与进化的动因。  <a id="more"></a>  </li>
<li><strong>&lt;&lt;科技想要什么&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/what_technology_wants.jpg"><br>凯文·凯利向我们介绍了一种全新的科技观。他认为，作为整体，科技不是由线路和金属构成的一团乱麻，而是有生命力的自然形成的系统，它的起源完全可以回溯到生命的初始时期。  </li>
<li><strong>&lt;&lt;乔布斯传&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/steven_jobs.jpg">  </li>
<li><strong>&lt;&lt;女人的起源&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/the_descent_of_woman.jpg"><br>以男性为中心的生物学家，则用人类起源于丛林并进化为以狩猎为生的肉食动物的学说，来证明女性无论在体力和智力上，都处于从属的地位。对此，《女人的起源》首次为女性在人类进化史中的平等地位据理力争。它开一代风气之先，力图解开人类，特别是女性的演化和起源之谜;而它提供的答案，则从女性的角度对人类的史前史做出了推测性的重构，极富革命性和破坏力。  </li>
<li><strong>&lt;&lt;黑客&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/hackers.jpg"><br>Steven Levy这部经典力作的25周年版从20世纪50年代早期跨越到80年代后期，追述了计算机革命中初期黑客的丰功伟绩，他们都是最聪明和最富有个性的精英。他们勇于承担风险，勇于挑战规则，并把世界推向了一个全新的发展方向。本书更新了一些著名黑客的最新资料，包括比尔·盖茨、马克·扎克伯格、理查德· 斯托曼和史蒂夫·沃兹尼亚克，并讲述了从早期计算机研究实验室到最初的家用计算机期间一些妙趣横生的故事。在Levy的笔下，他们都是聪明而勤奋的人，他们极富想象力，他们另辟蹊径，发现了计算机工程问题的巧妙解决方案。他们都有一个共同的价值观，那就是至今仍然长盛不衰的“黑客道德”。  </li>
<li><strong>&lt;&lt;异类&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/untliers.jpg"><br>在《异类》一书中，作家格拉德威尔对社会中那些成功人士进行的分析，让读者看到了一连串颇感意外的统计结果：英超联赛大部分球员都在9月至11月出生;比尔·盖茨和史蒂夫·乔布斯都出生在1955年;纽约很多著名律师事务所的开创者竟然都是犹太人后裔，并且他们的祖辈大多是在纽约的服装行业谋生。那些奇才异类，他们之所以神奇，得感谢机遇的眷顾。<br>不过，除了机遇之外，他们的成功还需要上辈人的文化熏陶。因此，从《异类》一书中，你能体会到机遇对成功是如此的重要。格拉德威尔为读者指出了成功之路的方向，但怎样把握这份机遇，每个人都需要仔细思考，毕竟，不同人拥有不同的机遇。  </li>
<li><strong>&lt;&lt;信息简史&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/the_information_a_history.jpg"><br>现如今，信息如洪流般淹没了我们，使我们深陷信息焦虑、信息过载、信息疲劳的困扰。但回顾历史，这并不是件新鲜事，人们也总是能想出应对手段。维基百科、Google便是我们的应对之一。无论对于信息的未来持何态度，有一点是确定无疑的，即我们人类是信息的造物。作为《混沌》、《费曼传》、《越来越快》、《牛顿传》等畅销书的作者，格雷克不仅在书中细致还原了历史细节，通俗解释了各种理论，还生动刻画了几位不为大众所知的人物：可编程计算机先驱、超越时代的查尔斯·巴贝奇，第一位程序员、诗人拜伦之女爱达·拜伦，计算机科学之父、天妒英才的阿兰·图灵，以及全书的主人公、信息论之父克劳德·香农。  </li>
<li><strong>&lt;&lt;数字乌托邦&gt;&gt;</strong><br><img src="http://triz.qiniudn.com/from_counterculture_to_cyberculture.jpg"><br>20世纪60年代早期，在美国大众眼中，计算机只是冷战中冰冷的机器，然而到了90年代互联网到来之时，计算机却呈现出一个截然不同的世界——它们模拟出了一个数字乌托邦般的协同体，而这正是曾经最反对冷战的嬉皮士们的共同愿景。本书正是探索这次非同寻常，且颇具讽刺意味的变革的第一本书。作者挖掘出那些在旧金山湾区的先驱者——斯图尔特·布兰德和他的“全球网络”鲜为人知的故事。1968年到1998年期间，通过《全球概览》、“全球电子链接(WELL)”和最终取得巨大成功的《连线》杂志，布兰德和他的伙伴们长期扮演着旧金山嬉皮士运动和新兴科技聚集区硅谷的中间人的角色。正由于他们富有远见的努力，反主流文化分子和科技人士一同重新定义了计算机的形象：计算机是解放自我的武器，计算机建筑了令人耳目一新的虚拟社区，计算机还让人们能更大胆地拓展社会的新疆界。  </li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文主体部分根据《壹读》“失控的微信先生”与《商业周刊中文版》“张小龙的盗梦空间”整理。 &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&amp;lt;&amp;lt;失控&amp;gt;&amp;gt;&lt;/strong&gt;&lt;br&gt;&lt;img src=&quot;http://triz.qiniudn.com/out_of_control.jpg&quot;&gt;&lt;br&gt;凯文·凯利，一位在亚洲游荡了近10年的美国人，东方激发了他对于技术的思考，最终通往哲学的终极命题。在他笔下，失控，往往意味着不确定性，容易使人感到不安，但正是不确定性和不可控性，成就了创新的源泉与进化的动因。
    
    </summary>
    
      <category term="产品" scheme="http://www.haibin.me/categories/%E4%BA%A7%E5%93%81/"/>
    
    
  </entry>
  
  <entry>
    <title>2014互联网女皇报告：中国成移动商务创新领袖</title>
    <link href="http://www.haibin.me/2014/05/29/2014-05-29-internet-2014-report/"/>
    <id>http://www.haibin.me/2014/05/29/2014-05-29-internet-2014-report/</id>
    <published>2014-05-29T14:36:01.000Z</published>
    <updated>2019-07-03T23:28:43.805Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://triz.qiniudn.com/Mary_Meeker.jpg" align="center"></p>
<blockquote>
<p>“女皇”<a href="http://en.wikipedia.org/wiki/Mary_Meeker" title="Marry Meeker" target="_blank" rel="noopener">玛丽·米克尔</a>昨日在CODE大会发布了2014年度互联网趋势报告，165页的PPT又向我们扔来。报告预测并分析了移动广告发展前景，教育，医疗等相关行业的重塑，传感器应用给行业重塑带来的机遇与潜力等。  </p>
</blockquote>
<p><a href="http://marketing.qiniudn.com/Internet_Trends_2014_vFINAL_-_05_28_14.pdf" title="2014互联网报告" target="_blank" rel="noopener">2014 互联网报告下载</a><br>2005~2013年互联网报告下载链接:<br><a href="http://triz.qiniudn.com/Internet_Trends_2013_vFINAL_-_05_29_13.pdf" target="_blank" rel="noopener">2013 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2012_vFINAL_-_05_30_09.pdf" target="_blank" rel="noopener">2012 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2011_vFINAL_-_10_19_01.pdf" target="_blank" rel="noopener">2011 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2010_vFINAL_-_04_12_01.pdf" target="_blank" rel="noopener">2010 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2009_vFINAL_-_10_20_18.pdf" target="_blank" rel="noopener">2009 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2008_vFINAL_-_11_05_01.pdf" target="_blank" rel="noopener">2008 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2006_vFINAL_-_05_14_21.pdf" target="_blank" rel="noopener">2007 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2006_vFINAL_-_05_14_21.pdf" target="_blank" rel="noopener">2006 互联网报告下载</a><br><a href="http://triz.qiniudn.com/Internet_Trends_2005_vFINAL_-_05_14_21.pdf" target="_blank" rel="noopener">2005 互联网报告下载</a><br>建议使用wifi  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://triz.qiniudn.com/Mary_Meeker.jpg&quot; align=&quot;center&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“女皇”&lt;a href=&quot;http://en.wikipedia.org/wiki/Mary_Mee
    
    </summary>
    
      <category term="互联网报告" scheme="http://www.haibin.me/categories/%E4%BA%92%E8%81%94%E7%BD%91%E6%8A%A5%E5%91%8A/"/>
    
    
  </entry>
  
  <entry>
    <title>美女谈产品</title>
    <link href="http://www.haibin.me/2014/05/16/2014-05-16-miss-x-product-view/"/>
    <id>http://www.haibin.me/2014/05/16/2014-05-16-miss-x-product-view/</id>
    <published>2014-05-16T14:41:02.000Z</published>
    <updated>2019-07-03T23:28:43.805Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://img.51netu.com/uploads/120727/8758_125308_2.jpg"><br>今天在<a href="http://www.36kr.com" target="_blank" rel="noopener">36kr</a>看到了一篇关于产品经理PM的文章,讲的是与程序猿RD的故事<br>总结起来，可以归纳为以下几点:<br>一个合格的产品经理需要具有:  </p>
<ol>
<li><strong>一定要有自己的想法</strong><br>PM 必须是产品的灵魂，无论老板决定闹哪样，你都要把这个决定翻译成大家能接受的理由，建立你自己的口碑和信任。和RD沟通最有效的方式是开诚布公，体恤RD的辛苦，并表现出和他们同甘共苦的决心.  <a id="more"></a>  </li>
<li><strong>感性，理性，逻辑统统都要</strong><br>一个好的PM，必须的有收放自如的情感，还的有理性的逻辑思维去支撑每一次灵感的乍现.<br>对于产品你可以问自己的三个问题  </li>
</ol>
<ul>
<li>这个功能是否服务于产品的主线?    </li>
<li>这个功能的技术实现成本有多大?  </li>
<li>这个功能的效果是否能被评估?  </li>
</ul>
<ol>
<li><strong>信任</strong><br>民间技术大神的建议，只能作为参考，不能够作为标准，如果你当真了的话，说明你的确很傻很天真。和RD真诚的交流，了解他们的技术水平与能力，这样的话你再也不会为RD的能力还是RD态度问题而苦恼.  </li>
<li><strong>多学、多看、多用</strong><br>优秀的产品经理，要眼观四路耳听八方，知识渊博，掌握行业内的各种动态，分析市场趋势,多看统计分析数据，多用牛逼应用.  </li>
<li><strong>积攒人脉</strong><br>多多参加一些社交活动，提升公司的暴光率，吸引优秀的开发者.  </li>
<li><strong>既要动口，又要动手</strong><br>无论是口述的需求还是撰写的文档，文字和原型图的呈现都要有逻辑，有条理，最好用写代码的思路来写产品文档.  </li>
<li><strong>我顶、顶…</strong>  </li>
</ol>
<ul>
<li>顶住来自老板的压力  </li>
<li>合理安排需求的优先级  </li>
</ul>
<p><strong>文章引用</strong><br><a href="http://www.36kr.com/p/212020.html" target="_blank" rel="noopener">如何不被程序员（RD）们嫌弃－－写给那些血气方刚的产品经理（PM）</a><br><a href="http://www.36kr.com/p/210943.html" target="_blank" rel="noopener">针对女性开发的互联网产品还敢再男性思维一点么——来自白富美女票们的哭与泪</a><br><a href="http://www.36kr.com/p/206312.html" target="_blank" rel="noopener">一个至今没做出靠谱好产品的产品经理是这样活着的</a><br><a href="http://www.36kr.com/p/207772.html" target="_blank" rel="noopener">一个初次创业的互联网P民是这样被投资人拒绝的——写于没有拿到任何投资意向书的某清冷夜晚</a>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://img.51netu.com/uploads/120727/8758_125308_2.jpg&quot;&gt;&lt;br&gt;今天在&lt;a href=&quot;http://www.36kr.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;36kr&lt;/a&gt;看到了一篇关于产品经理PM的文章,讲的是与程序猿RD的故事&lt;br&gt;总结起来，可以归纳为以下几点:&lt;br&gt;一个合格的产品经理需要具有:  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;一定要有自己的想法&lt;/strong&gt;&lt;br&gt;PM 必须是产品的灵魂，无论老板决定闹哪样，你都要把这个决定翻译成大家能接受的理由，建立你自己的口碑和信任。和RD沟通最有效的方式是开诚布公，体恤RD的辛苦，并表现出和他们同甘共苦的决心.
    
    </summary>
    
      <category term="产品" scheme="http://www.haibin.me/categories/%E4%BA%A7%E5%93%81/"/>
    
    
  </entry>
  
  <entry>
    <title>产品观点</title>
    <link href="http://www.haibin.me/2014/05/13/2014-05-13-product-tips/"/>
    <id>http://www.haibin.me/2014/05/13/2014-05-13-product-tips/</id>
    <published>2014-05-13T15:01:25.000Z</published>
    <updated>2019-07-03T23:28:43.805Z</updated>
    
    <content type="html"><![CDATA[<p>「创业就是一个在钱烧完以前不断试错的过程，试出来了就成功了，没试出来就准备下一次挑战。试错不是做一堆东西然后等它自生自灭，而是用最小的成本快速验证核心功能，发现不对立马关掉。方向不对拖越久对公司伤害越大，所以做好每6个月调整一次产品的准备，拥抱变化。我知道这很艰难，但必须如此。」</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;「创业就是一个在钱烧完以前不断试错的过程，试出来了就成功了，没试出来就准备下一次挑战。试错不是做一堆东西然后等它自生自灭，而是用最小的成本快速验证核心功能，发现不对立马关掉。方向不对拖越久对公司伤害越大，所以做好每6个月调整一次产品的准备，拥抱变化。我知道这很艰难，但必须如
    
    </summary>
    
      <category term="产品 方法" scheme="http://www.haibin.me/categories/%E4%BA%A7%E5%93%81-%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>为个人项目挤出时间的 10 个绝妙方法</title>
    <link href="http://www.haibin.me/2014/04/13/%E4%B8%BA%E4%B8%AA%E4%BA%BA%E9%A1%B9%E7%9B%AE%E6%8C%A4%E5%87%BA%E6%97%B6%E9%97%B4%E7%9A%84-10-%E4%B8%AA%E7%BB%9D%E5%A6%99%E6%96%B9%E6%B3%95/"/>
    <id>http://www.haibin.me/2014/04/13/为个人项目挤出时间的-10-个绝妙方法/</id>
    <published>2014-04-13T05:06:38.000Z</published>
    <updated>2019-07-03T23:28:43.813Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>把它个人化  </li>
</ol>
<p><img src="http://triz.qiniudn.com/triz_1.jpg">  </p>
<p>从今天开始。做一个个人项目。  </p>
<p>一个个人项目依靠热情支撑。热情将会使你充满能量。把你的对一项业余爱好的热情带到你的个人项目里或者把你的业余爱好变成一个长期的个人项目。如果你一直坚持你的业余爱好，这个网站能够帮助你明天从中获益。像我们看到的那样，这个网站能够让你很容易的从一些乐趣中开始一项业余爱好。  </p>
<p>保持缓步前进 – 这能够帮你解决时间问题以及克服对失败的恐惧感。大处着眼，小处着手(Think big, but start small)。Joel在如何开始一个富有创意的项目一文中对这一古老格言给出了几点精彩的建议。<br><a id="more"></a>  </p>
<ol>
<li>组织整理  </li>
</ol>
<p><img src="http://triz.qiniudn.com/triz_2.jpg">  </p>
<p>这是生产力的关键。</p>
<p>许多人说一个富有创造性的人他的桌子应该是上面的样子。但<br>在我看来，这是浪费时间的罪魁祸首。我们花费了30%的时间用来找东西。这也是人们为什<br>么发明文件归档系统的原因。开始为你业余项目整理所用的工具吧。如果它是数字化的，花一天时间来整理你的电脑任何一个个人项目都需要一个信息收集整理的途<br> 径。Aaron推荐了一些调研工具。Hit Pinterest则提出了一些整理桌面的点子。  </p>
<ol>
<li>花一些时间来节约时间  </li>
</ol>
<p><img src="http://triz.qiniudn.com/triz_3.jpg">  </p>
<p> 时间伴随着机会成本。</p>
<p> 去年，NBER发布了一项研究显示了美国人花费在互联网上的时间。</p>
<p> Business Insider这样说到：</p>
<p> 引用<br> 额外的在线时间是以牺牲其他活动为代价的。这使得我们很难指出多少在网上的时间帮助我们提高了生产力而多少时间托了我们的后腿。</p>
<p> NBER使用了从2003 – 2011年时间使用情况调查(Time Use Survey)的数据来进行跟踪。你没必要跟踪如此长的时间使用(和浪费)情况。你可以简单的使用RescueTime或者Toggl来找到你想要的结果。重点是 – 各个事项之间数分钟数小时的碎片时间。我们可以把其中一些拿来做我们的个人项目。即使是一天20分钟，一个月累计下来也有不少时间。</p>
<p> 如果你频繁的在天上飞来飞去或者通勤，这些走过的路途完全可以通过数字化的工具例如智能手机，平板电脑，一个podcast应用甚至是你自己的大脑通过思考点子和列出代办事项来转化成生产力。  </p>
<ol>
<li>在日历上标记出来  </li>
</ol>
<p><img src="http://triz.qiniudn.com/triz_4.jpg">  </p>
<p> 把你的个人项目交给日历。</p>
<p> 日历是我们所拥有的唯一的“时间机器”。日历能够使<br> 我们大致“看到”将来有哪些空闲时间可以用来做个人项目。按照日历上的安排采取广受欢迎的时间<br> 管理方法来做执行例行事件。例行事件能帮你节约时间因为它能让你每天都按点做事。你不必浪费时间去思考下一步该干什么。如果你有一系列的例行事件，那日历<br>  就是一个很好的工具。为你的个人项目创建一个安排计划并且使用日历罗列出来。</p>
<p>  把所有自动的任务放到日历里那日历就能为我们节省大量时间。读读这篇nine IFTTT hacks to superpower your life with Google Calendar。  </p>
<ol>
<li>以游戏的方式进行自我激励  </li>
</ol>
<p><img src="http://triz.qiniudn.com/triz_5.jpg">  </p>
<p>  在玩中思考，以思考为乐</p>
<p>  这很流行。既然游戏化能够被用于健身领域，那它当然也可以被用于激励个人项目。我打赌你一定不会讨厌在忙碌了一天之后来玩一场游戏或者看一场电影。Justin尝试了以游戏的方式提高生产力。他选择了HabitRPG这款游戏并且现在还在使用它。当你通过奖励机制促进了你的生产力，你也就为你的个人项目提升了等级。  </p>
<ol>
<li><p>把它变成你的日常工作  </p>
<p>如果它是你热衷的劳作，那你一定可以把它做好。</p>
<p>Tina Roth Eisenberg强调了不仅要为业余项目投入精力，也要信任它的重要性。她是一位母亲也是一位妻子，但是她也被人们称为的”偶然业务王后(queen of accidental businesses)”。看看那个Do的演讲，很鼓舞人。</p>
<p>写<br>这篇博文就是把个人项目的一部分带入每天工作中的最好例子。它帮助我思考一些关于我的个人项目战略性的东西，同时我也为MakeUseOf发表<br>这篇博文。你也可以把你的所学或者实践经历融入进你的日常工作中。你可能在大学里学习过编码的最佳实践，你可以把它运用到业余项目。你可以把一个业务问题<br>变成一个个人项目并为所有人解决它。Instapaper来源于一个因匆忙而来不及阅读网页文章的简单问题。它是Marco Arment的一个个人项目，Marco目前就职于Tumblr。  </p>
</li>
<li>外包的时间价值  </li>
</ol>
<p><img src="http://triz.qiniudn.com/triz_7.jpg"><br>以效率估算你的时间。你的个人项目或许用不着。外包是为你的个人项目释放时间的有效途径。在今天，你可以外包日常任务例如洗衣服，做饭，买东西，记账，进行商业演讲等。然后获得更多的时间(get more than 24 hours a day)。你可以从类似Craigslist或者Fiverr或者类似Fiverr这样的网站上获取本地的帮助.   </p>
<ol>
<li>在网络上与志同道合的人们一起<br><img src="http://triz.qiniudn.com/triz_8.jpg"><br>协作带来无限可能。Twitter源自于Odeo的失败。我们知道那是Jack Dorsey的个人项目，但那并不是一个人单枪匹马的个人成果。与他人协作可以加速你的个人项目进程，并且释放更多的时间使你能够集中于你关注的任务上.众包和协作社区能够使你方便的找到志同道合的人帮助你把热情带入生活中。访问Reddit上的r/sideproject在那里人们正在讨论他们的业余项目和想法。做点什么或者仅仅是讨论它都为每个项目做出了一次提交并且使它感觉更加真实.缺乏资金？在Kickstarter，Indiegogo和RocketHub上同全球的社区进行协作。如果没有别的选择，你可以通过社交媒体或者博客来与他人分享你的个人项目。然而，不是所有的项目都需要和大家共享.   </li>
<li>不要停止捕捉灵感<br><img src="http://triz.qiniudn.com/triz_9.jpg"><br>及时的点子节省更多时间。<br>我在Evernote上有个宝典用来记录灵感，生活技巧，时间管理小建议，键盘快捷键，或者其他帮助我变得更加效率的事情。灵感帮助我的个人项目<br>更进一步并且找到了新的出路。捕捉灵感几乎每天都帮助我对我个人项目的想法保持前瞻性和围绕中心。我可能不会每天都在主要项目上取得进步，但只要我捕捉到<br>一点点关于它的灵感，我都把它当作充实的一天。不要光靠你的记性。记录它，存储它。你可以使用一个通用的工具例如用Google Drive来捕捉和酝酿你的灵感。   </li>
<li>给它一些时间  </li>
</ol>
<p>要记得，是乌龟赢得了比赛。  </p>
<p>一个个人项目通常都不是为了钱。我们完成它的过程实际上我们在上面下了很大的赌注。就我个人来讲，我不奢求完美。它仅仅是我创造东西的乐趣的延伸。我知道我将会从失败中学到很多东西。一点点小小的在我个人项目上的进步都使得这一天是值得的，即使最后它被废弃了。或许有一天，我可能不会再将它放进我的to-do list…但是我曾经做过了。<br>这篇博文源自于Paul Jarvis的一篇非常精彩的文章。他讲到要把你的业余项目当作一种试验。他说个人项目可能会吓到我们并且对失败的恐惧也会阻止我们前进的脚步。<br>引用<br>要克服我自己对失败的恐惧，我开始想象这些只是一些简单的试验。试验没有失败 – 他们只是证明或反驳了一些假设。跟我们谈谈你的个人项目<br>如果看了这篇文章你对个人项目重燃信心，那你是幸运的。如果你没有，那你需要花点时间来解封你的创造性思维并且想出一个个人项目。你有个人项目么？你是如何为它抽出时间的？那你愿不愿意与我们分享它，或者一些在繁忙中抽出时间的建议。<br>  原文链接： makeuseof.com 翻译： 极客范 - Boyd Wang<br>  译文链接： <a href="http://www.geekfan.net/9057/" target="_blank" rel="noopener">http://www.geekfan.net/9057/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;把它个人化  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;http://triz.qiniudn.com/triz_1.jpg&quot;&gt;  &lt;/p&gt;
&lt;p&gt;从今天开始。做一个个人项目。  &lt;/p&gt;
&lt;p&gt;一个个人项目依靠热情支撑。热情将会使你充满能量。把你的对一项业余爱好的热情带到你的个人项目里或者把你的业余爱好变成一个长期的个人项目。如果你一直坚持你的业余爱好，这个网站能够帮助你明天从中获益。像我们看到的那样，这个网站能够让你很容易的从一些乐趣中开始一项业余爱好。  &lt;/p&gt;
&lt;p&gt;保持缓步前进 – 这能够帮你解决时间问题以及克服对失败的恐惧感。大处着眼，小处着手(Think big, but start small)。Joel在如何开始一个富有创意的项目一文中对这一古老格言给出了几点精彩的建议。&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker 部署server应用</title>
    <link href="http://www.haibin.me/2014/02/18/2014-02-18-docker-tips/"/>
    <id>http://www.haibin.me/2014/02/18/2014-02-18-docker-tips/</id>
    <published>2014-02-18T15:02:22.000Z</published>
    <updated>2019-07-03T23:28:43.805Z</updated>
    
    <content type="html"><![CDATA[<p>最近想用<a href="http://www.docker.io" target="_blank" rel="noopener">docker</a>部署自己的一些应用，但在部署构建镜像的时候经常会出现错误，那么镜像构建不成功。<br>最好的办法是删除不成功的镜像<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker images|<span class="type">grep</span> <span class="string">"&lt;none&gt;"</span>|<span class="type">awk</span> '&#123;print $<span class="number">3</span>&#125;'|<span class="type">sudo</span> xargs docker rmi</span><br></pre></td></tr></table></figure></p>
<p>如果不成功，那么就应该删除container<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker ps -a|<span class="type">grep</span> <span class="string">"&lt;image id&gt;"</span>|<span class="type">awk</span> '&#123;print $<span class="number">1</span>&#125;'|<span class="type">sudo</span> xargs docker rm</span><br></pre></td></tr></table></figure></p>
<p>\<image id\="">替换为无法删除的镜像ID。<br>如果删除container错误,有以下几个办法解决  </image></p>
<ul>
<li>停止容器<code>sudo docker stop &lt;container id&gt;</code>或者<code>sudo docker kill &lt;container id&gt;</code>;  </li>
<li>重新启动docker守护进程，然后在执行上面删除操作,<code>sudo service docker restart</code>.<br>这下重新构建进行就重头开始了。 </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近想用&lt;a href=&quot;http://www.docker.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;docker&lt;/a&gt;部署自己的一些应用，但在部署构建镜像的时候经常会出现错误，那么镜像构建不成功。&lt;br&gt;最好的办法是删除不成功的镜像&lt;br&gt;
    
    </summary>
    
      <category term="技巧" scheme="http://www.haibin.me/categories/%E6%8A%80%E5%B7%A7/"/>
    
    
  </entry>
  
  <entry>
    <title>pandora优先产品评定系统</title>
    <link href="http://www.haibin.me/2014/02/13/2014-02-13-pandora-priority-product-evaluation-system/"/>
    <id>http://www.haibin.me/2014/02/13/2014-02-13-pandora-priority-product-evaluation-system/</id>
    <published>2014-02-13T06:08:35.000Z</published>
    <updated>2019-07-03T23:28:43.804Z</updated>
    
    <content type="html"><![CDATA[<p>准备好用于“购买”想法的便利贴<br>下面是<a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a>践行上述理论的真实场景：<br>每个季度，<a href="http://investor.pandora.com/phoenix.zhtml?c=227956&amp;p=irol-govBio&amp;ID=212489" target="_blank" rel="noopener">Conrad</a> 都会将展示所有 80 个想法的幻灯片打印出来并贴在墙上，每个幻灯片上都会贴上所述想法所值的美元数。然后他会给所有的优先产品评定小组成员一些便利贴。举例来说，如果优先产品评定团队共有 5 个人，你所拥有的工作量共值 150 美元。那么你需要准备 30 份便利贴，每个便利贴上都写上“5 美元”字样，这说明这张便利贴值 5 美元。团队里的 5 个人每人分 6 张便利贴，这样每人拥有的便利贴共值 30 美元，他们也就可以用自己值钱的便利贴“购买”自己看中的想法，这和投票的意思差不多。  </p>
<a id="more"></a>
<p>“当优先产品团队的成员看到所有的这些新想法时，他们会发现公司里的人们渴望的新功能是那么多。他们每个人最初都会觉得自己看中的新想法如果不付诸实施便是愚蠢，不过当他们了解所有的这些新想法时，他们就会发现‘我们要做的工作还有很多’。”<br>接下来就是最难也是最有趣的一步了。优先产品团队里的所有成员开始研究这些展示各个想法的幻灯片，然后用自己手里的每张值 5 美元的便利贴来“购买”自己认为最具价值的想法。<br>通常情况下，在“购买”程序结束后，近一半的在幻灯片上展示的想法都得不到一张便利贴的“购买”支持。<br>有一些想法在经过“购买”这种投票程序后能立刻得到足额的“购买”支持。如果一个值 20 美元的想法获得了 4 张便利贴的支持，这就意味着公司会在下一个季度对这一想法进行大量投入，并将其转化为实实在在的产品功能。<br>“要促使公司里的每个人的步调都与对公司而言重要的事情保持一致。”<br>经常会出现这种情况：在“购买”程序结束后，人们会依据上面这句话所蕴含的意思去重新分配便利贴。在“购买”程序中没有得到足够多便利贴支持的想法在经过便利贴的重新分配后或许也能重新得到足够多的支持。“不管怎样，最后只有大概 20 个想法能得到保留并付诸实施，其余的大部分想法都会被舍弃。”<a href="http://investor.pandora.com/phoenix.zhtml?c=227956&amp;p=irol-govBio&amp;ID=212489" target="_blank" rel="noopener">Conrad</a> 说道。<br>在 <a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a>，<a href="http://investor.pandora.com/phoenix.zhtml?c=227956&amp;p=irol-govBio&amp;ID=212489" target="_blank" rel="noopener">Conrad</a> 和他的团队连续八年都在使用这种方法筛选优质想法并付诸实施，每年 4 次，从未间断。这里就体现了“购买”的力量。因为在“购买”想法时，优先产品团队中的每个成员都是用自己手里的值钱的“便利贴”来主动“购买”的，因此他们不会觉得自己是被迫将有限的精力投放在自己并不相信的想法上的，而是自己主动选择的。<br><a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a>实践时间<br><a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a> 会在每个季度开始前的 2 至 3 周便开始自己的优先产品评定工作，以便让产品开发团队有足够的时间来完成上个周期未完成的产品开发工作。在 20 个新想法项目最终确定后，接下来就得加速将这些想法具体化，以便能让所有人对接下来 90 天的主要工作有具体的了解。<br>“这里有两点非常重要：公司领导层要真正赞成并全力支持上述上述整个流程；此外，要让大家了解到公司能利用的资源是有限的，因此只能将有限资源优先投放在一些重要的产品功能开发上，同时在进行产品功能开发时，效率至关重要，让大家看到他们的想法时可以快速实现的。”Conrad 说道。<br>“在重新汇集一批想法后，如果你将这些想法和上一批汇集到的而最终被舍弃的 60 个想法进行比较的话，你会发现产品功能已经有了很大的改进。”优先产品评定团队会重新汇集一批想法，其中的很多想法他们并未深入探讨过。“这给我的启示是，我们需要长久地践行这一理论。在每个为期 3 个月的周期过去后，公司都会实现成长。”<a href="http://investor.pandora.com/phoenix.zhtml?c=227956&amp;p=irol-govBio&amp;ID=212489" target="_blank" rel="noopener">Conrad</a> 说道。<br>“两年前，在 Pandora IPO 后，我们组建了一个由不同团队组成的工程师组织。各个团队对各自的优先产品评定负责。作为一家上市公司，你必须还要有很多与营收相关的长远计划，对投资者而言，你也要变得更为可预见性，而营收是和产品密切相关的。”<a href="http://investor.pandora.com/phoenix.zhtml?c=227956&amp;p=irol-govBio&amp;ID=212489" target="_blank" rel="noopener">Conrad</a> 说道。<br>公司规模扩大并不意味着就一定需要更多的工程师。<br>“<a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a> 规模越大，公司越难就优先产品评定迅速做出决策。因此我们通过工程师组织下的各个团队来实现对优先产品的快速评定，各个团队对各自的优先产品评定负具体责任。今天，<a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a> 的工程师数量也只有 80 个左右。我认为我们的成功与我们的优先产品决策能力密切相关。”<a href="http://investor.pandora.com/phoenix.zhtml?c=227956&amp;p=irol-govBio&amp;ID=212489" target="_blank" rel="noopener">Conrad</a> 说道。<br>具体步骤<br>如果你也想采用 <a href="http://www.pandora.com" target="_blank" rel="noopener">Pandora</a> 的优先产品评定系统，那么可以参考以下步骤：  </p>
<ol>
<li>在每个季度开始前，问自己这样一个问题：“在接下来的 90 天里，我们不做哪些工作就是愚蠢？”  </li>
<li>将每一个想法分别在一张幻灯片上展示出来。  </li>
<li>大致预计实现每个想法所需要的工作量，以及预计你目前拥有的工作量能否满足实现这些想法所需要的工作量。  </li>
<li>以美元来衡量工作量：5 美元 =1 个工程师一个月能完成的工作量，10 美元 =1 个工程师两个月能完成的工作量，以此类推。如果你有 10 个工程师，那么他们 3 个月的工作总量就值 150 美元。在每一张幻灯片上标注幻灯片上所述想法所需工作量所对应的美元值。  </li>
<li>挑选成员组成优先产品评定小组，他们负责从所有的想法中挑选评定优质想法。挑选的人员一定要对整个公司富有强烈的责任心。  </li>
<li>如果优先产品团队共有 5 个人，拥有工作量共值 150 美元。那么你需要准备 30 份便利贴，每个便利贴上都写上“5 美元”字样，这说明这张便利贴值 5 美元。团队里的 5 个人每人分 6 张便利贴，这样每人拥有的便利贴共值 30 美元，他们也就可以用手中值钱的便利贴“购买”看中的想法。  </li>
<li>将展示想法的幻灯片打印出来贴在墙上，向优先产品团队成员挨个讲述每个想法。  </li>
<li>成员可将自己手里值钱的便利贴帖在展示有自己看中的想法的幻灯片上，成员通过这种方式来“购买”他们认为最具价值的想法。  </li>
<li>“购买”程序结束后，优先产品团队成员可以讨论是否需要重新分配这些便利贴。  </li>
<li>评定结束后，你就知道接下来的 3 个月要完成哪些工作了。  </li>
<li>最后就要着手产品开发工作了，同时确保公司里的每个人都知道这些决定是如何作出的。将优先产品评定制度变成公司文化的一部分。  </li>
<li>90 天后重复上述程序。一切重新开始。  </li>
</ol>
<p>引用文章: </p>
<ul>
<li><a href="http://www.36kr.com/p/209613.html" target="_blank" rel="noopener">http://www.36kr.com/p/209613.html</a>  </li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;准备好用于“购买”想法的便利贴&lt;br&gt;下面是&lt;a href=&quot;http://www.pandora.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Pandora&lt;/a&gt;践行上述理论的真实场景：&lt;br&gt;每个季度，&lt;a href=&quot;http://investor.pandora.com/phoenix.zhtml?c=227956&amp;amp;p=irol-govBio&amp;amp;ID=212489&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Conrad&lt;/a&gt; 都会将展示所有 80 个想法的幻灯片打印出来并贴在墙上，每个幻灯片上都会贴上所述想法所值的美元数。然后他会给所有的优先产品评定小组成员一些便利贴。举例来说，如果优先产品评定团队共有 5 个人，你所拥有的工作量共值 150 美元。那么你需要准备 30 份便利贴，每个便利贴上都写上“5 美元”字样，这说明这张便利贴值 5 美元。团队里的 5 个人每人分 6 张便利贴，这样每人拥有的便利贴共值 30 美元，他们也就可以用自己值钱的便利贴“购买”自己看中的想法，这和投票的意思差不多。  &lt;/p&gt;
    
    </summary>
    
      <category term="方法" scheme="http://www.haibin.me/categories/%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>TRIZ概述</title>
    <link href="http://www.haibin.me/2014/02/05/2014-02-05-what-triz/"/>
    <id>http://www.haibin.me/2014/02/05/2014-02-05-what-triz/</id>
    <published>2014-02-05T03:52:35.000Z</published>
    <updated>2019-07-03T23:28:43.804Z</updated>
    
    <content type="html"><![CDATA[<p>TRIZ，中文音译为：萃智；<br>TRIZ，就是“发明问题解决理论”的俄文首字母对应转换为拉丁字母的缩写；<br><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TRIZ <span class="comment">---Teoriya Resheniya Izobretatelskikh Zadatch （拉丁文）  </span></span><br><span class="line">        Теория  Решения  Изобретательских   Задач  (俄文)</span><br></pre></td></tr></table></figure></p>
<p>Altshuller被尊称为TRIZ之父。<br><img src="http://triz.qiniudn.com/triz_father.jpg"><br><a id="more"></a><br>1946年，前苏联发明家G. S. Altshuller完成了他的第一项成熟的发明——在没有潜水服的情况下，从被困的潜水艇中逃生的方法，也正是在这一年，TRIZ（发明问题解决理论）开始萌芽。<br>1946年之后，Altshuller逐渐展开发明问题解决理论的研究工作。当时Altshuller在前苏联里海海军的专利局工作，在处理世界各国著名的发明专利过程中，他总是考虑这样一个问题：当人们进行发明创造、解决技术难题时，是否有可遵循的科学方法和法则，从而能迅速地实现新的发明创造或解决技术难题呢？Altshuller坚信这样的发明创造方法一定存在。在发现从心理学角度不能很好地揭示发明创造的客观规律之后，他逐渐认识到发明的实质就是技术系统发生根本性变化，他因此将注意力转移到专利文献的分析研究上。他从来自于世界各地的20多万项专利中挑选了4万已产生发明成就的专利开始进行严格分析。这一工作成果铸就了TRIZ的理论基础，也为日后将要开发的问题解决工具奠定了基础。<br>Altshuller在研究过程中发现任何领域的产品改进、技术的变革、创新和生物系统一样，都存在产生、生长、成熟、衰老、灭亡的过程，都是有规律可循的。人们一旦掌握这些规律，能动地进行产品设计并预测产品的未来发展趋势便成为可能。以后数十年中，Altshuller穷其毕生的精力致力于TRIZ理论的研究和完善。在他的组织参与下，前苏联的数十家研究机构、大学、企业组成了TRIZ的研究团体，分析研究了世界200万份发明专利。经过多年努力，Altshuller及其团队总结出各种技术发展进化遵循的规律模式，以及解决各种技术矛盾和物理矛盾的创新原理和法则，建立一个由解决技术问题，实现创新开发的各种方法、算法组成的综合理论体系，并综合多学科领域的原理和法则，建立起TRIZ理论体系。<br>相对于传统的创新方法，比如试错法，头脑风暴法等，TRIZ理论具有鲜明的特点和优势。它成功地揭示了创造发明的内在规律和原理，着力于澄清和强调系统中存在的矛盾，而不是逃避矛盾，其目标是完全解决矛盾，获得最终的理想解，而不是采取折衷或者妥协的做法，而且它是基于技术的发展演化规律研究整个设计与开发过程，而不再是随机的行为。实践证明，运用TRIZ理论，可大大加快人们创造发明的进程而且能得到高质量的创新产品。它能够帮助我们系统的分析问题情境，快速发现问题本质或者矛盾，它能够准确确定问题探索方向，不会错过各种可能，而且它能够帮助我们突破思维障碍，打破思维定势，以新的视觉分析问题，进行逻辑性和非逻辑性的系统思维，还能根据技术进化规律预测未来发展趋势，帮助我们开发富有竞争力的新产品。<br>在前苏联，大多数有工程专业的高等学府，都长期为学生提供TRIZ理论课程。TRIZ同时也广泛应用于前苏联的工程领域中。苏联解体后，随着大批TRIZ理论研究者移居美国等西方国家，TRIZ也在西方迅速流传开，并受到极大重视，而TRIZ的研究与实践随之得以普及和发展。之后不久，西北欧、美国、日本、台湾等地出现了以TRIZ为基础的研究、咨询机构和公司，一些大学将TRIZ列为工程设计方法学课程。经过半个多世纪的发展，如今TRIZ理论和方法已经发展成为一套解决新产品开发实际问题的成熟的理论和方法体系。经过无数实践检验的TRIZ理论，具有工程实用性强等显著特征，如今正在被全世界广泛应用，创造出成千上万项重大发明，为众多知名企业取得了重大的经济效益和社会效益。<br>TRIZ理论进入中国应该在上世纪70-80年代，但对其深入研究和应用则是近10年的事情。近年来，TRIZ理论已经逐渐得到国内诸多科研机构、公司和专家的重视。  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;TRIZ，中文音译为：萃智；&lt;br&gt;TRIZ，就是“发明问题解决理论”的俄文首字母对应转换为拉丁字母的缩写；&lt;br&gt;&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;TRIZ &lt;span class=&quot;comment&quot;&gt;---Teoriya Resheniya Izobretatelskikh Zadatch （拉丁文）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Теория  Решения  Изобретательских   Задач  (俄文)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Altshuller被尊称为TRIZ之父。&lt;br&gt;&lt;img src=&quot;http://triz.qiniudn.com/triz_father.jpg&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="方法" scheme="http://www.haibin.me/categories/%E6%96%B9%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>fedora下代理上网</title>
    <link href="http://www.haibin.me/2014/02/01/2014-02-01-how-to-set-proxy-with-wallproxy/"/>
    <id>http://www.haibin.me/2014/02/01/2014-02-01-how-to-set-proxy-with-wallproxy/</id>
    <published>2014-02-01T13:11:07.000Z</published>
    <updated>2019-07-03T23:28:43.803Z</updated>
    
    <content type="html"><![CDATA[<p>以前是使用<a href="https://code.google.com/p/goagent" target="_blank" rel="noopener">goagent</a>代理上网，由于需要看youtube视频，所以就更改为<a href="https://github.com/wallproxy/wallproxy" target="_blank" rel="noopener">wallproxy</a>。<br><a href="https://github.com/wallproxy/wallproxy" target="_blank" rel="noopener">wallproxy</a>设置好了后，会出现<a href="https://www.youtube.com" target="_blank" rel="noopener">youtube</a>无法访问，所以需要导入证书。  </p>
<pre><code>sudo yum install nss-tools  
certutil -d sql:$HOME/.pki/nssdb -A -t TC -n &quot;goagent&quot; -i &lt;my wallproxy path&gt;/wallproxy/local/cert/missing/CA.crt
</code></pre><p>记录下来，方便以后查找.  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前是使用&lt;a href=&quot;https://code.google.com/p/goagent&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;goagent&lt;/a&gt;代理上网，由于需要看youtube视频，所以就更改为&lt;a href=&quot;https://git
    
    </summary>
    
      <category term="工具" scheme="http://www.haibin.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
  </entry>
  
  <entry>
    <title>亲密小伙伴fedora</title>
    <link href="http://www.haibin.me/2014/01/24/2014-01-24-my-partner-fedora/"/>
    <id>http://www.haibin.me/2014/01/24/2014-01-24-my-partner-fedora/</id>
    <published>2014-01-24T15:22:29.000Z</published>
    <updated>2019-07-03T23:28:43.803Z</updated>
    
    <content type="html"><![CDATA[<p>经过几年的开发，尝试过无数的操作系统，渐渐的也形成了自己的御用操作系统，我选择的是fedora，你要问我原因，其实我也不知道，如果非要找一个理由的话，你可以用谷歌找出N个理由。<br>下面我主要是记录我和我的小伙伴之间的故事。<br><a id="more"></a><br>一. 基础系统<br>1.1 准备镜像<br>这一步是比较简单的，在站点上下载<a href="http://download.fedoraproject.org/pub/fedora/linux/releases/20/Live/x86_64/Fedora-Live-Desktop-x86_64-20-1.iso" target="_blank" rel="noopener">fedora的安装镜像</a><br>1.2 准备live-usb<br>下载<a href="https://fedorahosted.org/releases/l/i/liveusb-creator/liveusb-creator-3.12.0-setup.exe" target="_blank" rel="noopener">live usb creator</a>,根据提示将fedora烧录到u盘中。<br>1.3 安装系统<br>从u盘启动,按照提示安装fedora操作系统<br>二. 开发环境<br>由于安装是桌面的android系统，所以需要对其进行必要的配置<br>2.1 安装基础软件<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum<span class="built_in"> upgrade </span>-y  </span><br><span class="line">sudo yum install vim zsh tmux openssh-server openssh-client -y</span><br></pre></td></tr></table></figure></p>
<p>2.2 虚拟系统LXC<br>虚拟系统LXC，我选择更加灵活和快速的<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>,<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>的安装在<a href="http://www.fedoraproject.org" target="_blank" rel="noopener">fedora</a>下更加方便.<br><a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>与docker会发生冲突,所以，如果<a href="http://www.fedoraproject.org" target="_blank" rel="noopener">fedora</a>中安装的有docker，首先必须删除:<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> rpm -qa <span class="string">"docker"</span></span><br></pre></td></tr></table></figure></p>
<p>如果有docker的信息，那么就必须移除<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="builtin-name">remove</span> <span class="string">"docker"</span> -y</span><br></pre></td></tr></table></figure></p>
<p>在<a href="http://www.fedoraproject.org" target="_blank" rel="noopener">fedora-20</a>中，wmdocker包提供与docker相同的函数,并且和<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>不相冲突.<br>安装wmdocker包<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> wmdocker -y   </span><br><span class="line">sudo yum <span class="keyword">remove</span> docker -y</span><br></pre></td></tr></table></figure></p>
<p>安装<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a><br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> docker-io -y</span><br></pre></td></tr></table></figure></p>
<p>更新<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a><br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">update</span> docker-io -<span class="built_in">y</span></span><br></pre></td></tr></table></figure></p>
<p><a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>安装完毕后，让<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>后端启动.<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="literal">start</span> docker</span><br></pre></td></tr></table></figure></p>
<p>如果要<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>在启动系统的时候启动.<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="builtin-name">enable</span> docker</span><br></pre></td></tr></table></figure></p>
<p>在国内会出现<a href="http://index.docker.io" target="_blank" rel="noopener">docker-index</a>无法访问，那么可以参考<a href="/blog/2014/01/20/how-to-start-docker/">这篇文章</a><br>检验<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a>安装是否成功<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker <span class="keyword">run</span><span class="bash"> -i -t <span class="string">"fedora"</span> /bin/<span class="built_in">echo</span> <span class="string">"hello,docker"</span></span></span><br></pre></td></tr></table></figure></p>
<p>如果出现<code>hello,docker</code>，那么安装就成功.<br>下载<a href="http://www.docker.io" target="_blank" rel="noopener">docker-io</a> 镜像<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo</span> docker pull <span class="string">'fedora'</span>  </span><br><span class="line">sudo docker pull <span class="string">'centos'</span>  </span><br><span class="line">sudo docker pull <span class="string">'ubuntu'</span></span><br></pre></td></tr></table></figure></p>
<p>2.3 配置开发环境<br>开发环境其实也比较的简单，如果是服务端编程，我使用的是vim+插件的方式，具体可以参考<a href="https://github.com/haibinpark/gorc" target="_blank" rel="noopener">我的开发环境</a><br>2.3.1 golang开发环境配置<br>其实vim+plugin开发go语言的项目还是挺方便的，可以参考<a href="https://github.com/haibinpark/gorc/blob/master/README.md" target="_blank" rel="noopener">文章</a><br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone -<span class="keyword">b</span> golang http<span class="variable">s:</span>//github.<span class="keyword">com</span>/haibinpark/gorc.git  </span><br><span class="line"><span class="keyword">ln</span> -s ~/gorc ~/.<span class="keyword">vim</span></span><br></pre></td></tr></table></figure></p>
<p>2.3.2 cplusplus开发环境配置<br>对于c++开发，就相对来说要复杂写，由于使用自动提示插件<code>YCM</code>,所以需要CLANG。<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone -<span class="keyword">b</span> golang http<span class="variable">s:</span>//github.<span class="keyword">com</span>/haibinpark/gorc.git  </span><br><span class="line"><span class="keyword">ln</span> -s ~/gorc ~/.<span class="keyword">vim</span></span><br></pre></td></tr></table></figure></p>
<p>让后要编译<code>YCM</code>插件<br>2.3.3 android开发环境<br>android开发必须要jdk支持  </p>
<ul>
<li><p>安装jdk  </p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//download.oracle.com/otn-pub/java/jdk/7u51-b13/jdk-7u51-linux-x64.rpm  </span></span><br><span class="line">sudo yum install jdk-<span class="number">7</span>u51-linux-x64<span class="selector-class">.rpm</span> -y</span><br></pre></td></tr></table></figure>
</li>
<li><p>下载<a href="http://developer.android.com/sdk/installing/studio.html" target="_blank" rel="noopener">android studio</a>  </p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http<span class="variable">s:</span>//<span class="keyword">dl</span>.google.<span class="keyword">com</span>/android/studio/install/<span class="number">0.3</span>.<span class="number">2</span>/android-studio-bundle-<span class="number">132.893413</span>-linux.tgz  </span><br><span class="line">sudo tar zxf android-studio-bundle-<span class="number">132.893413</span>-linux.tgz  </span><br><span class="line"><span class="keyword">cd</span> android studio  </span><br><span class="line"><span class="keyword">sh</span> studio.<span class="keyword">sh</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>不过要更新到最新版本 </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;经过几年的开发，尝试过无数的操作系统，渐渐的也形成了自己的御用操作系统，我选择的是fedora，你要问我原因，其实我也不知道，如果非要找一个理由的话，你可以用谷歌找出N个理由。&lt;br&gt;下面我主要是记录我和我的小伙伴之间的故事。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://www.haibin.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>Docker小技巧</title>
    <link href="http://www.haibin.me/2014/01/20/2014-01-20-how-to-start-docker/"/>
    <id>http://www.haibin.me/2014/01/20/2014-01-20-how-to-start-docker/</id>
    <published>2014-01-20T09:28:35.000Z</published>
    <updated>2019-07-03T23:28:43.802Z</updated>
    
    <content type="html"><![CDATA[<p>在国内，由于网络原因，在docker部署的时候，经常会出现<code>can&#39;t reach index.docker.io</code>,解决方法:<br>首先获得IP地址:<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ping registry-<span class="number">1</span>.docker.io</span><br><span class="line">```  </span><br><span class="line"><span class="symbol">获得IP地址:</span></span><br><span class="line">`54.<span class="number">224.119</span>.<span class="number">89</span>`</span><br><span class="line">添加一下内容到/etc/hosts</span><br></pre></td></tr></table></figure></p>
<p>54.224.119.89 cdn-registry-1.docker.io<br><code>``
Windows路径：</code>C:\Windows\System32\drivers\etc`</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在国内，由于网络原因，在docker部署的时候，经常会出现&lt;code&gt;can&amp;#39;t reach index.docker.io&lt;/code&gt;,解决方法:&lt;br&gt;首先获得IP地址:&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;tab
    
    </summary>
    
      <category term="技术" scheme="http://www.haibin.me/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>个人年度计划</title>
    <link href="http://www.haibin.me/2014/01/16/2014-01-16-plan/"/>
    <id>http://www.haibin.me/2014/01/16/2014-01-16-plan/</id>
    <published>2014-01-16T13:58:50.000Z</published>
    <updated>2019-07-03T23:28:43.802Z</updated>
    
    <content type="html"><![CDATA[<p>2014年,新的一年，对自己提出了新的要求，希望自己在新的一年能够有所提高，有所专注。  </p>
<p>翻译<br>继续关注CoreOS,并且文档继续翻译，完成2013年未完成的部分，更新新的特性，具体的项目地址<br><code>https://github.com/cloudcube/coreos-manual-chinese</code><br>项目<br>使用golang，完成一个项目,并且开源.<br>读书<br>阅读6本以上专业书籍，阅读10本以上非专业书籍。<br>专注<br>图形数据库在推荐系统中的应用<br>技能<br>继续深入c++,加强这方面的基本功<br>深入了解jvm虚拟机<br>深入了解Android内核<br>深层次对比关系数据库和图形数据库.<br>爱好<br>2014年继续关注<code>逻辑思维</code>自媒体，听罗胖子讲他的互联网思维。<br>持续关注的有价值的自媒体还有:<br><code>人生如戏</code><br><code>鬼脚七</code><br><code>道哥的黑办报</code><br>在2014年，尝试做做手工。到时候，代码写不动了，还可以编草鞋!不至于被饿死.呵呵呵…<br>当然博客也要继续写下去，练练文笔也不错啊!</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2014年,新的一年，对自己提出了新的要求，希望自己在新的一年能够有所提高，有所专注。  &lt;/p&gt;
&lt;p&gt;翻译&lt;br&gt;继续关注CoreOS,并且文档继续翻译，完成2013年未完成的部分，更新新的特性，具体的项目地址&lt;br&gt;&lt;code&gt;https://github.com/c
    
    </summary>
    
      <category term="计划" scheme="http://www.haibin.me/categories/%E8%AE%A1%E5%88%92/"/>
    
    
  </entry>
  
</feed>
